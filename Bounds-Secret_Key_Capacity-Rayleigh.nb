(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    372309,       7163]
NotebookOptionsPosition[    365943,       7040]
NotebookOutlinePosition[    366307,       7056]
CellTagsIndexPosition[    366264,       7053]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Bounds on the Ergodic Secret-Key Capacity", "Title",
 CellChangeTimes->{{3.782547833006117*^9, 3.782547849322164*^9}, {
  3.782547929609606*^9, 3.7825479396399717`*^9}, {3.78332157389123*^9, 
  3.7833215794450502`*^9}, {3.783329864154776*^9, 3.783329866001371*^9}, {
  3.788001385819478*^9, 
  3.7880013860227613`*^9}},ExpressionUUID->"5b7754a2-689c-40d9-b222-\
d595c26e76e0"],

Cell[TextData[{
 StyleBox["Author:",
  FontSlant->"Italic"],
 " Karl-Ludwig Besser, Technische Universit\[ADoubleDot]t Braunschweig\nThis \
notebook is part of the paper \"Bounds on the Ergodic Secret-Key Capacity for \
Dependent Fading Channels\" (https://ieeexplore.ieee.org/document/9097120).\n\
If you use any of this work, please cite the above paper."
}], "Text",
 CellChangeTimes->{{3.788001113521154*^9, 3.78800120588973*^9}, {
   3.78800132094189*^9, 3.788001344297649*^9}, 
   3.7991454104659147`*^9},ExpressionUUID->"f3f8677c-f190-49f5-b946-\
7e7977b79855"],

Cell[CellGroupData[{

Cell["Rayleigh-Fading", "Chapter",
 CellChangeTimes->{{3.7833426205353813`*^9, 
  3.7833426273626013`*^9}},ExpressionUUID->"4d1bb8cd-9188-49d5-bf6f-\
7f30f958f1d8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"invCdf", "[", 
   RowBox[{"u_", ",", " ", "l_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "-", "u"}], "]"}]}], "/", "l"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rate", "[", 
   RowBox[{"x_", ",", " ", "y_", ",", " ", "a_", ",", "b_"}], "]"}], ":=", 
  RowBox[{"Log", "[", 
   RowBox[{"2", ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"a", "*", "x"}], "+", 
       RowBox[{"b", "*", "y"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"b", "*", "y"}]}], ")"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7833211762518063`*^9, 3.7833211861279182`*^9}, {
   3.78332154815716*^9, 3.783321565759922*^9}, {3.7833298716029673`*^9, 
   3.7833298916207943`*^9}, 3.7873101914579973`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"fcc0b134-ad69-4630-a992-5c239ecb9411"],

Cell[CellGroupData[{

Cell["Lower Bound", "Section",
 CellChangeTimes->{{3.7825485443326693`*^9, 3.782548557850665*^9}, {
  3.783321627343713*^9, 3.783321628137937*^9}, {3.7873102024511623`*^9, 
  3.787310203668911*^9}},ExpressionUUID->"35f59e9c-b295-4637-98dc-\
4a21bed53900"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"rate", "[", 
    RowBox[{
     RowBox[{"invCdf", "[", 
      RowBox[{"u", ",", " ", "l"}], "]"}], ",", " ", 
     RowBox[{"invCdf", "[", 
      RowBox[{"u", ",", " ", "k"}], "]"}], ",", " ", "a", ",", " ", "b"}], 
    "]"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Integrand", " ", "for", " ", "lower", " ", "bound"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.782548567233942*^9, 3.782548580232712*^9}, {
  3.783321606391831*^9, 3.7833216067910347`*^9}, {3.787310191461544*^9, 
  3.787310191462439*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"b6d562ad-9f37-4633-9e52-bc18c8db70cd"],

Cell[BoxData[
 FractionBox[
  RowBox[{"Log", "[", 
   FractionBox[
    RowBox[{
     RowBox[{"k", " ", "l"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a", " ", "k"}], "+", 
        RowBox[{"b", " ", "l"}]}], ")"}], " ", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "u"}], "]"}]}]}], 
    RowBox[{"l", " ", 
     RowBox[{"(", 
      RowBox[{"k", "-", 
       RowBox[{"b", " ", 
        RowBox[{"Log", "[", 
         RowBox[{"1", "-", "u"}], "]"}]}]}], ")"}]}]], "]"}], 
  RowBox[{"Log", "[", "2", "]"}]]], "Output",
 CellChangeTimes->{3.787913435445506*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"640faef4-33e5-4544-9f73-f2ba49246791"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"rate", "[", 
    RowBox[{
     RowBox[{"invCdf", "[", 
      RowBox[{"u", ",", " ", "l"}], "]"}], ",", " ", 
     RowBox[{"invCdf", "[", 
      RowBox[{"u", ",", " ", "k"}], "]"}], ",", " ", "a", ",", " ", "b"}], 
    "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"u", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", ">", "0"}], ",", " ", 
      RowBox[{"b", ">", "0"}], ",", " ", 
      RowBox[{"l", ">", "0"}], ",", " ", 
      RowBox[{"k", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.783321609881526*^9, 3.7833216171203213`*^9}, {
  3.7873101914654837`*^9, 3.7873101914662867`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"2413cc80-0255-49d7-a7da-fae2933d8edb"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     FractionBox["k", "b"]], " ", 
    RowBox[{"ExpIntegralEi", "[", 
     RowBox[{"-", 
      FractionBox["k", "b"]}], "]"}]}], "-", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{"k", " ", "l"}], 
      RowBox[{
       RowBox[{"a", " ", "k"}], "+", 
       RowBox[{"b", " ", "l"}]}]]], " ", 
    RowBox[{"ExpIntegralEi", "[", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"k", " ", "l"}], 
       RowBox[{
        RowBox[{"a", " ", "k"}], "+", 
        RowBox[{"b", " ", "l"}]}]]}], "]"}]}]}], 
  RowBox[{"Log", "[", "2", "]"}]]], "Output",
 CellChangeTimes->{3.78791344227359*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"bed83065-0f21-4245-8d9e-068b88f21c61"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"lowerRate", "[", 
   RowBox[{"l_", ",", " ", "k_", ",", " ", "a_", ",", " ", "b_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      FractionBox["k", "b"]], " ", 
     RowBox[{"ExpIntegralEi", "[", 
      RowBox[{"-", 
       FractionBox["k", "b"]}], "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      FractionBox[
       RowBox[{"k", " ", "l"}], 
       RowBox[{
        RowBox[{"a", " ", "k"}], "+", 
        RowBox[{"b", " ", "l"}]}]]], " ", 
     RowBox[{"ExpIntegralEi", "[", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"k", " ", "l"}], 
        RowBox[{
         RowBox[{"a", " ", "k"}], "+", 
         RowBox[{"b", " ", "l"}]}]]}], "]"}]}]}], 
   RowBox[{"Log", "[", "2", "]"}]]}]], "Input",
 CellChangeTimes->{{3.7825486407907763`*^9, 3.782548655568329*^9}, {
   3.7833216430676622`*^9, 3.78332165241035*^9}, 3.783329914034153*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"1291e8fb-a8ba-48dc-a93f-bdf015b8fc7e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"lowerRate", "[", 
    RowBox[{"l", ",", " ", "k", ",", " ", "a", ",", " ", "b"}], "]"}], ",", 
   " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", " ", "b"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Infinity", ",", " ", "Infinity"}], "}"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"l", ">", "0"}], ",", " ", 
      RowBox[{"k", ">", "0"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"lowerRate", "[", 
    RowBox[{"l", ",", " ", "k", ",", 
     RowBox[{"r", "*", "b"}], ",", " ", "b"}], "]"}], ",", " ", 
   RowBox[{"b", "\[Rule]", "Infinity"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"l", ">", "0"}], ",", " ", 
      RowBox[{"k", ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "0"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.787484795466239*^9, 3.7874848155396013`*^9}, {
  3.78748486451552*^9, 3.787484920202915*^9}, {3.7874849530394287`*^9, 
  3.787484970758953*^9}, {3.7879108275976067`*^9, 3.787910837287232*^9}, {
  3.787911019705037*^9, 3.787911050294682*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"02472c75-930c-4bd7-8563-6a33a970a128"],

Cell[BoxData["Indeterminate"], "Output",
 CellChangeTimes->{3.787913446420774*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"13ece26f-5e5b-467a-bf90-297ea97d8888"],

Cell[BoxData[
 FractionBox[
  RowBox[{"Log", "[", 
   RowBox[{"1", "+", 
    FractionBox[
     RowBox[{"k", " ", "r"}], "l"]}], "]"}], 
  RowBox[{"Log", "[", "2", "]"}]]], "Output",
 CellChangeTimes->{3.787913446832765*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"a214a8bc-a033-4b2b-b0aa-0ff80435ee15"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Upper Bound", "Section",
 CellChangeTimes->{{3.782548671006328*^9, 
  3.7825486725643177`*^9}},ExpressionUUID->"d5577a2b-6573-4636-9f07-\
a956e6233268"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"rate", "[", 
    RowBox[{
     RowBox[{"invCdf", "[", 
      RowBox[{"u", ",", " ", "l"}], "]"}], ",", " ", 
     RowBox[{"invCdf", "[", 
      RowBox[{
       RowBox[{"1", "-", "u"}], ",", " ", "k"}], "]"}], ",", " ", "a", ",", 
     " ", "b"}], "]"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Integrand", " ", "for", " ", "upper", " ", "bound"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.782548705418028*^9, 3.7825487241676283`*^9}, {
  3.783321671455812*^9, 3.783321673466774*^9}, {3.7873101914690104`*^9, 
  3.787310191469811*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"1cdf1167-04bf-42d4-a099-6ee4bdbf9b0a"],

Cell[BoxData[
 FractionBox[
  RowBox[{"Log", "[", 
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{"a", " ", "k", " ", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "u"}], "]"}]}], 
     RowBox[{
      RowBox[{"k", " ", "l"}], "-", 
      RowBox[{"b", " ", "l", " ", 
       RowBox[{"Log", "[", "u", "]"}]}]}]]}], "]"}], 
  RowBox[{"Log", "[", "2", "]"}]]], "Output",
 CellChangeTimes->{3.78791344725909*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"cd3b5897-e827-48c8-aa0f-5a5feb4f7c51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"rate", "[", 
    RowBox[{
     RowBox[{"invCdf", "[", 
      RowBox[{"u", ",", " ", "l"}], "]"}], ",", " ", 
     RowBox[{"invCdf", "[", 
      RowBox[{
       RowBox[{"1", "-", "u"}], ",", " ", "k"}], "]"}], ",", " ", "a", ",", 
     " ", "b"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"u", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", ">", "0"}], ",", " ", 
      RowBox[{"b", ">", "0"}], ",", " ", 
      RowBox[{"l", ">", "0"}], ",", " ", 
      RowBox[{"k", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.782548804423451*^9, 3.782548831096704*^9}, {
  3.783321678893568*^9, 3.783321687136256*^9}, {3.7873101914722033`*^9, 
  3.78731019147294*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"64cdc057-9f78-4680-94c0-b630b38a6588"],

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"a", " ", 
         RowBox[{"Log", "[", 
          RowBox[{"1", "-", "u"}], "]"}]}], "l"], "-", 
       FractionBox[
        RowBox[{"b", " ", 
         RowBox[{"Log", "[", "u", "]"}]}], "k"]}], 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"b", " ", 
         RowBox[{"Log", "[", "u", "]"}]}], "k"]}]], "]"}], 
    RowBox[{"Log", "[", "2", "]"}]], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", ">", "0"}], ",", 
      RowBox[{"b", ">", "0"}], ",", 
      RowBox[{"l", ">", "0"}], ",", 
      RowBox[{"k", ">", "0"}]}], "}"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.7879134508734617`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"f957a7dc-e514-4dd5-a5cd-932bbe690062"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"upperRate", "[", 
   RowBox[{"l_", ",", " ", "k_", ",", " ", "a_", ",", " ", "b_"}], "]"}], ":=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"rate", "[", 
     RowBox[{
      RowBox[{"invCdf", "[", 
       RowBox[{"u", ",", " ", "l"}], "]"}], ",", " ", 
      RowBox[{"invCdf", "[", 
       RowBox[{
        RowBox[{"1", "-", "u"}], ",", " ", "k"}], "]"}], ",", " ", "a", ",", 
      " ", "b"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"u", ",", " ", "0", ",", " ", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7825489654459887`*^9, 3.7825490030221863`*^9}, {
   3.783321691043193*^9, 3.783321699869624*^9}, 3.7833217570441217`*^9, {
   3.7833299547767897`*^9, 3.783329968490924*^9}, {3.78731019147519*^9, 
   3.787310191475793*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"11fbc825-8d65-4bc9-abd3-6ee4ce17ff05"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Independent Coefficients", "Section",
 CellChangeTimes->{{3.7825488665661383`*^9, 
  3.7825488700428743`*^9}},ExpressionUUID->"6426f03f-d0ee-4cbd-968d-\
acc855077985"],

Cell["\<\
The expected value is written as E[R(X, Y)] = \
E[log(1+\[Alpha]X+\[Beta]Y)]-E[log(1+\[Beta]Y)] = E[\[CapitalXi]] - E[\
\[CapitalPsi]]. The two expectations are derived in the following for \
independent X and Y.
First, determine the CDF and derive it to get the PDF. Finally, calculate the \
integral for the expected value.
Note that the distribution of Xi looks different in the case of lambda_x/\
\[Alpha] == lambda_y/\[Beta]. In this case, the sum is Erlang distributed and \
the calculations are modified accordingly.\
\>", "Text",
 CellChangeTimes->{{3.78255094462606*^9, 3.7825510399259768`*^9}, {
  3.7825554074797287`*^9, 3.78255544276787*^9}, {3.783342676940414*^9, 
  3.783342761465263*^9}, {3.783343504323925*^9, 
  3.7833435108735456`*^9}},ExpressionUUID->"d8a872cf-2313-4fba-a647-\
c809a5365f7c"],

Cell[CellGroupData[{

Cell["Psi = log(1+\[Beta]Y)", "Subsection",
 CellChangeTimes->{{3.782552891944594*^9, 3.7825528996179028`*^9}, {
  3.783323677198617*^9, 
  3.783323685600301*^9}},ExpressionUUID->"ee7e3fea-18ac-42d6-81a0-\
5dba33848e8b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cdfPsi", "[", 
   RowBox[{"y_", ",", " ", "k_", ",", " ", "b_"}], "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "k"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", "y", "]"}], "-", "1"}], ")"}], "/", "b"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"cdfPsi", "[", 
    RowBox[{"y", ",", " ", "k", ",", " ", "b"}], "]"}], ",", "y"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.782548890934904*^9, 3.782548893438754*^9}, {
  3.7825511144546633`*^9, 3.7825511471012983`*^9}, {3.783323381877008*^9, 
  3.78332338857963*^9}, {3.7833234188794813`*^9, 3.783323486259666*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"e81a146e-e830-4e7a-ad40-04e650f7368d"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["\[ExponentialE]", "y"]}], ")"}], " ", "k"}], "b"]}],
      "+", "y"}]], " ", "k"}], "b"]], "Output",
 CellChangeTimes->{3.7879134510138493`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"8d762b97-6d96-4599-a010-38d6718ff5b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pdfPsi", "[", 
   RowBox[{"y_", ",", " ", "k_", ",", " ", "b_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[ExponentialE]", "y"]}], ")"}], " ", "k"}], 
        "b"]}], "+", "y"}]], " ", "k"}], "b"]}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"y", "*", 
    RowBox[{"pdfPsi", "[", 
     RowBox[{"y", ",", " ", "k", ",", " ", "b"}], "]"}]}], ",", "y"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.782551154204937*^9, 3.782551163666852*^9}, {
  3.782551213662607*^9, 3.782551224046232*^9}, {3.7825512574111032`*^9, 
  3.782551257961946*^9}, {3.783323531765031*^9, 3.783323538032854*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"d0bb776a-6419-4d4b-8f57-1d6db91dcf0c"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   FractionBox["k", "b"]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "y"], " ", "k"}], "b"]}]]}], " ", 
     "y"}], "+", 
    RowBox[{"ExpIntegralEi", "[", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "y"], " ", "k"}], "b"]}], "]"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.787913451155151*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"3f2df88f-180f-4665-9695-d2ca1eb101d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ypdfPsi", "[", 
   RowBox[{"y_", ",", " ", "k_", ",", " ", "b_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    FractionBox["k", "b"]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "y"], " ", "k"}], "b"]}]]}], " ",
       "y"}], "+", 
     RowBox[{"ExpIntegralEi", "[", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", "y"], " ", "k"}], "b"]}], "]"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expectPsi", "[", 
   RowBox[{"k_", ",", " ", "b_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"ypdfPsi", "[", 
      RowBox[{"y", ",", " ", "k", ",", " ", "b"}], "]"}], ",", 
     RowBox[{"y", "\[Rule]", "Infinity"}], ",", " ", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"b", ">", "0"}], " ", ",", 
        RowBox[{"k", ">", "0"}]}], "}"}]}]}], "]"}], "-", 
   RowBox[{"ypdfPsi", "[", 
    RowBox[{"0", ",", " ", "k", ",", " ", "b"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"expectPsi", "[", 
  RowBox[{"k", ",", " ", "b"}], "]"}]}], "Input",
 CellChangeTimes->{{3.782551341551999*^9, 3.782551418756353*^9}, 
   3.783323551275478*^9, {3.7833236236652184`*^9, 3.783323659811674*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"69e71540-6f87-4127-8378-1b17e5d3b230"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox["k", "b"]]}], " ", 
  RowBox[{"ExpIntegralEi", "[", 
   RowBox[{"-", 
    FractionBox["k", "b"]}], "]"}]}]], "Output",
 CellChangeTimes->{3.787913451345887*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"d870caa9-de97-475d-83ca-bfe3c14b36d1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Xi = log(1+\[Alpha]X+\[Beta]Y)", "Subsection",
 CellChangeTimes->{{3.782552905288365*^9, 3.782552910401361*^9}, {
  3.783330198908258*^9, 3.783330204272735*^9}, {3.783342773180819*^9, 
  3.78334277710833*^9}, {3.783343524826593*^9, 
  3.7833435251866627`*^9}},ExpressionUUID->"1caa3d0b-d056-485a-a851-\
4800e7334a14"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pdfXpY", "[", 
   RowBox[{"z_", ",", " ", "l_", ",", " ", "k_"}], "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"l", "^", "2"}], "*", "z", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "l"}], "*", "z"}], "]"}]}], ",", " ", 
       RowBox[{"l", "\[Equal]", "k"}]}], "}"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"l", "*", "k"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"k", "-", "l"}], ")"}]}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "l"}], "*", "z"}], "]"}], "-", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "k"}], "*", "z"}], "]"}]}], ")"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"pdfXpY", "[", 
    RowBox[{"a", ",", " ", "l", ",", " ", "k"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", "0", ",", " ", "z"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"l", ">", "0"}], ",", " ", 
      RowBox[{"k", ">", "0"}], ",", 
      RowBox[{"z", ">", "0"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.782552951839497*^9, 3.782553087017105*^9}, {
  3.7833314309751167`*^9, 3.7833314320610313`*^9}, {3.783343015352293*^9, 
  3.7833431206011887`*^9}, {3.783343165749278*^9, 3.7833431661643963`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"44f62343-e899-40f9-a725-66c3ecc92b0f"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k"}], " ", "z"}], "-", 
            RowBox[{"l", " ", "z"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"k", " ", "z"}]]}], " ", "k"}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"k", " ", "z"}], "+", 
               RowBox[{"l", " ", "z"}]}]], " ", "k"}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"l", " ", "z"}]], " ", "l"}], "-", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"k", " ", "z"}], "+", 
               RowBox[{"l", " ", "z"}]}]], " ", "l"}]}], ")"}]}], 
         RowBox[{"k", "-", "l"}]], 
        RowBox[{
         RowBox[{"k", "-", "l"}], "\[NotEqual]", "0"}]},
       {
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "l"}], " ", "z"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"l", " ", "z"}]], "-", 
           RowBox[{"l", " ", "z"}]}], ")"}]}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.787913452850048*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"09aff94b-55b4-4b6a-be80-14e7de0cf2ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cdfXpY", "[", 
   RowBox[{"z_", ",", " ", "l_", ",", " ", "k_"}], "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "k"}], " ", "z"}], "-", 
             RowBox[{"l", " ", "z"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"k", " ", "z"}]]}], " ", "k"}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"k", " ", "z"}], "+", 
                RowBox[{"l", " ", "z"}]}]], " ", "k"}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"l", " ", "z"}]], " ", "l"}], "-", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"k", " ", "z"}], "+", 
                RowBox[{"l", " ", "z"}]}]], " ", "l"}]}], ")"}]}], 
          RowBox[{"k", "-", "l"}]], 
         RowBox[{
          RowBox[{"k", "-", "l"}], "\[NotEqual]", "0"}]},
        {
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "l"}], " ", "z"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"l", " ", "z"}]], "-", 
            RowBox[{"l", " ", "z"}]}], ")"}]}], 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}},
       Selectable->True]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False,
   StripWrapperBoxes->True]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cdfXi", "[", 
   RowBox[{
   "x_", ",", " ", "l_", ",", " ", "k_", ",", " ", "a_", ",", " ", "b_"}], 
   "]"}], ":=", 
  RowBox[{"cdfXpY", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Exp", "[", "x", "]"}], "-", "1"}], ",", " ", 
    RowBox[{"l", "/", "a"}], ",", " ", 
    RowBox[{"k", "/", "b"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"cdfXi", "[", 
    RowBox[{"x", ",", " ", "l", ",", " ", "k", ",", " ", "a", ",", " ", "b"}],
     "]"}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7825530904441967`*^9, 3.7825531749359207`*^9}, {
   3.783331411312361*^9, 3.7833314114839907`*^9}, {3.7833316041506844`*^9, 
   3.783331626113407*^9}, 3.7833431965629463`*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"19a66f6b-0b35-4f7e-83e1-0656b6104e91"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", "k"}],
                "b"]}], "-", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", "l"}], 
              "a"]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                   "k"}], "b"]], " ", "k"}], "b"]}], "+", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                   "k"}], "b"], "+", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                   "l"}], "a"]}]], " ", "k"}], "b"], "+", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                FractionBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                  "l"}], "a"]], " ", "l"}], "a"], "-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                   "k"}], "b"], "+", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                   "l"}], "a"]}]], " ", "l"}], "a"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[ExponentialE]", "x"], " ", "k"}], "b"]}], 
             "-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[ExponentialE]", "x"], " ", "l"}], "a"]}], 
            ")"}]}], 
          RowBox[{
           FractionBox["k", "b"], "-", 
           FractionBox["l", "a"]}]], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", "k"}],
                "b"]}], "-", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", "l"}], 
              "a"]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                    "k"}], "b"], "+", "x"}]], " ", 
                SuperscriptBox["k", "2"]}], 
               SuperscriptBox["b", "2"]]}], "+", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                   "l"}], "a"], "+", "x"}]], " ", 
               SuperscriptBox["l", "2"]}], 
              SuperscriptBox["a", "2"]], "+", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                   "k"}], "b"], "+", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                   "l"}], "a"]}]], " ", "k", " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[ExponentialE]", "x"], " ", "k"}], "b"], 
                 "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[ExponentialE]", "x"], " ", "l"}], "a"]}],
                 ")"}]}], "b"], "-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                   "k"}], "b"], "+", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                   "l"}], "a"]}]], " ", "l", " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[ExponentialE]", "x"], " ", "k"}], "b"], 
                 "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[ExponentialE]", "x"], " ", "l"}], "a"]}],
                 ")"}]}], "a"]}], ")"}]}], 
          RowBox[{
           FractionBox["k", "b"], "-", 
           FractionBox["l", "a"]}]]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["k", "b"]}], "+", 
          FractionBox["l", "a"]}], "\[NotEqual]", "0"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", "l"}], 
             "a"]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[ExponentialE]", "x"], " ", "l"}], "a"]}], 
            "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                FractionBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                  "l"}], "a"], "+", "x"}]], " ", "l"}], "a"]}], ")"}]}], "-", 
         
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", "l"}],
                "a"]}], "+", "x"}]], " ", "l", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", "l"}],
                "a"]], "-", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", "l"}], 
              "a"]}], ")"}]}], "a"]}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.787913452962592*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"ea4b0c8e-f837-4eb2-8972-5656d651fd4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pdfXi", "[", 
   RowBox[{
   "x_", ",", " ", "l_", ",", " ", "k_", ",", " ", "a_", ",", " ", "b_"}], 
   "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                 "k"}], "b"]}], "-", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", "l"}],
                "a"]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                    "k"}], "b"]], " ", "k"}], "b"]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                    "k"}], "b"], "+", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                    "l"}], "a"]}]], " ", "k"}], "b"], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                   "l"}], "a"]], " ", "l"}], "a"], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                    "k"}], "b"], "+", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                    "l"}], "a"]}]], " ", "l"}], "a"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", "x"], " ", "k"}], "b"]}], 
              "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[ExponentialE]", "x"], " ", "l"}], "a"]}], 
             ")"}]}], 
           RowBox[{
            FractionBox["k", "b"], "-", 
            FractionBox["l", "a"]}]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                 "k"}], "b"]}], "-", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", "l"}],
                "a"]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                    "k"}], "b"], "+", "x"}]], " ", 
                 SuperscriptBox["k", "2"]}], 
                SuperscriptBox["b", "2"]]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                    "l"}], "a"], "+", "x"}]], " ", 
                SuperscriptBox["l", "2"]}], 
               SuperscriptBox["a", "2"]], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                    "k"}], "b"], "+", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                    "l"}], "a"]}]], " ", "k", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", "x"], " ", "k"}], "b"], 
                  "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", "x"], " ", "l"}], 
                   "a"]}], ")"}]}], "b"], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                    "k"}], "b"], "+", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                    "l"}], "a"]}]], " ", "l", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", "x"], " ", "k"}], "b"], 
                  "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", "x"], " ", "l"}], 
                   "a"]}], ")"}]}], "a"]}], ")"}]}], 
           RowBox[{
            FractionBox["k", "b"], "-", 
            FractionBox["l", "a"]}]]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["k", "b"]}], "+", 
           FractionBox["l", "a"]}], "\[NotEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", "l"}], 
              "a"]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[ExponentialE]", "x"], " ", "l"}], "a"]}], 
             "+", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                   "l"}], "a"], "+", "x"}]], " ", "l"}], "a"]}], ")"}]}], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                 "l"}], "a"]}], "+", "x"}]], " ", "l", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               FractionBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
                 "l"}], "a"]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", "l"}],
                "a"]}], ")"}]}], "a"]}], 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}},
       Selectable->True]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False,
   StripWrapperBoxes->True]}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"x", "*", 
    RowBox[{"pdfXi", "[", 
     RowBox[{
     "x", ",", " ", "l", ",", " ", "k", ",", " ", "a", ",", " ", "b"}], 
     "]"}]}], ",", " ", "x", ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"l", ">", "0"}], ",", " ", 
      RowBox[{"k", ">", "0"}], ",", " ", 
      RowBox[{"a", ">", "0"}], ",", " ", 
      RowBox[{"b", ">", "0"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7825531819586887`*^9, 3.782553231932131*^9}, {
   3.7833316307960587`*^9, 3.783331646808082*^9}, 3.7833432126132*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"431fb547-227d-4857-8ae3-02efdc03a975"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "a"}], " ", 
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             RowBox[{"l", "-", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", "x"], " ", "l"}]}], "a"]], 
           " ", "k", " ", "x"}], "+", 
          RowBox[{"b", " ", 
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             RowBox[{"k", "-", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", "x"], " ", "k"}]}], "b"]], 
           " ", "l", " ", "x"}], "-", 
          RowBox[{"b", " ", 
           SuperscriptBox["\[ExponentialE]", 
            FractionBox["k", "b"]], " ", "l", " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[ExponentialE]", "x"], " ", "k"}], "b"]}], 
            "]"}]}], "+", 
          RowBox[{"a", " ", 
           SuperscriptBox["\[ExponentialE]", 
            FractionBox["l", "a"]], " ", "k", " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[ExponentialE]", "x"], " ", "l"}], "a"]}], 
            "]"}]}]}], 
         RowBox[{
          RowBox[{"a", " ", "k"}], "-", 
          RowBox[{"b", " ", "l"}]}]], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["k", "b"]}], "+", 
          FractionBox["l", "a"]}], "\[NotEqual]", "0"}]},
       {
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{"l", "-", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", "x"], " ", "l"}]}], "a"]], 
          " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", "x"]}], ")"}]}], " ", "l", 
             " ", "x"}], "-", 
            RowBox[{"a", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "x"}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[ExponentialE]", "x"], " ", "l"}], "a"]], 
             " ", 
             RowBox[{"(", 
              RowBox[{"a", "-", "l"}], ")"}], " ", 
             RowBox[{"ExpIntegralEi", "[", 
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", "x"], " ", "l"}], "a"]}], 
              "]"}]}]}], ")"}]}], "a"], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.7879134540363483`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"442008da-452d-4a60-ad6a-cc30161b0bb2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xpdfXi", "[", 
   RowBox[{
   "x_", ",", " ", "l_", ",", " ", "k_", ",", " ", "a_", ",", " ", "b_"}], 
   "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "a"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{"l", "-", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", "x"], " ", "l"}]}], "a"]], 
            " ", "k", " ", "x"}], "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{"k", "-", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", "x"], " ", "k"}]}], "b"]], 
            " ", "l", " ", "x"}], "-", 
           RowBox[{"b", " ", 
            SuperscriptBox["\[ExponentialE]", 
             FractionBox["k", "b"]], " ", "l", " ", 
            RowBox[{"ExpIntegralEi", "[", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[ExponentialE]", "x"], " ", "k"}], "b"]}], 
             "]"}]}], "+", 
           RowBox[{"a", " ", 
            SuperscriptBox["\[ExponentialE]", 
             FractionBox["l", "a"]], " ", "k", " ", 
            RowBox[{"ExpIntegralEi", "[", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[ExponentialE]", "x"], " ", "l"}], "a"]}], 
             "]"}]}]}], 
          RowBox[{
           RowBox[{"a", " ", "k"}], "-", 
           RowBox[{"b", " ", "l"}]}]], 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["k", "b"]}], "+", 
           FractionBox["l", "a"]}], "\[NotEqual]", "0"}]},
        {
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             RowBox[{"l", "-", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", "x"], " ", "l"}]}], "a"]], 
           " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", "x"]}], ")"}]}], " ", "l", 
              " ", "x"}], "-", 
             RowBox[{"a", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "x"}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", "x"], " ", "l"}], "a"]], 
              " ", 
              RowBox[{"(", 
               RowBox[{"a", "-", "l"}], ")"}], " ", 
              RowBox[{"ExpIntegralEi", "[", 
               RowBox[{"-", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", "x"], " ", "l"}], "a"]}], 
               "]"}]}]}], ")"}]}], "a"], 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}},
       Selectable->True]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False,
   StripWrapperBoxes->True]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expectXi", "[", 
   RowBox[{"l_", ",", " ", "k_", ",", " ", "a_", ",", " ", "b_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"xpdfXi", "[", 
      RowBox[{
      "x", ",", " ", "l", ",", " ", "k", ",", " ", "a", ",", " ", "b"}], 
      "]"}], ",", 
     RowBox[{"x", "\[Rule]", "Infinity"}], ",", " ", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"l", ">", "0"}], ",", " ", 
        RowBox[{"k", ">", "0"}], ",", " ", 
        RowBox[{"a", ">", "0"}], ",", " ", 
        RowBox[{"b", ">", "0"}]}], "}"}]}]}], "]"}], "-", 
   RowBox[{"xpdfXi", "[", 
    RowBox[{"0", ",", " ", "l", ",", " ", "k", ",", " ", "a", ",", " ", "b"}],
     "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"expectXi", "[", 
  RowBox[{"l", ",", " ", "k", ",", " ", "a", ",", " ", "b"}], "]"}]}], "Input",\

 CellChangeTimes->{{3.782553244865436*^9, 3.782553343055643*^9}, {
   3.78333167220875*^9, 3.783331711658045*^9}, 3.7833432260803823`*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"98d510fe-e10d-4f91-91ad-c4966774e45b"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox[
           RowBox[{
            RowBox[{
             RowBox[{"-", "b"}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              FractionBox["k", "b"]], " ", "l", " ", 
             RowBox[{"ExpIntegralEi", "[", 
              RowBox[{"-", 
               FractionBox["k", "b"]}], "]"}]}], "+", 
            RowBox[{"a", " ", 
             SuperscriptBox["\[ExponentialE]", 
              FractionBox["l", "a"]], " ", "k", " ", 
             RowBox[{"ExpIntegralEi", "[", 
              RowBox[{"-", 
               FractionBox["l", "a"]}], "]"}]}]}], 
           RowBox[{
            RowBox[{"a", " ", "k"}], "-", 
            RowBox[{"b", " ", "l"}]}]], 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["k", "b"]}], "+", 
            FractionBox["l", "a"]}], "\[NotEqual]", "0"}]},
         {
          FractionBox[
           RowBox[{
            RowBox[{"-", "a"}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              FractionBox["l", "a"]], " ", 
             RowBox[{"(", 
              RowBox[{"a", "-", "l"}], ")"}], " ", 
             RowBox[{"ExpIntegralEi", "[", 
              RowBox[{"-", 
               FractionBox["l", "a"]}], "]"}]}]}], "a"], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], ")"}]}]], "Output",
 CellChangeTimes->{3.787913457973154*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"a2fa1460-49af-4079-bc95-7a8e28f0847b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Combining Xi and Psi", "Subsection",
 CellChangeTimes->{{3.7825533625609627`*^9, 
  3.78255337074056*^9}},ExpressionUUID->"b31af8cc-1fe8-41ea-a767-\
16f37464899b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"expectXi", "[", 
   RowBox[{"l", ",", " ", "k", " ", ",", "a", ",", " ", "b"}], "]"}], "-", 
  RowBox[{"expectPsi", "[", 
   RowBox[{"k", ",", " ", "b"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.78255337227001*^9, 3.7825534157908583`*^9}, {
  3.782553448724155*^9, 3.7825534603261967`*^9}, {3.7833237235356483`*^9, 
  3.783323740887704*^9}, {3.78333172706291*^9, 3.78333173157379*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"ef88a5c3-a76f-4625-9f69-9c2bcfcbb952"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    FractionBox["k", "b"]], " ", 
   RowBox[{"ExpIntegralEi", "[", 
    RowBox[{"-", 
     FractionBox["k", "b"]}], "]"}]}], "-", 
  RowBox[{"(", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox[
           RowBox[{
            RowBox[{
             RowBox[{"-", "b"}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              FractionBox["k", "b"]], " ", "l", " ", 
             RowBox[{"ExpIntegralEi", "[", 
              RowBox[{"-", 
               FractionBox["k", "b"]}], "]"}]}], "+", 
            RowBox[{"a", " ", 
             SuperscriptBox["\[ExponentialE]", 
              FractionBox["l", "a"]], " ", "k", " ", 
             RowBox[{"ExpIntegralEi", "[", 
              RowBox[{"-", 
               FractionBox["l", "a"]}], "]"}]}]}], 
           RowBox[{
            RowBox[{"a", " ", "k"}], "-", 
            RowBox[{"b", " ", "l"}]}]], 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["k", "b"]}], "+", 
            FractionBox["l", "a"]}], "\[NotEqual]", "0"}]},
         {
          FractionBox[
           RowBox[{
            RowBox[{"-", "a"}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              FractionBox["l", "a"]], " ", 
             RowBox[{"(", 
              RowBox[{"a", "-", "l"}], ")"}], " ", 
             RowBox[{"ExpIntegralEi", "[", 
              RowBox[{"-", 
               FractionBox["l", "a"]}], "]"}]}]}], "a"], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], ")"}]}]], "Output",
 CellChangeTimes->{3.787913459579143*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"4e35167e-857e-4928-ae60-d94c26c9d2d4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"iidRate", "[", 
   RowBox[{"l_", ",", " ", "k_", ",", " ", "a_", ",", " ", "b_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox["k", "b"]], " ", 
      RowBox[{"ExpIntegralEi", "[", 
       RowBox[{"-", 
        FractionBox["k", "b"]}], "]"}]}], "-", 
     RowBox[{"(", 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {
             FractionBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", "b"}], " ", 
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox["k", "b"]], " ", "l", " ", 
                RowBox[{"ExpIntegralEi", "[", 
                 RowBox[{"-", 
                  FractionBox["k", "b"]}], "]"}]}], "+", 
               RowBox[{"a", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox["l", "a"]], " ", "k", " ", 
                RowBox[{"ExpIntegralEi", "[", 
                 RowBox[{"-", 
                  FractionBox["l", "a"]}], "]"}]}]}], 
              RowBox[{
               RowBox[{"a", " ", "k"}], "-", 
               RowBox[{"b", " ", "l"}]}]], 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                FractionBox["k", "b"]}], "+", 
               FractionBox["l", "a"]}], "\[NotEqual]", "0"}]},
            {
             FractionBox[
              RowBox[{
               RowBox[{"-", "a"}], "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox["l", "a"]], " ", 
                RowBox[{"(", 
                 RowBox[{"a", "-", "l"}], ")"}], " ", 
                RowBox[{"ExpIntegralEi", "[", 
                 RowBox[{"-", 
                  FractionBox["l", "a"]}], "]"}]}]}], "a"], 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}},
           Selectable->True]}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False,
       StripWrapperBoxes->True], ")"}]}], ")"}], "/", 
   RowBox[{"Log", "[", "2", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.782553466812693*^9, 3.782553498044324*^9}, 
   3.783323759134457*^9, 3.783331744370627*^9, {3.78333265587444*^9, 
   3.783332657490882*^9}, {3.783342785545491*^9, 3.783342787574727*^9}, {
   3.7833433139489603`*^9, 3.783343321164091*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"cb72c9c6-bf89-4413-b74a-cc90ee7b3c67"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"iidRate", "[", 
     RowBox[{"l", ",", "k", ",", 
      RowBox[{"r", "*", "b"}], ",", "b"}], "]"}], ",", " ", 
    RowBox[{"b", "\[Rule]", "Infinity"}], ",", " ", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"l", ">", "0"}], ",", " ", 
       RowBox[{"k", ">", "0"}], ",", " ", 
       RowBox[{"r", ">", "0"}]}], "}"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.787485226756591*^9, 3.787485230183028*^9}, {
  3.787485652099679*^9, 3.787485676566721*^9}, {3.78791124607164*^9, 
  3.787911260971066*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"dda4141a-939b-44bf-ad75-b61380c42acb"],

Cell[BoxData[
 FractionBox[
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         FractionBox[
          RowBox[{"k", " ", "r", " ", 
           RowBox[{"Log", "[", 
            FractionBox[
             RowBox[{"k", " ", "r"}], "l"], "]"}]}], 
          RowBox[{
           RowBox[{"-", "l"}], "+", 
           RowBox[{"k", " ", "r"}]}]], 
         RowBox[{"l", "\[NotEqual]", 
          RowBox[{"k", " ", "r"}]}]},
        {"1", 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}},
       Selectable->True]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False,
   StripWrapperBoxes->True], 
  RowBox[{"Log", "[", "2", "]"}]]], "Output",
 CellChangeTimes->{3.787913477691165*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"5541e418-573f-4402-b1b6-f9f8325b5d74"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Summary", "Section",
 CellChangeTimes->{{3.782548897729485*^9, 
  3.7825488985016193`*^9}},ExpressionUUID->"45c2710f-14b2-40d5-bf7b-\
f164351a57ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"lowerRate", "[", 
      RowBox[{"1", ",", " ", "2", ",", " ", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"a", "/", "10"}], ")"}]}], ",", " ", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"b", "/", "10"}], ")"}]}]}], "]"}], ",", 
     RowBox[{"upperRate", "[", 
      RowBox[{"1", ",", " ", "2", ",", " ", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"a", "/", "10"}], ")"}]}], ",", " ", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"b", "/", "10"}], ")"}]}]}], "]"}], ",", " ", 
     RowBox[{"iidRate", "[", 
      RowBox[{"1", ",", " ", "2", ",", " ", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"a", "/", "10"}], ")"}]}], ",", " ", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"b", "/", "10"}], ")"}]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", 
     RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<SNR Bob\>\"", ",", " ", "\"\<SNR Eve\>\"", ",", " ", 
      "\"\<Capacity\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7825489015132847`*^9, 3.7825489501128483`*^9}, {
  3.782549011164691*^9, 3.7825490703382273`*^9}, {3.7825534247927303`*^9, 
  3.782553435418497*^9}, {3.783333228252524*^9, 3.7833332897335987`*^9}, {
  3.783333897551386*^9, 3.7833339177149687`*^9}, {3.783334079931553*^9, 
  3.7833340860617847`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"d91ea7f8-7c5a-4f29-870f-5795ce56694b"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
Rlzh/+QJwA22OH/vPV7GyNXN9vJUlWpWMnL1F5Zbp526Vc3I1c9Ky1x5xY89
Ay86PEPONqaBkauPJDtOc/7YzMjVd32L2zRQ3cbI1auopV3JCsxcnWLpNcZx
MXN1AUfla6m9PYxcvckrwuuOCDNXv1+qwX9qHTNXt4nMzTTiz2Hk6htsJyye
25PHyNX3VGnUB6wtYuTq31sFfdZVlzJydY31Qlyn+isYubpjdQDvhOXVjFxd
XmnJ4tq3+D4XuL66N6/I3gZGrq7LbTSwSLOZkasXxV58cPt4GyNX93kyUf9U
YwcjVz/Y//Dez+guRq5+Nv3xcaWQHkauLuKjfmbn916O68J4atlGk+jwZpwn
gKfnrgcqzz/LZuTqVz3uz3x1Lo+Rq6/wC+0zDy9k5OpXp3a8UNhaysjVW949
4hr0rWDk6snnNgu9z69i5OptvOodyhrYM/B3mpFNLxrqGbn65+i5674nNzFy
9SaT1PqC+lZGrn7wWH547asORq6+9E1D24BNFyNXlxyt/ia3v4eRq/tEad+U
OII9Ax/KeRa33Q17Bh+frG5VnpfPZuTqD4R+dD39k8vI1aM3lCVPmlHIyNXz
gy893+NXwsjVXRS1dq/dXMHI1d8PyOaJ2FYxcnVHbvmkBVn4Phf4lJS3yxKP
1zNydecPKkERG5oYufpBSZVzuw1aGbl6yNrB9vSdHYxc3f7w+KRRmS5Grr4z
6xm5jquHkatvuUV06/Fhz8Drrk3li1uAPcN+L3j58c1evyxGrq614oYjj3ku
I1dfVrUs8vX5AkauPvrpqJ9/WzEjVxfacuSWSnw5I1cPTdB4wcVdxcjV1UrP
trwyxJ6B8z4TFtpQW8fI1X8ujVBLCG1k5Ore67Y0+0W0MHL1vreWqg197Yxc
vWr0ZI3bt05Grm7d9/KKinc3I1fvzsudHfoM5zbIQ2L1uOeROLeB/bO4E+BB
TM1i5OqK5V21PMk5jFzdUdvbb1FqPiNX3/wwgbVEsZiRq//Wnpig1ljGyNWJ
F7cM79+oZOTqisW6lGcGvs8F/rdcZjbPzjpGrn5Rz53KFG1k5OqnU7N/ef6f
3Ab4QLztnuNr2hm5euVrE43Lhp2MXN1npbxlsnI3I1c3Uj+U3jwXewZ+ttZl
14O1fRzzuiS1gKTLebevZzJy9UO7r30empXDyNVNi44mThPPZ+TqV/eKfN+/
u4iRq8tm6s/tHy5l5OobvYwTG3krGbl62NWeJwvJao55XZLamtzt2xTDaxm5
ek6o4vI/xg2MXP3gpcCcFVrNjFx986XClUrWbYxc/YTGXv/f9R2MXF0l47Vq
V2QXI1ffMou82OrfwzGvS1I78/vj47MReH4J7RXfO8EttTGDkasvsaWO3j2Z
zcjVndItuqS08hi5uo2UL5nvUMjI1RfVrRueOq6Ukas/Cl4gfsyxgpGrp3Y8
q457g/ME4Lu0v2yeJFTLyNVXnE40v/GmnpGr6+8XMSu50MTI1VcvVBM/eb+V
kasfqMtf8ehkByNXv8a3OiRuZRcjV0/c2KgQK4s9A3+YuPu54WzsGdr10bk4
OUkzg5Gr10dyBdz8lMXI1V+cqV84ap/LyNUXP5qd+vxWASNXP/POLvf932JG
rm5j1ZK5JqWckatnlDbvbufGnoGXBOxw2b+rhpGrv1T7sXtmeR0jV5eO/+gz
za+RkaubWO4++cuvhZGraztt7lxZ1c7I1Wvt3wo5hXYycvW3GsIhr27j3AZ4
yuTaHUbXcG4D3y+7tHxP3ZLfjFx91baF7SOdmYxc/WN31ia+JzmMXP2BZenV
zvv5jFx9gXHEWcnqIkaufuGwWPB5zzJGrs4vsHrcKQOc2wC/mL/NNelhNSNX
N9xustZDtI6Rq2cGdI3LiGlg5Oo1ux/bywQ1M3L1d1/TnvpktzFy9Tde4SYP
pncycvUjRqEB/a04twE+Upgxr6cU5wbwPZO2hbdlpaQxcvW7IYfeLpqfycjV
62p/fb7+MZuRq7d/OvXTwDWPkatnyM6wbKQKGbm6vdSJHOPtpYxc/cbkeTM0
X1Ugz6jfcW9fZJJexcjVtytu/P5naS0jV/dKeDJtSno9I1cXOzSJ95pfEyNX
3ysbFvvgcysjV1/+cJ6Tx+UORq6uLOITZaSFPQO3yd4RHaqEPcP2rEddtQsO
pDJy9UNGVdMuGGYwcvXrhkM5UolZjFz9qJdI1rUruYxc/apywLjpDwsYufrt
4YqNg1wljFzd+VSGK19aOfIM/Pxdt96Do5WMXH1ts1T8/W01jFz9xa65ltuz
6xi5+iHZ7bzn3BsZubpgm/3fm3dbGLl6zKfTv91+tDNy9QYxgZqnzzoZuXr1
611vDOxwjgSfm2M2UTao7hcjV7f+FKBayfObkas37VefbJKTycjV7Xr38lna
5TByddnB3NyEw/mMXP2+o4SuT2ARI1fXa5b8VatThjwDr+t62TVVsZKRq/su
vptTeriakav7WQ+Fi2TUMnL1927Joa8dGhi5Ojd544bm7mZGrn74s4SX8qk2
Rq5uNy5/6bPaDkaufmzJiT1l77s45nX/7st/tqvLHU9m5OrO9XvEt+qnMXJ1
0XV78ojyDEau/vNU9BG+g9mMXJ3USS+ar5DHyNXtpm6/90u7kJGr61mVT6+P
L+GY10mTMq/CLkzZXsHI1QX9bZ0unKxi5OrTF+ROFUqsYeTq8864mZfsrGfk
6r8O75OLmdLEyNUHt6jkTJJpZeTqvpNy/ewVOzjmddKk1MS+TUfrOhm5uuaa
W4vvCaPcFfFct7Ph7x/mMHL14A03i5ZuYubql2wb68zM/jJy9VsJ0zLcp6Yy
cvWd0UJmcQq/GLn6d17XiHtHOhm5uuRKtSnveDsZufrwkaqvi1blMXL14e8z
Tbgt+xm5eulTfdE+vRRGru51gGXbvrWLkau7Lb4eXW6ay8jVs0cLlTbX9TNy
dU/Tss6t334xcvU/LwTmvfJH4wzaftqM4rZzQTmMXP1Um2ZaYF8/I1e3PXhB
VHXfL0au7vVIY3i/TBcjV/+4rHDiV8dczvqU4of1W+44/OVsD3lZqfnsuJRk
Rq4uunj8g8f22P/ssXKINZo2qTGJyEF809gHO1kZ330nrf13HYftQ/1todNc
Q2qziOKxE3UCqp8Q2eHe4JGHeNDYeZDHmmHcHmbZkEuM/fWzEOLn7Ac/O4gW
Ih5HcyKa/87RL0QBMTr2ZxziHktixlu8LUZch/5eYs/zx39GIooIaB/wZxJz
3jaYliG+gC6Jr77OQcaapQS0G3jGztSOVd4ViPOM7Tcvmbl/s6NlYzkB7Qae
OPWkSo94FeIn6f0gS93l65/oVRLQbuAO1lpHD92rRryM9kTOtb4TrfahioB2
A3ctSdP0FKtFHPq567cLIY1SNQS0G/izpvW6Tx7UIQ7H/eCM31us+OrQ8YXx
svOpQeruAZzXwX63bxoZODYlFx1HGEf3FJcr+BI4L4X9ppxfnXp/Ih8dR/p7
k9RKnfpWqQTi3An2O3+ym0tsQyE6jjDuvlvS41K/BOcksN86sd2ac5xL0HGE
8TjwwFaHxlx8vwn7PYsva+ubpeXoOMI4fV2/KP6ANr4PhePoktiVTg5VoOMI
4/eGDeuOKoTh+TwcR4soIjrmaBU6jjCuv4lfMi9gJp7nw3GcbfQ970ZBNTqO
MN4/866253PH8yU4jnukIxLit9YSrZM2HDx3Hed7g6vE7xdw5xI2O9N0ZAxF
0XGZtcd7S7ZxPjHqMKlc3UeAor3+VMvfOq/Np7KQeOhlbGvSwE19Y7dr+91K
3+orJYSW8w4BMdN+VjT7+812X7S8tqGcqHb/uTu0qZE9P+EmbwntijAdX0ks
UDgswHcuihXJ9uPw2rAi3LmKeKXVPnFRajXykFcXdcx08N/f95sfSdPHz6OW
1C49cdOxlri3K2VL6AYuNC6FVkSdMGqqI1ZldA0HxUpSv5XEWd9zBlld+fd7
uYRy0PhjalBquLZihNXQZ/ZabzSL6FCzPnXluBQal6p2t/Wm2mQTPAnKrhdS
J1C9p19X8x/tYN3WCg7JM8wjHjWekXs1UZg6NpQlR9Zms/7ufiv+ObmAmC8W
+zHBiJcaKKvW8cosJNzdwkS8jYoJO3Pp2zl6wyyvUP9Q2apOQib3NQ9Loozw
pP/OcqT/ndAsptR2nqggmujPsxTp7ZEntQxsZlZUEs709xFP6O8nZ9UvLby5
p5oYpttH8NPtJW1XdQmE5NYQhfT+E2toH+SdnbaO3rvqiJW/H3yb+EAcnadH
7tcWFIbmEuPijotstxJB5+ME/3UX06QKiMf1n57bR/Ch8+70PL22tGdFxPYp
I8Yqg6NonCzdrTCyhiwlzhy+f/X8vR50Ht02fLrrx2g5sdRg485bRBU6X/Jr
lhapH6skJE32uD848QONbznHBluvlVQRxHXbaTvPNKP+39axqL9Wv4YYcJzX
aKzwF89HVHfdd0yrJWS509IFL0hRMf45Ut3BIyzBtp1dC85mE3VJxnUn/cQp
/vQ9U6bs62bxBd9wu/Allzj8WdCY312EYh0I7r4aVs5aEr2+rXl2AdFTtKNT
sZiPOj0s3RMsnEqoBjztWPu+iLg2+uyKnjwXJR1S0T2lrJXIiRLJy9lXSihr
JS1sKOphHRE1Mog7MEBoBYcnh4v/Gx9mf3ppUlTFmlFlPkW9locUtU/I5HWq
JEilp3uUeCnC9fv061O8Bcl1lj/Kg/5UEYlR3GlnS5qIoSfZ3d07xUiFL1Oi
0m1riLUebeu7i/sJ1TUJH+p5JcmtWtUPnDpqiXc2b96nu48Q4p0qd1/YSZG7
44rTqt7XESyntNj5kpKU5dsJ17vF/7IGzTLOxLrnEDLyNRPtrcWoNbUaBo6b
mln3JAts/BvziHdaiwKffBak+kpfOSoHx7KW7SpLaDErJNSsHdZ8H+WhVvfa
TTH5N3/VKHRbfoi7hPCe4/Q07sEAq39pQH39mx6iTK/+oHB0GeFSOPuCjFYb
65j97cO/hbjIhc631r9JrCCE38tOfP8xjVWgt/73O4qPjJ556fq51VVE9bgF
1VdKy4hNC/vVrp8RIee8LXBUC68msiJX5kye203su7I7d8ljcXLinz8neP/d
dwc46q+NSZakhGYK/ZovOMA6ZFh2+2tzNlE8uUPwVckEishYUVqp2soyXmLg
r6qaR1irrfZKmCtM9d+yfpphnsxq2lWkxfeqgOA+fHlRkw0vpSDifP+vSwVx
P8JDdu7iYmKeyGMn2ZPDLNtvIb7hod3Eh+MLNv0qKiW0din4HeHpYu04Nc3p
2PRRQs9HW4mlV0G8Pd02m7WziDX5oWaI+EY+sqLMa/aMb5VEhHnSlulm2YTL
ycGpLYPC5NSox8t/La4mtmbMbPu+qYPon7s33nSvOJmWvXJ/U0ANIXfjXrJ9
xCAR4qF6PlNVipS5ELjy6aw6wnKJiseCAgnqgsI4ASm1XlbFXPWB7YE5xP5r
IVGn/4pS2rWKu6O8a1lztIa38A3nEe1ve7c82yBINV8XHDRo9iXOF1Xslz9d
SFxOJ0pj7vBQ8r13Js2Z2kC8mj3Bz0y0hJhfJ1Ge+PYvqzks/EjSuT7i4WfT
41RsGeFlpCUgd7aFZRYh/oqw5yaXKntr//x3HO/Gha9Ptktkpbv9FJu2UIAs
n7phX+byKiLzgs2R6HWVBGF16UJv5b/75aF4y9VB1cT6P36u0qI9xF7fqX8s
dCRI/ovz5srJ1xLr631syjdKUa28X+3bugZZA1wq6mJ3s4lfP2qNBQ5IUE80
dh7Q2dHDWqIxaqgpkkvccIyPtD0mTknp6jxdea2DVXDOcLxEei4x/530zmXc
opSNTDL3wp+VrKYnC4vUj+QTfpOzuAVniFBFB8718RjlsDb0aJzIVy0gItIP
1uzeIkA57NDOEd4RTxwc/e0+p6aQWK02zVPpKB/15JKaQ8GeQiKG2+HOhe9F
xNZuf4cLHtwU749Wqw/tzcTLaRfDb7uUEI9jk3ReHxplXcwb6m+J6yRWccko
G5qVEpGLKyQ2fOljVTw2k3Az/0vcUxzN0FtTTsQI77dt7upm7bl3LMd36TAh
0TDh7VXJCuJzZ83xSY8bWEbzLXtfW/KQ9T0uLgW8lURSQNFCS+FKlszslt0h
erxkoPN5c/2LlQQ3+eTQna9BrBQeObNLcoKkySuV+ytPVxHJk8cpSWr+JG4O
v064yS9MdoRvXVXf/u9+szGTK2FmLbG2LC9zb74o+WbiD/FzzdVE0LKS9XbB
LURPwd5lZt8nkJO+XtxvdbSG+BSUt//p8B8iuyTRZ+pPCbKR9F4aY1ZLvM/Y
P9Qe95dYuu9mxsyvkuRm00/KgxW1REra+1VLeySpOezrZnGzlsiMymzigMy1
2X/0JSjzHXt3VMn2srRbPD1nL8wlJA/luMRNwdedxksePYuU8gid3fr5Yp3j
KYnl+c2Gh2pZLgfsL2fcySciazofBp0Tpt6xr0ePQ+z2nfQuIErPe1suWyNA
7byt8eF4WAAR0x9iKideRGwRWrsgI46X+sG+TnkevqvRoVxMnHxZO7j7Cjdl
6l/uctWwgSiU3fr1bUQJ8Wm/4OlGmRF0/brTumFmZ3kpwXf74PS/T/pYQnRJ
TJrpvmbz6XKixO/ZU5XgLnRd6ze60eRiUEEY0NtlnaK/h9Rc+GrPk3mVhEBU
eH/b3xJ2bsBLdote5XNPqCS8bo21m1VB7weZ8vbzTFevKuLwnHGnW75lECfY
10GfYL1Ba/VqYibthdCjPZFhBhHnP06qIexGD3RWr25H18cJO9K3rvhaQxyl
vRMH6eNAHn3sqzX1YS1xf8X0nEDhQXTdFLuyn2toVR3Bng+heX6gZ0rq4tt1
hNT10cepIxJUOHve+LRwsojE7RwieonWj++bxKiP7Hnj8eeHXpaX5BHbDB7s
qnITRPP2LoWcd+v1C4kKx6I6/kIeNG8c92fbvP7GYqJKbXOXoeYAmocvMHz4
g/95GSE6PnwRGdKK5o3j4gKm1YVXEOqORsXam1PQvNFXz0Howewq4sjvcaSX
UAWaN24+PyQV+7iauPvixPmrdvi5YvuKRR8ei9eieaArPX+kFphMv7ZfAnIh
CWo6Pd9kFa6+4p60Hd4nHE/douenLFP7m8u+hEMux0/9oOezhNziJ5ek1+Dn
hm30/JeYtFx81KziX39je9Sl58uEzSA55Pi6nACP7Pk1efDA+B5KvZKA+fe4
M2PzcXIoyplnUngVAR5P0vN3Mory9j2qjOf/HfR8n3ypqyP5K7iWUGD311T6
fCWFaxb8XHEc38fdpvsFyzi6eOnpRTnofu0w3b9YLNZ3Kb+LeYQN+77MgO6n
LP+n4SuCu2AdEl6Kn+7vhEDxVr6Lt4oJGBcq6fOG2HNs5AW5rgzdT32jzz9i
Q9xm4dXX/11P2ef5Nvo8JlP+bs292FdJxLLP56/0eEDuUrgYtugkvg+SoscV
cmjuQIZ5aw3ar256nshauc3+S9AkvF+q9LyS1WR0as3gYbxf9YfH5qEsyxvd
m6wzcW6wjp63EnZEmmrz4WJ0/3ienucSs9vTlJ9PwPu1h54XE6GxGse5rCoI
GL+e0vNoct1oUtm4AnxfL0DPu8nhHpUaWR28X6vpeTr5fq5Gyql4fJ/Ovl8h
5wx0zJdbV0fInH15ZIe7BOWY10zayv9hlbp0ZQSX5xAs6dvGP61FKYIY+mVv
Xc2qCUrrqViZT2xfnd3Z/FmASjv11+jniWjicMI2/lXhhUTNwelXxbl4qOXe
X18f0W4iVDSjQgx0S4g23hSlY+79rC66JNw3eh+Zw1dOyNP1WA3058hpN0t5
TzdWEJfp7bL06e8h30qraq/eW0VspNtB/KDbRa642zRl0u9q4hzdbtgP8qnR
iUhFrVqiS1lsgyCXFFUX9jpUp3iAFXfnue3DWHyeXqHPb5Z+bviXNytzCfVY
lTvP5MWpSb2W/guL21iuxp13VAVwzrCXHidYEsGLXhx4mE8IBYQG7nUXpq7P
WhPTN/KbJZgxc8te2wJ0XkfS4w0xLWRzZ9zEIuJZSt+aS8W8VPCvp67GkaWE
41FBA5FhfL7L0uMWIcxrpWDyqYTYX+HybKP2COuagjTLtbiL4JUauO/qX0rA
eNpIj3+Eb8PtbP6T5YQTXY91mP4ccXDtWbVvqhXs+nWsSnocJc19jvrbyVUS
bnQ7WC/odpFHJ22LOfIS5wx69HhMPmgpXbP/QRXxgt5PQpjebzLBzG6Pu1Q1
Gk9Y9Lj+b17h/6Fd4N95RHskCNorabDWvOjoHTzOTKKvD2ThB9P921xqiXr6
OMFxIzPFe1bz8LFzcOf/s16x5xnPnoWQQ4qh9TTapyTwhrsVII7Wp7FJXp/W
CO97C6H6FV43r1W8KUYc6n8udk141VGExiW0XrTXLu9soXLEob7UmljHz2gd
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
9Hsm8+RN03ULkWfgA+x1ocEzcOW+ye++TET3m4iny191dJOqQp6BX552KUV8
fQ3yDLzoYOOXYZ865Bn4jQkn1yYtbUSegRdo+BTd7WtGnoEvfsQ3X7SrDXmG
9Xd9vtgecHVLQJ6BqxNdw68Ck5Bn4HHTZSYvmZ+KPAP/afNM8rlwBvIMXPPL
p/Wu67KQZ+Cr2mSPf4nIQZ6BJ6xSqjyP1h/g4gKezV4XGjwDJ7SmxrU3oPk5
4p/vT/Msy6tAnhGXqR/haahCnoGPeyS7pFShFnkGfkbUXnD6i3rkGbjIMQW9
6ZuakGfgDX+UD1TORv0crX+71Pvx3Pfhccgz8IGzu9+Juyciz8BN1ftiVqcm
I8/Ao+UlJ+icSEOegf/O6UiN+ZGBPKP1b89eNQkdn408Az/tHMJT9CwXeQbu
yV4XGjyjdaFl5v0QDUTzRsS7RiwuxSwrR56BeycHf9S6V4k8A18WFlxv+6Ea
eQZ+IFV+8WbIM3HuRN5oF+C3uNfw/86T/5WGseU2CWtxznn6MM8H62IJyqpt
n/oU8QLks+kH76HiFZLUZstjqieWFCOfxvIC4v89xxiI60189xrnkznXhKjP
rZLUSb1A28vL0TjJ0q4XOfnf+5xKCw97BG5C814W67/j7idF1ffYVJy+jnNF
1f+RK45xJwlKofTywi5xnBO+HRsPJah3Z3ItEytxXjTDeuKS/9o/XnD/K6da
nPt5jp3XktT6JfO/yrrivEhoydT7/7V/YJ2GW/UGnONdejCd/K/9v187f8sU
x/fRk9QHfeS1RamZOwedxj/F+RuU68Xmxb06mP//+vwsRrlIzorbfQLnb2Pe
rCdQD35MaqzNwvnbmGdJcarMr0F1byLO3+j64lT2ipavRhk4f9vyn+dkcYrH
pWXTZiHsk/U/cld6v0SpGapqe1occP5msWvWy9FRUcpO+dx6ZxL71J88j+u/
9t96M97HRR37XFekeOi/9l+aXrZUbCX2Oeb5X/sXZsculm7EudCY53/tD1w2
J/BRBM7fxtrzr/23Rv3mqD7F+ZvSuf/WOBCgTpwc3vukDudCtH9Bym/Gudmt
z3D+BqXD37mW471x/kb7F6JefJE5V9JW8v/2W2thau1dtciBrdgz7U2EulnS
tjVhG/ZM9zcRav2QLFfQJZxzev6PnJPmApQ9sVn3dSrO32j/gtTm5246Ufdw
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
8yJo/wrjE8JrCZwXzWO3/xav7fXZRfj+Gtq/yq4v3eEuzjGg/bPPGCpNNMTz
4bFmaotSocbBcrH7OHNjMUopw/Jhy34On5/FKNGwp7Ij/thnCXudDNOm5wtz
Z2KfY54lxSl9U4uT4dLYJ11fnDKT2bH4/TLsc6ydyeJUZKaRu8ol7HPe/8jf
PNjt57ewlKw/gH1ys9vfnOzgKLYE+zzBbr+d5VBH+xTss5Td/guXngVqh2Gf
89jtd/JV2CJ1GPuE9qsE/RZevADnb9D+OZcPrTHl58w5BSiyuGP7tSnYM+1f
kPrjt57rkyRnDi9EDdnPHzxgiD3DuiOzzltP8e6u+H/7rbUwtckyTMOkBt9H
0/1QhPpwYr/5tFGcV9D9TYR62iz/dOVG7Dnqf+Rvc9ntPzAt9kGTBPbswW5/
zJNs/T3lOK/gZrd/xdtay/et+D6avU4RNUdA8YTcFey5lN3+vmtiPuOWYM9b
2e2XOxgcQvbgvALaf2d1yHbf35w5Jzc1u0jyomw6zito/zyUgXbnbCsK50K0
/3HUycU7uj4O4lwISt2072rFsdgz7Z+XknAWWDESUsXRn/mo+Vm71lXFYc+0
f37q/bn4smFezvGBmb9FstvvMWHwbvR3nAvNZbf/vvFkjQ9XsWcPdvu3pt3M
kfqOPXOz2z9hE9+KVXrY8wl2+y85esf87sd5RSm7/QVB59Ym4fchSWj/tMoz
5t0PsOf7Y9/bz6rP3fNh6Bz2fHxs+39ZLevie0+Yceacg6zSqiUTtz3Cnunj
MsRS0s9coXwbe4YykbzQP8mW0/MoK8vCyO66C/ZMcy5q/8z3Ewa+/X90XXk8
VV/3vulKV4aSSnNJKpQmZKh9IgoNStGgQUmjZioVKlJoEk2a51AZo8k5DcaS
eZ655plrKl0/fe/ZZ2ef39s/Pu/zPe+1PWfffdZ6nnXWQrpQxP/Q37zp9V+z
Sxz5aTPieR+9/rdXNHfvGo94NqHXP/R2umHUOcSzMr3+T6kjh00bhngWo9dv
PTlr8YAPiOdCev3JewpsTI4hnuH6n90vSExcinje9d96qskKda7R83GI54n/
/d46UmyDmoKWEOlC2f99TiN5WS3Oxmsyric3k1/kGnV0lyKeRfy3kK82ndq+
eDriGf4cuKTV9roWznMbWfZlRHvgXpxntv62j17/dj91h+0dNdh+riNPXbIs
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
hLj9TY3nzLwt6nvLMOvDYfGkzpyaNUWmKK98TfPg34cHGYqrGlVSs6+cTOu+
NWdaJ+JzbOt/nwMi5OZLR2Qx5yq4pxP3WHHVEMJrlG6q5XjUt9OuZsJljyV/
gJ/Fq5IeGbR/1DcP0VzsJ06YXxAWW0mjfbib5mdnH35Q/6sHUzx58+UYn5f+
KU90+j2c8s6SyQvIUjq+XdfyZpZrGbpfy+i4rr3sfvj2bnRf3v+/fiWX2T99
zwEhuZT+vt8PidsZCOd29e5PVfe1P8Z/bSfJZ/sqJ0kwfYnB7o9pIw/ckyKk
k35klwnRe/G74tZXW+j8BgudtJRfqhYz/E/fbzJ9lWc1KfOllmodgeKxzGPP
5xTrNQPlAJ1f5hUo7up3dHjR/PsSRHeki9jwUPQ8GhVi8d7352BCNWp4h90y
5rlPjgqa1fNDsRUc2ahsPSOygPm9Rx+kDg6OKCe/S4ZmLP3F9A8HbQHlBTzj
IcSC5PcdxxTR+/vL11xdXXq5P/HwyT63WcvRPnzuv0SlOXYooZbsnGNkV8Hw
U7LiJ2dOgYAcpnlv7tYGlAcZBfrn7ZYIJIdUv+dX/dOHP/7N9aNTlP6ApliJ
/KbB6JyRyb7pbHtVmhC/9me3fzY6r8Lip19JuiNGCIvG9azai9aTyx8et2P5
UEK7IPWkyx30vXhvM+nPgDkxZE370NjZi9D3QmeN4aoLoBQcAolza61RvrDs
v793IHG1rkBnw9VSZp49/PsO65ZrX7uVAeeHMfj13SOGz/qWysxNh7jFLqeT
+QnZzJxviKsJntyI2pTPzKWGeK6teM+v6cXMHGWIGw9bn73BppSZ+wvxKxOu
dxswfTjTP0LcNHHHe8mzlcxcVYifMn2sd3F/DTMHFOKxkjM0Jt2pZ+ZWMr83
802/H65NzJxFiD+U9TWQt2ph5gJCXD5w4ucv5mi+HcQNvGWH2O1p78tn736M
f5aidWYgxmcvnho3JnqyPsZnL76qSPHk3mkYn7347203CkcH5vXlsxeXmjGj
9NCNor589uJXE/WsqztL+vL5d77H51WLj23B+OzFl4srKmZxMT578fa1ztJ/
Kqv78tmLy91sLF0/COPzb/+N1/vfVmthfPbia58e1MqXxPj8+3s387Vsha19
+fzbB8M79pCSXDszxw7i5jKrhx4x7MR45lG/+n0Y4bA3HeOZRz3cv0S27W0K
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
F2E886jXVYubH/wuwXjujQPfTHnqY4zzzKPCblEX/X9WYDzzKMnTnSvveOE8
967fwG4r5Yrz3HtmkmNOcSNxnnlURsf9M/bXcJ551KG2oGvRO3GeedRln+dJ
8RtwnnnU1+rLdVP24jzzKJ/m7POWt3CeudQSz+T2N0txnrmU9pL4eZv0cZ65
VI1YaNquIJxnLpU99Zo+cRjnmUu9jXULA4k4z1xq+J5XD48Ow3nmUlFN1pYb
fXCeudRG35BZr0xxnrnU7uTONV/0cJ65VP8Np2dd3YnzzKUW+p21St2B88yl
ltWJz5LVxnnmUsdiai3yp+A8cynnLwb9KubgPHOpHb5Kn/ytcJ6FpO/QpoG2
A3CeheSIScUFsVycZyG5wqi84MQWnGch6T3odFKYAs6zkHycY3VR9TbOs5BM
meU5Vz6/DONZSJaunfRAZTXOs5B0e2Q+YQYX51lIqlWH/nGqr8V4FpKRt7e0
KAzBeRaS9/rtnxKnhfPcG/+vcig9z8V5FpKSo+avC2kQYDwLybDl8zM72tox
noVki1izY9FInGcBeeuN1Kml77IwngWkeXUomPc5HeNZQB6MmDUiZSDOs4C0
rOp+uSO8EONZQO7eseTPlK04zwKya5rGVeW7OM8Ccu+R+W9jpHGeBaR9ZkND
QngVxnMvvsZ6+K3rOM8CUuOxftrc4AaMZwGZ3961Ylx/nGcB+VH8UrAgoQXj
WUBWBoTrDAzCee7lB4jVDQ3BeRaQbc3yys+SOzGe+WT15zC1kduzMJzDsT/S
MOoSD+efT/KF8kr7jqZjOIczYob/r9lT8PvCJ/OFT08Ne5mL4b3/ZdDTArGF
udj94pOCS4d/dS0pxPDeb6SX7tkxaQXYfeSTg2vCA3qUSjC899HPSxM/V1qM
3V8+eXe4Zt2htWUYzuE0hieaxErj951PGgs6UhqocgzncPzWDVHYY1eO7Qc+
KdeVtEx7SxWGczg/6DkLffcJn7S7oq8bpVWL4b1P1Pn1a14m12D7h09+z5dP
vLCkAcM5nKun2nZ8z6zH9hWfPHplyYdH8Vh81fvPeO5HbVXPJmy/8clvnFHP
R3u1YDiHo96lY5W0GN+HfFJ46gH/4R4BhnM4j5uN7JdOxPcnnww3//G9N8LF
cA4nYYha5r4R+L7t5dPrin+ESyeGczggunhX1jTWfgbbTToeazzNxPctGHZC
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
Lq1JZ/mwy9bfGD+7IYvlw9p+OHHiomkey2/1HtH9aOL1EoxPIXhouP8lKChj
+a0tSwbETLGqYPmtu0PWb/ohj/MpBEc29aR+GIjz2bseG7/3CtqNLL91bOKK
0ybmOJ9CsDk9iBc5Feezl4eDne0fxuB8comtfwyXXvfC8uJefBSIf2zl9JPl
t/6o+yk0nIzzySWoy1OfPZbF+eQSJxdUN/1ZmcvyW4+9X0DZtRRgfHKJO3U/
Nw6bjfPJJcw/mZ/8dr+c5au+fRste8SoiuWrduVZ6CVNqWX5qmJ7yVcKhg0s
X9VOof6Ad1ITy1dNCFMOUvVrwfjs/b0WQw6udBOwfNX8FSvla7OTMT55RMeb
6Ka5+oksX1XxwNhHeevSWL5qd8De74tV8HOVR8i7Dtl20iyH5avO/9417nZq
PstX3ci/d1d3QzHLP30Rklq0Ip/P8k/1TryaJ32gkuWfSkuo8an5NSz/1M/z
tsNPo3qWf7pGfZPyCCOcTx7hI1VRNVcC55NH6JTImSdWtLL8U4dPTrraE3E+
ZQi/mweES3u+s/zTohte259fSGX5pyqzi+4tABks/zSgZPYxoyX4uSpDeI2p
X8z3x88BGeLIkId3/+wtwvatDDG84pqGdEIJyyctHpWn6+xdwfJJBccbZria
VrN8UvczXflaoI7lk1aGW52J2NfI8kkHSZ3oWGfXjPEpQxgajU6NWNjK8kmD
8sYeaPjxk+WTqkdOSPoUnsLySccqn7v6cUU6yyfVF7cfHqKTxfJJXy3rCv92
Mpflk644sVdQPrqwL29/rx9Y9jhXpoTlkx4orHoZbFDG8kkvPL5KjH9TzvJJ
7y19VD5tVRXLJ9V58vD9YfValk/aFqfxqHZxA8snzY7WdNH42dSXz7/v4ep+
vVd6vYXlk06Vc6n9vTaX5ZO6Dx6go8QtZPmkp2qNDZMlS1g+aZKK+08H4zKW
T3rpbo2WPVXO8klP03OgcJ9U9eiZTCWPBpZPuv67jZFTVxPLJx1ku1NlWGIL
yyfdOVxqKEkKWD6p8/pbMiop7SyfNKt99YetHLZPOkPDQVdboYDlk+r9ejui
zb2Y5ZO2ugg/iPXGgbhPeua3pn/cxHKWTwrnNOE+qZj/1FhfzyaWT+pU81F5
iWULyydNSIg2ldMXsHxSj4x3v4JM21k+aUmuQ+jLw50sn3RHlvo9hX7FLJ9U
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
/wddoHnE
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
wr9E17iqW37LPSjF2NqZPZe58DGZvZU5cJZZx+o5a2TWfspx1TNrY+XKl6PP
P+T1VcusFZU3vwjWgOO0zqPrV9VFtTJ7NPrWR2X2CJQfj87s41wPx8xaegJc
JrNe1X325R6d8mO5zDr8EunjzD6C8mn5zFp9MvxH7r8pp/yVe3fKRxUza37N
yZGZ/Qutyf2576ccujf3/ZRDP4rWTvLz5Ws+z3uNUX2e2be6gf4lwTXGWPjf
3GNXPp0frdvlqR6U2dfQ3l8f7BvoOf8M9j00569GnwPp3HBDsE7X+twYrI+k
k9LMOkFx6e9g70Xf7pXoMyedZ70YfUalM5rno8+xdObyUvT5ls5i/gr2XvT8
b0XrRvm3NYJreImqt6P1mM5HagXX8DrrPDq45tcZ6wGZ9YzqxmOCtbDOYd+M
1pA669wf7Pno+zYK1oY6m2scrM11ZidzQr636tKawdpBZ6PNgn0AnSc2D/YB
dC75X/SZheqHJsHaX+eM70TrRp09VQ/WNTozfSH6DE/nTVUze1Kqo0pn9nH0
7UJmv0l13afRGkAe/qJoH1DnCyuCPSitz3XB60HrUP63armpjHs/Wt/Kz/8s
+txR/v9Kxj9esL5IMms8xfkDM3tbyhclM3soqrEXRnuOOvt4L1o/6xzq3Whd
rfOp/wN9d8kN
            "]], Polygon3DBox[CompressedData["
1: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
O7HbGG2snhqet5WYbmxfD74V3oP73QY/XzLeK/G3t8LPlYz3ivAt8LrtjMfu
VdrXaWc8R1Zpf6Hke65c536flszHgXXGZ2zJel6mzvf8pOR7blZnPJ8qWW//
g2+GF+hEv/l91DN3l6yneevEh+X4/dPgjfn9i53fnWgn4+NHrhd4E/M1/KHz
Gd4InhZ+3/GH+8PTwePhw0r0b839v3Z90T4Inpn2T3zfTvLxLPCnjkcnevtX
nu855ws8EJ6J9o9dX/DG8PTwB34/eAg8K/yZ37+TfN8D/rw7mtD4/nsVrbgh
7VvAs8NfuV7gLeE5qjxff3greE74G9cHvDXcB/7W9QFvA/dVN7geOtGeatDv
4QHw9vDc8A/wZvAO8Dzwj/Coknpjojr3X78Tra3m/gKeiO//X/g13n9z+JAS
/d5F/y/hfUru90fzPebuJL6p/9Tj+5XUU38233f/knrrr+b7zk//OV0/XdH7
anx//1va32u+l+/zWzPeC3Wib7+l/9PwgvB88DfwU/CeJd/j12Y+7FHyvX5p
xmf3ku/5czMfjrQmh0ud73V4Sb01cZ3v25f7Tw4/3JX64IiSem2SOt/7oJJ6
p1Xnex1YUl/+04z3iJLx/REeB48sGd+fmvl5QEm9+nczXw4tqZeqOvPhf3z/
U1upOa091af7Ov/r5MOVO6ktpmi+13z0PwheDj4Bnhc+0PUGH9+d+tx8Oled
fHRnSb6bu06+nr8dPbA8/U90POH9Xc/wsfA88AHmD/i47ngC/t6sdfLjXO3k
76VpPwZ+qGT9LlYn/zxY8j6L1onHfei/XTNfXQ8LwocZn+BTHG94lPEGPhVe
Hj4d3gS+xPgBH2r8gk+G7ynJz/PVyed3leiFeeroiwdK9MrCdfLbmBJ9skid
/Hdwif6bEB7t+Lfzva3Xj+6Ox+Hz9a6jZwrtM8PvMD+2hCeGZ4TfgIfDN5fo
pTnqxK/FOqlvf6P9eXjxTmoj9ewL8C0lemvOOu+nx+D7z15n/JfuxOvQ83gF
XgJe1vnD378ILwn/z/kHvwQvBS/n/KT/y93xbPxes9WNXqN9bbi7qT9WhNeB
J4Pfcf7Bqzjf4de78w7GYsfQd9PTcn7NUkcPLUv/lV0/9HnN8erEW1Dfv9kd
z8f5NFMd/bYS7evCk1eph/rBa8Ed+K3ueGDOt5nr6KtJ+L4zwW/xflt05xs5
F5xjfjs9B72H3eDTS8ZUbWOOc6yt6a3t9UweKfEE1GZqNLWhHopeip7BYyU1
qLXoTfC7JTWotag16jvwCnW0kvc3l1qDWotas74Nb1And5pD1UZ6EnoTF8HP
ltT01vYXws+UeHJ6c3qC40tqSGtJa77fSmpYa9kXWvEfenJ80Iom2KydGtRa
1Br1pZIY3btKDDJ2W0NaS1oT/1lSQ1pLPuscLPHc9N70FD8qqSGtJa1B/yjx
IPUir4JfLamBrYX1KF8p8RDVrmpEtaIaU+2qxlJ7qkl3aNqtjdQIai815Njm
e45ovq/fRw2mFruruZ8aUe2oplQ7qjnVwmoMtaiaUC2sJlErqjnVng823/9v
jq9a0WxD29E0I5vxdfzUPLs346VWUsOp5d5opfYzp6g11CDmGnOSWsScbq5S
E6m11FBqJTXpKc14WRuqkdSyaly10/A64+l4fF2ikdS+1vRqp5uqeB16HguU
+E/e78Xm+QdxfGxfjiHt1KMfOnYcAzmfoE4ta0wztpmz1ArmVHOZOU4tYc40
96kB1BrmTLWBOU0toP9lrjPHq33UTOZ+c7raSc1krjfnqXWGtZILzfFqKTWR
ud8cpzZSE5n71DhqHXOy2kxPUG/QHHh2SQ20fTPfXJ96oHqh5uCLSzxSvVJz
9oUlOVMtZY41l+oXmxuMecY+PUZrSXOgudCcPE0VzWiu1qPUq1Qjnlvioeql
jm7F63U96x2NaeKBmsHcZQ5TS+gp6y2rCU4t8eT3aebvxyUe+L7NfHV89ej1
6vW4vyjxuPW69Zy/hJ/lfr90RYNuVOLJjG7mx08lno7ejp7NjyUelV6Vc2Jw
O57Q0c18c/6qAdWCarajSjztQ5r3+arEs9a71uP5vsQD1wtXsx1fohnVjmq6
Y0s8dr12Nc/JJZ6Q3pCe0w8lnrreuhrnRHihOl6BOdhcrAerF+t+gt6untyh
zXp1Pbgn4t6IewIflmgwtdgUrXi3ajq1tzWAWs+caG7UD9Vv1VPVHxhfxV9Z
pMTPvL1Kvb1wif95W5V6cAo9ryqe4lslHqx+wgdV/JfetB9XxeP7lbaLq9Rk
7gH1KPHQ9aferOJn6ZHrv7xVxc/Sg9f/eruKn3VGSZ5yn+AkY4l7JlX2cD7n
+iNce6krmnox43/51zJtXVtFj89lDoGvq6I3vEe/KhrOe1sDH1ulhrY21uNZ
r4qnofejR3ROlZpV70hPamiVGk2vSo/iBX6f03+9Cw/Pr6ni7+qJ6199X8Uv
m7LOPseZXD/LZ+V9hlXxsJ8u8WT1316u4sfoWevPvVjFv9Fz1s96qYp/U/P3
61fx7O8r8ZD7mkuq+H962NbnT1Xxt9xzsx5+por/4h6b9frTVfxGPffV/bZV
/DU9WfXavVXqeT1R6517qtT7eubW5w9V8Q99N/dyrIF8Rz1//covqviDeqTq
k/uq1OPuiVjvP1zFn3NPRf/h0Sp+pXsqveFHqviR7mfon99dxS/Qk1Vf3l+l
nnfPxr0ba7bzfTeOSTm/vooeck/o067UVO4VqanUVtYIes/up+g1OmaOnTWQ
tbE1rLWRNYS1hPsR1mJqNrWb38xvpyZUG6rZdirRaGo1NeT2JTWytbIat3+J
plRbqin1ut2TcK+vRyt7FdZA1urW6NZGesZ6x2rGrUs0rFpWDTu4RMOqZZc3
35Xsr+j9ucZd63pUB1TxgPSu1MRqYzXxwBLN/VuzH7Fxieb+vdkPce2qcdW6
ethblWhYtawaeEvnFkfHXFJF77tn4N5iz1b8emtea1/H0LGc3RjH+RVV9k9m
K9knvqzK/oee82xNftaLtuZwv3C3Jl875107C9RZC2oAtcDNVfyiOeCJ4Sur
7L8sVLK/cmsVv2jBkv2VW6r4Te4v6DU5p53beshTV/GY9ZaNYcayS6rsr7i/
+n2zv+dateb+ttmfWKfE0/+u2V9y/7WXOZPzS6vs51iTW5tbs69V4vF83uw/
uJat+a399YDc++td/i2lW5dX2Y/SI9q5igepd+QeqXul1uyXlugn9Z16UH2l
hn3HuV5H26rRzaXr1dHuzgHn6jtV5oYaWa29Sh3t7Bxzrr5bZe6p4c3N69bR
9mpy93f719Hq5ghj9Tp1coc1hdp78Tq1hprY3LVqHa2splXb9qtTC+ih66WP
4toFJXPatfVelbluDaK2XqJObaIGVkusXkdr+81dC89XGQvXnHP1tSpr0Tnt
Wnqjylx3z+7FrniM7uU5B92Lc444Nx2zxxu96Vg6Bx5t8m2PJt+Zf/VErDfM
oXrXxjRzqzWBtcNqdWoFa2ZrZ/e8jynJ4WqLjevkdjWN9eKrVbSOa9K193qV
tWrMUWt/ViUWuSaNVZ9UWatqoNfhbetoIz0OvQ5rxpNKNI/afbs6Wsia5z1j
X51ayBpqnGuvTm2lZnnV2FNHy6ipXjP21dFa1mBvG/vq1GbWRO8aK+vUSmqC
t4x1dbSCGuoVY0kdbaWHoZehh3BeSY2lVtqkTu2lphwDr1+n9jTmGBs/rhKL
1Ixj4QF1tKQxVy3+ZZVYrEa+Cl6yTm1rPnZ/Tk2gNlCDqhU3raNNXcPG1ueq
rG1jrlrq0yqx2JytFlquTi5XU5lLxlXRWluUaOeP4Fe7U8Na+y5fp7bVI9Ir
suY/ocTT0dtRj59T4inpLekZHVey5t2LNoYZC4wZxu5nq8QSNbK18JA62tk9
vp+7sqfl3p+ej3s57nHoBemhf9KVPRa9dT1l9570qPWa1bzWtsPqaGHfYaIq
c9J3c4+srrKH5N7Zu9zri1ZqrJH8zam0fdmK3lZ3uwe4e512azE1m7n4zipa
Ts9Nv0F/wfpDj02vTQ/ttBJPzL0KPXq9Mj0q/QX9AvXyjk387NPkFz0t987c
c9Pr0vPT+9OTOaXEc3Pv59JWvDg9Pvfm9Dv0/qwX9qgT09zrVp/rT1zYih53
D9z1qwem96jG0HtRM6k9/q1ROB9ap3Zxj9C9Qj2vi0o0rFp5cB1tq2awFvy6
ipYwR7m3oUYyd7nn6N6jHtglJTlufJNfzX3WBNbKm9epFcxpHzT5zFyn57h0
87yjSzS9ez1qLLW+HqH1oPvV6lPr6/cbPWI9YY72/3WwJjB3q7Ffa/K52ntY
k9/V42phNYDen5pPbaAG1/tTQ6rNrb/1o6wHrZ/N0f6/EtYg5m7ni3vHarwT
EBb/B//d3ko=
            "]], Polygon3DBox[CompressedData["
1:eJwt1wmYjtUeAPDvmhnMx3x0rVmT3QxDzFiGQfZlLNn3fWdEaEGIVCgVbTdL
3bRT3aI9bSqFaKEFcVuUaLkhRLm/0zvP4/94/7/zP+ddvvc950y10dOvyC8U
i8X2iBTxz3gs9mpyLLY/KRarJG+RGoulsc1sByvDGrOy7G32LavBLmfl2Db2
HavJ2rEy7C32DavO2rKL2CvsC1aRNWf3i3+JUWmxWGkXsioRi90nv1eMZKXY
nSyh7xZ9d+lbVt8m2kuw59luVo5lsVb6HGFlRV82hpVU97L8M3UVWDNWk/3I
iomubCJrqe938jKitFjsvG3ZcceVxBB1U9TVYy/IPzbeJ2KbuirG+4SdlDdR
d4W61up+YOVFfzaO5bLv5eVEPzaWFdf3Ofn7+pZml7Gq7FN2imWxPuxyfX9i
lcVQNpm1YUflF4sBbDy7Q9wuhmlLeH63ub5SxntNzUHjVVaXo7259q9YQuSx
IWyVuFMM11ZC35X65jg+rKak6KluuPYW7JC8hOjBhrHazvGbvJTow2aw0myr
/JDzVmEtWS12jBUX3dgk1s54P8uriGFsKruCJbmGxuwycYtrqazvx45PGK+x
ut7qmqjbxwqLFDFfXX3uv9hV+s8K96EmW3yuvajoqK2fmiz2mbyI6MD6svVi
nRijray+dxlouXyZGMTibBlr6Ph9/c66lqb6dtR+q1ghhmgrrm6FugzHr6v7
RV0DdbnabxE3i8Haiqlbrm5o+I6036h2Nhsmb6r9C3mq6KStvz6N2Ifyv4zX
iuWxy9hudoHlsu5sPLvYOF34zexR9pD4txinrby2e5x3iuNGjkepW6/uNe2T
WUM2ko0Qj6ubxOqyQfJ71W1RN4FVY71ZL7FO3YP8ATFWWzltd7PGjvdoj4nW
/uuhvT57Q/6ra85krVhP9hdrIKaxeax3WjRJNWTTHV7PerEL8kyRz+azSp7X
LvnPxqvPurGB6lL1bc6vZktZJtsuP6Mum3VgF+v7ATvG6rHOBc8gMyW6r3B/
KSU8V3bOcbqYrO46dRX03SE/rm8668Ly1J1nGWIKu5Z1Y2fldcUENofVYY/L
9+j7kXjLs5rGmjnvRP6oum3qKjrHTvlPajJYV1aevcOOsFqsPWuv7y+sqhjO
prEe7E95fTGVzWVd2Rl5HTGezWZd2Gl5bTGOzWJ9WYpryWJXsRtYH5bMmrCZ
bBFrwN6Tn3Ytv4vZ7qM/K6KuaXif1S1R148VZtlsFlvMmrGD8jTRnQ1lHdlJ
eQ1RXdxkvM7sd8e1xNjwbasbwIoarxmbE74d1oH9Kr8kvLssn3Vip+Q1xRg2
k60Ut4mh2tKMcatzVPNM96s57x5y1A0K8ySrrD2XX8+eZJewL+Xn1LVgA8O7
xsaoW8LfZr8WzE17k6NnEp7Nh+G5qBusbi5/Rd0P6iaqq8MGsnvY8+He1A1h
89ir7Gh4Lqwx68tWsTdYejyaa04lovsJ95XJSrKz7G75PeF7i0frwelENMeH
ub5ePJp/TiaieSvMXxnx6Hn8nojWkbCeDGKTwzzlvDuc9zSb45rzWH74LsVF
vo9O6pqwfvLV6t4M7x9rx8ayh8KeI3znrD0bxzawj8I3zTqw8exh9jGb7hy5
KdEcFOaiuHN0VpfF+svvUvdWeHdZNhvA7mZvh3ectWBD2P1se3j/WF82m21m
/y1YZwqlRO9ZeN+Ou+88da3Y8DCnqdsRvl+Ww4ayNex91p21DHM1W8s+CN8M
6xPWHfYcOxy+j3i0np4x9mr5XaKu8z6j5rD3oqq6zLCuqquirjVfwDayfHXN
2ST2GHs37AXUpbPubAV7iTWOR+vVX4lo/g3zcDuWwfLU3aruZZbDqrI2bCHb
FNYPVob9mYjWvrAGZsWjNSLmmW+QPyyasoqspb7zND0e3vF4NM9fSERrS1hj
slkFlqNurrrHwtzE6rMe7Db2SvhWWQPWk61kr7Kp7rcpm8AeYe8UzAcnkqN9
WdifHU5Ea88l6trKLxeFSkTz6RPJ0b4s7M9GhHU6Hu0jzyWivWbYczaKR/vN
82yNfK1ozWqxTvovdd7nwv6K1WadwxzENrO2rB7rxpazF8NvGY/2BScS0boe
1vdWrAbroG6Juv+wXFaTdWQ3smdZS1adtWeL2TNhjmXd2TS2iX2ZGu1Pvy3Y
44S9zr5ENO++6/h79/qD2J6IvpnWKdE3Gb7NZ9ls1oVdK3/RePuMN48NYDex
d9m37ErWhl3JnmI72VzWny1l77Cv2QzWls1gT7Nd7CrWiV3NnmefhOfApoR9
UHj/wvflN2rm3iqxVvL56p5QN1NdRzaHbWGfslmsM7uGvcD2svlsILuZvce+
Y9ezQewWtp0dYdexfinRXmob+yY12re/mBw9p/C8pngu6ewldlReW112wbcZ
vtERadEceru6Gq75G3XJor260dqrs6/lSaIdG8UW6DNUn/lhrRAV3G8xdc+G
63WOUuoaqbtaXU91C/hrbD9byIaH/TrbyX4smGN7pERjhTFfci3Xst5skfx1
dQfVXcN6sYVsKzvACjnvI/IPnLcwq8mS2KNhfFaE1WL/YA+HZ5cU/S1Ygy01
3oSwPwzvGTvBbmTjw36O7WW/sSVsXNgjs0/Z/9gyNo2tZfvZmYL3YCpbE+Zi
8Wb4Ttgkdp/8c3Wn1N3EJrJ72WfsZJifXV83NpVtZF+wG9SNDL8N+5AdD/tE
dV3ZFPYk+7zg9xiWEr174R3c6rx11P3huKIYrO4adZeyA/I/PYOWbDBbpO+I
8LcD38WOseUsn61jB9jZsIdgM9iD7BA7z2LG2xC+q6S/t7yx6uxCmBvD+8j8
i10qT1b3WLgHUJTVZinsyfA8k/4eJlaXpTp4OpwzKfq7Jvx9U5Q9xb5kYYuc
wVY4mO5a1vOD7A+2mI1id7Dd7KewzrMr2QPsK3aOFTbexvB7G68Yq8eKsE3h
92HFWXrBXBnmzNFp0Zqx2gX9H4wx86A=
            "]]},
          Annotation[#, "Charting`Private`Tag$465866#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
OFB5cUv44si5/zKeOSu3dSXzmsyd/G6VxySKi3T28hV8beIale7tF3u/qE//
2LZZtfHVsc/HhsNXIFuf+yDZVZ2VjYCvhFcifyXyOZHqUlrfz2PXGLTXhmhu
M+9P7dnewedTqlGorqC67oLYdcHl8NOJa03ac4p/VQtSXqU4Qd8nX7mN/pek
/hbVKpXHKR/6jfdcmlpnVLdUXXYZ/BT3lU6tV6oPXwyPilzP1Pfou3aohhOc
T6l2offpvaoz/JI5h5StODK1f9cZzWGpYw+dv/TM40/FGN3h6yLXl25Jnaeo
/ix7Mx3+R+LcRjGkcs5zlQNHrs32CM7dVDO5MPU8q+Z5Qeq1UK31jDxXUu54
eupaomq856fWJdVg9+R+UPb/stSxpc4Xzku9d1S/HZ85R1JecHXqmqrOEboF
55KqfV2eOl9TzH5q6pqb6tjnpN5rqhsrf1YerXONm1PnPqqrF1LHTjovuzZ1
PVz16iHBdVflm+8F5yzK9z8Ltgmq/2hPL4GfYHx/5b5M/qUOfEHkOsOfwTVG
nZMODD6/Uz1KdkT2ZINqaMjviVyz0jmYfOVe5D8H14F1PntlZtst2/5OcJ6i
c8PBwfGk6lR/BMfPOp89LXVdV/Vq+XP5rBNpb0qd6+lc4KrUZ44697k+9bqr
1n1Dav+i84LtmX2z4oFrUtfkdWZxY2q/qTq5aiTKU7rHthnS22vk44LzOJ33
nZLa9+lcVXmezla+pX+t4BxQtZfawTmjai//A9DybQY=
            "]], 
           Polygon3DBox[CompressedData["
1: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
THonNaRaUg36XRmaQG2gRlYrqxnUDmoovbIaS62l5tBbqyHVkmrS78vQCIvn
6/9bGRpGLaOG+L2MmqZWVYNa69SoalU13Bdqe7gLn9diTS1Ds6nd1BR6fTWa
Wq1jI7xtH7g7vKI9oQyNm1JoJrWvmuyXIjSwWk3P0JzCU+gl9BS/FuEZ9Bpj
qJdX2g9S+C09xGeMn94Ib/FcCl/3Go/HlvFYr6fH8zkzxB1zPXW92m8PSKF5
rK/rw62aQ8Naf8wM14NnNyJLHAt/WoSmHFOGZtRPHtkILTkuRbbaIX8fjxld
hu/0tWoutZea1ixCTfl6EZpTrfkM/EIRmvOOMjK4TXJ9MZtTYy6RQuOpPdV4
q6XQhGq/gfAAXr8+fDXjC2V9+EPWiwtmPfl91oMtWT//niLf/CzFfNQD/VOG
Z1swz0e9nJ51oTxf9bJ6+t/y9Xa+tsvz85o8v53Pv+ff+01ep2aTZpRTyriG
Xks9nF5aj9zI81vvbH7sazx2ahke0eywXV5vnm+zwvZ5vh2X1+MFeX3o8R6F
12mE9zOjebyIjMbsxkxL76sH1muboTxWRGZjtnJUS2TjZuTWGTVTnyIyGLWU
mqZvERmRWkcP+l2uB3rTe62FRWSQZpFqooeLyJDUSpek8NZ6bLNJM8RXisgQ
zRb19Hp7MwKzET2mXtOMxmzjSHg2fDw8Ed4fnlxEBvMSfDg8s4iM5E34CHhW
ERnJW/Ch8PQiMpVx8AHwlCIyouHwQc7ZIjKiUfCB8NQiMqBX4IPhaXn+O88P
g2cUkbmML8Mj6BX0zGYnO+Xz7e8zC9JD66XNmMyO9oMnFZGxPFdGpjOhiIzJ
rMfM540iPLdZ0L4t4e31+GZ9/VN4t73yejQDequIzMlsyMzqtSIyHrMsMxez
FzMSsy8zkuF5PphtmZGZ7ZtBmZ2ZkY2F92xEdmZGPKqITNjs2Mx5ZBGZsVm0
GeDz+fqbDVpb1GJz7Nc8PjBF/bEO6bGswdbaj7K/XLs5tNpc/jbk8V7qzkbU
o+Xgbrz3R43Yr3DfQg2gFli2OfY31Axqh7I59mdWrmL/pGqO/aKmnG98kcJP
u+Zd+5+n8NP2CHvJ3OwvXdOu7TnZjy6a/fafKfL5RbI//yPF/szS2X/O1xz7
VfPlfOOrFP5YT7do7od6PXuUvXZmit5lz7O3zUjRC78to9dMT5HHWFOsLe+n
6KWNKnrdlyn8vx7jwSIyWr2HGl2tbman93T9uV+0XK4PanK1+bJ5ParJO2Z9
bFbvflOnrH/1GtenqC/WC7NeM+Kni9hDMDs2M+uf64/Zu5nxU0XsUZglm5kP
KSJjN0s3I7ZetMnv5/ub1bXOrzfzfbKIPQezYDN2s0YzR7N3z0mV67fnygyv
X64v/+4FtEQ2aEZs1q8n0ZvoSdwLMVPsmfW+ewv/7jlkPe/762n0NnpO/YCZ
nNmcmaF7D2a47k24R2C2a2Y7NH9/s1wz6UH5+7r30CZ//41y/TVjdm/BzNrs
2YxyWD4fZrP2p2WyXrX/mDksmSJzNIuYU4fWVlOqLT+vI99Q06vtv6xDy6ux
1dqf1qFd1axq14/r8A5qfLX+3Dq0qRpfrT8LfqIRGl+t/2EdWl6Nr9b/oA4t
r8ZX68+uwwuo8dX6n9WhjdXwavl5dXgJPYhe5JM6vIiaWm09sw4truZWe6sJ
7O03ptAKJ1RRe6w51p628M6NqEnWpmOr0BLWIGvRF3V4Gz2N3uaYKmqTc865
d0QVc8s56dzcowot7h6p/vloeLNGzHHn+lFVzHXntHP7yCrmtnPUufpVHV5G
D6AX2L2KfMA9Uf33jlXkAe6JmieqMdXWU1Jozx/r8Hp6Qr3hD3V4QT2gXtCa
1ib7IWvd93V4QT2j3tEat1X2R9Y+M/7xRWT6Zv/WpI2z/7BWWTP3zP5zg+yv
9sh+s1X2Y62zv9H/HF7F3HUOuxa/q8PL6kn1pt/U4Y319Hr7narQzu7Jm5eq
oZvg41Jo6x2qyDM6F5Hn7lzFWnPNmZd+W0c2oGfWO39dh7cyIzAr2LWKvMc9
dvOM7aqoVdYsvf72VeQneni9/C5V5EXuwZvv7FZFPuQet3mQmtGs0Rquljy+
it6mRlGr6NGac+/Ru71YR+9Xc6g9htWhFdQQaoln69Amagy1xvN1aHM1iFrk
uTq0hppCbfFUHb3bHm+vf7IOLWBPt7cPqKM329Pt7QPr6O32aHv10Dq0jJpF
7fI0fHAjNIZa45k6tIaaSe30Th3eWU+sN55SR7ZipmK2MrWObMVMw2xjMtyz
ERmMWcy7dWQdZjRmNYPqmGtqFrXLm3X0HjMQs5C36uh9ekK9+cQ6apkeXi8/
qY5aZ83Ti0+oIzuxZ9o7p9WRBZlxmHUMqUMbqpnUTi/Uoe3UZGqzl+rQgmpA
teD+VWQ9ZjZmNwdUoW3NgMyCDqxCq6p51b57VdEr7Znma4dU0fvsgWrt/aro
FfYMs6N9qui9ZmhmaXoSvWCnFF5FT+h6ODOFV9y3inF7tr177yqyN++pMO87
rgrtqIZUux9ahZZXs6vdD6pCi6ux1doj+b3nNUKTq81H1aHN9Qh6hZfr0MJq
aLW0a8615xpxb+WwKuqtnkHvMLwOra0n0Bu8X0c2YaZktnQwx6/RCE+gN5hR
R9ZhpmK2Mr2O7MkMxCxkBHxiIzyN3kZP5rX0murV1LR+3qAU8997Qrw3xD3k
kWV4tnVyHqOXc89iXNanD2U/rD/Ws+o/1WTeO6MmVKup2by3Qk2ollMzuXei
hlNLqQnda9EjqhXdM3HvxD1274UwX7I32aPMh9yTG1jEHqR7de6ZvljEnl3v
7IfGZv1tPz8ihcZ1j8v8cc8qtOws50AVe3ZvZ/2uX/h3Dz/7Hc+N/tx7e+zx
P9Vxz4h+0DxA/+89FD2K2DP13gr9vfXde4DMQ/189Z0ZrHmoe67XFbFH5V6V
92hcX0Sm670bZgBq7w/461GFRjZfMx9TO3uPyMTsR7x3xHugvBfKew7eKOMe
Gu+l+XfPv4x7FPTD+kvvXVATu3ekplYre4+Mc8M58mIZ99x47433CIzIfmda
9mf6Ee+58d4b7xl4tYx7ary3Rr/8fBn3+Hivj/dkTCjjnh3v3fEeiJfh/wNv
gUYt
            "]], Polygon3DBox[CompressedData["
1:eJwt13XYFWUaB+BDfbjfx/FTKVdBRcpdxAJj10AJY1dC2lZKQEJKVLq7U1JK
GqREpaRVUEFQUVAxADFBQV0F3fu55vzxXNc89/zemTlz3vPOnFJN2tdtlzeV
Su1WBdTTOanUlqxU6ktN8zyp1EfZqdQ2tVW9mk6l1tq3MzeV2mx7p+2v5Y6r
hzP2BvtN/6t6n41mj7IB+oGqAuvqHFvZV/oWzvGxY9/BHmK92J+uoxl7hm1j
R9gTcgfZs2w7O8paskPsLtaMjWIF2JNsOPuKFVCD2B+sM9ukf9A17NPvV/3Y
fnba2K5y37Ln2A52jLVin7A7WVM2guVnrdnt7EHWg511zU1ZFfYA68bOsCZs
i9qsXnEvXrZvh/P3kXvP9s9yXRzvuP092G72PWvHvmA92dvsB9aefcm6s13s
O9aWfc6asufZa+wWNot1Y2+xb1kbdpj1ZfvYKfY0+4b1Zu+yE6wDO8Jmu9aJ
ca3sLjadvaF2qtfse82+N32OPbZP2S6qiqk2bCVbZvtTYx8xdrUxb6k31Tr7
1tn3ltwE211tz5e7Qq6H/ePZ0+xFVp71ZP1d3/vsF/YM+471Yu+wH9lT7Cv2
ntqrNqWT7/kd5xgl953ttBopl1e/zP6FcQ3G7lL3yLXPST5Tw9zkOuN6t8l9
yAqqLHXYvuVsse2Dxj3oeCvkOhm7kT2Qm5w/rqMVW8lqs1fjnqmWbAV7z9h6
xr7CmrEX2GZWlc1nT+Uk96iRsbv0u1VzNottkasmt4AtdC1z2D5Wny1mLeRm
s62sOlvIdsh9xnLVaPYL6yC3Xt/YOd7Wv6MWyc1l+41tILeItZFbw+rmJnM4
5vJiuXnsfbmGcktY25xkbtfLTdaKWDOWyL3IPpBrJLeUPSm3mt0nt0n/uloq
N599KNdYbhlrLbeK1ZHboN+oOrIN7H72rn6PesnYJeyQsQ8ZuzI7+X4XsY/Z
R2qTfLucZO2qb3t73BO1Xe4AO0cNNvZ7toDN1L9rXG02L+YCO8aKq0nsDJvL
pujXya1XVRx3oHMcZGf0PeROZubQB1nJehjr4mNyg+QOsbP6nnI/ZT5LfKaN
6WQuvS03QO5j23/IdZc7Yf/drDkbw7JYGzaUfcHyxTrL/he/Ncc5kpm3MX+b
O95Y1s72DGOnqzlspLHfskKxthmbRz9MfanPrway3x1vBPtGn6OGs1SsQY73
tf5CNZmdlRvMP9H/6fi92M8xZ+T2sJTqw45l7t/UrOT3F7/DdbnJNR/NrCOx
nhxnO9lh2+fFZzb2dKxD7HP9+Wos+5U94bwv6fc6Vl22Np5ZcntZHtWXHWUr
2FL9J/HMYqvYi2x63HNWk81hQxzvU/YX681OxVyV28xOso7sAJvHprHd7F42
m81nM2L9YbXYXDbG8X5ihdUE9jf9R3L5CqZSZVhZ1cXnrc4ftz3E2LxyLY39
QO4vdrV6iRWV+ZCljL2GrWDFYo1kf+qvUstZ4fgMrJDcLWwDK80+Y2l2K9vI
Lo9nAvtNf4VawNLsc5YrV4W9zsqyvewXfblYo1lOPMfYr/rysZazQvFMZWf1
FdUyViTmDyvhePfGvWbXxtxjJVnNuF/suliv2SWsVvwOWaVYI9l4/Tb3pQab
5r7MYZPYTnY3m5GdHDOOfbHxV6rTMrPUBLntcnfaN1XuIMuy/wb+cuSNO8nK
sgaxtrF/sZ9ZedYo1id2M/ueXcpqsz2sMjvFrmCN2QF2S3zfrBxrGGsg+zcb
x9rrZ7qWS1kX19KQP8emspKsLzskV9DYG/laVkLmMDuX3cY2sTJsgjqjLxm/
a3aBfqLKK1eazWN/z8y1/Kwyq6ROZ57dpzNzL+bgiVhX2UnbpdRsYwsaO179
oS+hprPz9Qfk8jjetWwlKx7PY3ZCf5maxbLY2LiH+iJqIsuONU2ugLHXszXs
InaUFWU14nti/2RHWBFWPb539o94p2OFWTVWVf3mmifxbFZBv0TuspgDcj/q
L1UvsPyxRrLz5G6P5y0rxyarnJgrbCkrFeuX3DnsJvYKKxnvZewH/SXx3bEC
7Di7UO5u9garGO9g6iJ2M1vProm1VO58dgfbwsqzY6wYu5PtYBXY16w4uyvm
NLuSNVDP6qeYGyVYH3OjEevGprFLWD9Wn3WJe8yKs+6Zd45491iTTp6lW+Ne
2e4Zv0m5q+T62/+fnGRMjK3g/FPjc8gNiO+H3WDfCLmpbFDMR3YTG8mmsIHx
G2I3suHsEeOHssWsIhvL/stasZ6sEOuQeabHs/3ldPJOsM31rbK93PZnco/K
rbF/fbw3qtXp5J1qS24yDy4omMzlmNO92TQ2PCt5HsdzeQ27x3lbsHH6go7X
1nGqsUdYv/jDw1qwquzheD6xv3BzNtHxesS8YEvUUsd7WG4IW6S/0tgxcpPl
esWay65mA9gMNjLWV3YbG8/GGfs7uzi+O3ZeTvL+E+9Ba9PJe9Z255hpe1T8
xuO9Qm6C/dPZiFjD2a1sXHby3+oxNpgNUpOMfcgx+8fvXl9Obljmc3TPSp75
8ey/Vu5eudZx3/RpuY5ytVgb1p/lss7sR2NLu8/1+D52o0xN9WQ8U+XOZZ3k
6rJO8TxmRdlz2cn7Rtus5NriGis6bz25zmy8vphcN7kf5C5zjjrx/GbX5yTv
o/FeuiGdvPPtNnaM7SdsTzL2Qrn2cQ9iPWbnqlEsn76GaqIfJpePtZK7j3Vk
o1kR9iyrzZ5iw9kFrCs74RxlXEt9vp/dFP/xVD/9XLmybGh2MteGZWXmRcx9
1/d4rHdslb6y3PNydVgHNpIVZs+wJvEcYKvZ9WwKe4yNibWUVWKTWWPWO9ZS
djkbxO5nfWJtZqXZYPYA68vmsDJsCHuUjY53A3Ydm5T5HxH/J9ank3f/Xa75
//CuR7M=
            "]]},
          Annotation[#, "Charting`Private`Tag$465866#2"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[
           0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
          "Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           
           ImageScaled[{2, 0, 2}]}}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJwtmgfcjtUbxx/vjefWfd7XsZWtRVIZCckoVEJllWhpoqJIpRSF9lBaSoMo
FEmyR1JGe/3bS+vfHopK+H9//9/9+bznc77P9ZznHmdc57p+5200ZESfi0oK
hUL7pFDgr/AXHwLwEPUXlO8o71G2UL6nfED5kvID5aO8zdeUcpRfQqHwK/XH
1J9Tf0XZWs78X9kpb/Ldf6gnUL9FiTnrmt9S3s7v9Q3lRUqftFDoTX1TsVD4
mXY/we9Tv0f5Ef4PdaCcDDco4zPt34LfpX6askjPzW/XwS/BO+B3aP+c7kX9
DvYX4H+Kfga904f5+32ZP8+btClQ96TNZ7n9w7w/tuTP+WnO71OacN1LqPfj
eZrCo+BJXONMeL76NO8f9cc7lNHBz6BneT1//iJ1SkngFtz3VfgNuAL1CNqv
hn+k3sznV+GE+kI+r4Q3wq9R3oQr6r0pm+HdXOdFeBO8C14Pb4R3wu/BfzBW
b6g/KBuw/1v0O32Qv9ca7Ouo/8K+Gn4e3g6vgtfC2+ClqZ/hd3gJvAL+DX4O
Xg7/CnfhOW+BD6F/1ub9/3fR80X98i7lWexLqX/GvgheAv8EL4aXaa7BG+CX
NXlTz5ct+Th8l89LzclH+G6G3oH2s+An1AaeDc+BP4Mfhh/VO8Jz4Cd1LfhR
eKbGGr4Fvhl+Ad6b5x8O783zfwZfCNekvpk2N8HraLMXn8+CL9M9KfP0TNgf
h+fqPeGH4Ee0vuC74Lvgl+Fp8APwW/D98DTNQXg+vFBrCb4TvhPeDN+auj/X
w/3KPBYXc/+kUqFQxlrezvfXUSZgX06bmdgmU0opU7BPwb4J+wPwg5rzRT+3
5u1T8Ej4Ani25r/miZ6fOnKPU+AR8NWUKzVutKmBfTDciGe5BvtV8GLsT2lN
ap3DC+BnNFZwGe0Hwg3LPPaf5+uiD5/HUe8b7D8+z/3J1/n4fpL7DK3Hz/LP
ssu/7MFvTqKuzzUqwv3huvCjsVC4lnvvC98HXwo3hhsHv+M+8JjU6/dJ9S1t
zuPz+ZTytOmHvU6ZP2t8H6JNAXsfeC/sKTwArgfvygqFE+E94Ym0vxZeUbQv
uA5eCd8H3w+/AX9A+w7wfVyjE+VGuHmZfaD83i/yhcHzoQ32HXzuwBjWZZzP
CfZ1Wk//Ujphr4f97OB+7kb7s4LnT1d4WPA6OgYeGrzWjtZ7Ba+17vCQ4PE6
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
uSP4Gp8qz1AOqf2Ruh7fX5BYL7sr8RhrfDWetfIxHafcjrIGDlxzr8T9UCv4
vRdQX5w6Zr6/6Jxfuf+9ReccT8FfFZ2TaE+5veg8SPmj8si5qfMm5U8aA42F
+v+T1HNbc1z9Wjvv25Lg6+h66vuaef/fRH1h4ndTv16U920j6pGJ14zi6m35
+voq9fstLToH1bzS/JKO8f85n/oZ1K/TaDMDngq/Cm9JvWa3ps5XlbdKc/tv
8Jh8S31P4nvrvl+kfsY5Rfsg+SJpfVMTj4H6X/mpNMCvafNt6nfdIL8X3Pc/
Bef1Gp9XFI+kfleNr66v+a85/0/+W13j3+A5+IPys9R5qPJR5SfKU14pOi/X
+tI6U34t/fBP7PfxXHsnvq5y78aJ/YzGUmP6fWo/9v+cXXs+cfiZqfO4mZlj
zsu47+7K3l8Vz1eI3juVi4XoOFI5QqXovVz5RT/uMy/xOO0RvfcrBxmE7ZnE
e0/56L1Z+d03ee6s9Z1G7+uK//+tbF+2HXt97GenzqF2Ya+fOm/qy/XmJtat
6kbv/coLdmYe9xlaN3w/W/uI9oXoGEV5U53oOEb5y17RcYzyoN60m0Wpot9E
xxzKX5Lo2EU5bEl0vKLcsyx6X1R+VBodEyhHlsYlLW01toaUc1PrSO2jdUnl
oa2i9T7lp62jNSPpQp2j9Url4y2jtTzltvvAw1NrUPvBF6bWxveFL0itiX2f
z0/tmdJktH9u5PvGlKGpNa694WGpdbMm0TqgNL3u0fqs9IFO0fqmdJ6u0bqe
NIGB9MvTiWOCdtFap/Low6M1WeXLh0VrjtKB20TrntIQDo3WPZVrd4jWbaUV
dIvWgqWHHBmtJ0rHOCpaG5WOcUS0tiv9pGO03iqtrHZ0rKm8+IPgPUt7V83o
2Ff54C15/8+SngGfAz8GT4zOzR6Eq+Z7pfbMKXl/zpEeAF8Ez5MekPf5XO3z
eX/OhidF5yTTFePnffu4NIZ8vJ7Q/p/HFoorrovOLR/Afn10nvOQ/HF0znYT
PJR2axOv52GJ4wPFBgOizwykC50YrftL6+sbrZtLB+sTfTYgHeyC6JzteuUd
+TqaCd8QnVc8LD0yX/uPKGaJziFvhI+J1velHVXJYxLFJhOi48tptBkVHQve
Bt8dvZc8BR8drelL1zo2+sxAOlX16PhSuXmN6LhTOX6DfFykqUo/VKyxAVuM
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
fn0+7tIVdV6vc3vpkLqX7vk/l0UEbw==
            "]], Polygon3DBox[CompressedData["
1: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
VtFr/wQey7EA9z6VYyzvfxX2+0s0zZnb9fPXKjnxAuCLwLdg3xs8mVxNf4n9
a/D7LT6sJKdaG27zQZ252+P+X9P+rE6uOtScUK5F/1NLNK516P8w+N4SDWZd
8CPgf5RwnvWaaLQ3tv5R/6Gme3HrD9V6qyr1lm4bD/w+P4OfbP3zOxxL0h6H
53/Vfo8vSzjhWk2+id/mXWMK7aPraNFvc7zevr/an5xR7jgYTrU597rLfI92
H8fWveQM5g5qpGqlatC9/uTA1o52avUBNVK1UvXZ0h+NS232yl60L3MOc49V
2/zcGpi1sE1avWXmKrUYNRu1GzXIZdr5qHbzqPG7ip7wZR1Ncc2Smo9aoxrp
WuAJutFOzcE2LNE0zc2G8Iwte8mZzJ0cr/er6E8f1RmfL8C/gD+v83s6vN+I
XrTgfo7tesmZzJ3MP8fBvm0v2u94HBv1UlOztjYueMNeam7W3n4zptO+mGNC
bB2OlXupIVpLNMfarkQTNvdy/nxcRS++v873/xW8Ti/a9SCODWiP5PgL9i54
7V5qjO+28finll8Yn9W8f275kvH5izpj9VLLV6wxfNHGb2sP1oCebOOTtSFr
ZtbirNFYSzOHW7LEB5nb6YPWL9HE9U1qhK9X0fTUDs1JPi1ZM863Xh0/bF3N
eD28jYeuz9+1q4HE8m266WuNzVqc89XamzWNM1t/Lv+0Znp0y0etpVrze7yk
pmItUM1C7eIn8N9c33Vyi73aeP1EndrHUa1/maf1z4e38VmNfVTrn41vxrvR
rT83HlhDebCNf9ZWrMk81MYL47maxQttPDd+qiGoJai5qHWouTzfxv8VWz4w
po2fi7TxVz5wXhufrRltC56pm1rSYeB9SmrIr/dFoz+mJGdTu/9HHa54iDVo
5spbdbj5btZb+7M+rdEc0c16d045t5zz/e16V/vSZzi/rXmraYzbzl81BGvQ
dbs+nF9y4fHBP9XxKfoW57xz3/X83xKNYv0m/uDrKvUp5+/jdbjOEDXqOmvA
tVBZQ2njvdxsYmvY/akhjGzjrbUF8493qmgC7/fFn1rTsuYuf7UmtFQbD60V
mdPuW6J5mOtak9mgpIZkrUbN7qX2+6vlWQNaokQzMp46v/5ZRSNSK7NG9kBJ
jcPamTVja8fWUAbVqSle3vJT+YF8/vMqmpe1F/ms19hX/qqGK/+/tF0fapK3
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
Ov0fydu9kA==
            "]], Polygon3DBox[CompressedData["
1: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
RXHX9oY+tsbzka9Vd32sa9U9wt5ij7AWbJd4NJ38rRF/c7SWbxcPsC1sImsk
f00sijHNHmKd5DvFQ2wrm8KayneIB9nLbDJrIm+i39XsJ/YCu5K9Kuawl9gk
1li+Ryxk+9iDrKN8t1jA9rI5rIN8s5gU6wZ2O6shf1lMY6vZCHZOXL+Ywdax
MaxujFsxlT3PhrPa8i1iClvF7mC15C+Kyew5NozVjPskurERrAn7xr1fz+6K
eSI7WdvG32mbxDi2nA1m1eVLM8k66Iy8ZP0U66gpohK7UF0xdRscr5B71YwN
Yw3ZOzG/sB4xX7Bu7Ae2IpPMNdUdLy++fzEvqevJ7lV3sbofc5K/EeJvhe/T
yVp5hd+S6vr4fYBfxn5T94z2g9nc+KayUvFuZJL5sVpeMr/FPFdK275sjrpe
6n7XdhUfyh5l/VkZ+Roxki1g17PysWbStnfMj6wn+1XbZZlkHVk1L5mTY25e
K0axhepuUFch3vGYs9h8dm3Mq/LVYgR7kl3HysmfE7exeaxf/G2SSf7uvpzN
YjNjvOlrHu/Khssbx98QziVfHBWlc5N10bS8ZD0Q64L96g/E++Z3lqhj/+Xa
lmW77J8d30d2BSvHdrN17E62ONZMrJL8/pjfWW9Wgb2mrrD+2rDRMZewD9lj
6i5mI2M+YN+yuawVG8Rqsw/YA6wh68eqsjfZfbHmYFey8mwPe5A1ZzewGuxd
9hBrwQawmuw9NifWMKw/q8beYrnOr3usKbKT/4fE/0UeVteSDWS12PvsSKy7
xKm5yZpqqvv3D1EyOwY=
            "]], 
           Polygon3DBox[{{3311, 771, 897, 2323, 2302, 3331}, {3234, 2147, 
            2267, 3665, 3068, 3069}, {3321, 785, 904, 2324, 2304, 3335}, {
            3317, 778, 813, 2329, 2305, 3340}, {3299, 2279, 1991, 1992, 2280, 
            3300}}]},
          Annotation[#, "Charting`Private`Tag$465866#3"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
          "Directional", 
           RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
           
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
           
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
           
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0skqRmEcwOHXPA9XQC4AN4AbwMYSWdih2PrsRWzNszLcAG7AkCSZfWaS
ZCqZbeQ5pc7vPP96T2d4O0WNbTWtCSGETn0qml91o6KMEPJZykJWsITVLGc9
q9jCOnawmT3sVcw8z24ucZCrnOM+F6PncIUNmSHc8Vt7eteT+pJdy34ecICH
HOQRhxjnMI85whOOckyn5nGecYLnnOQFp3jJaV6xPSWEe/7oWh961q933OUL
l6M1LnCXs1zmABfYxVnOqN3cxabo3qxlEytZyzJWsphlLGCdfbjll/L0pkdd
JIWQyzPm8ITZjDOLh8yM9pVuFXa4rXTzFtO4yVRu0KeGdfr0sEZHWHFKZMzi
w///8Af0vFGT
        "]]}, 
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0rkv5GEAx+F3MCw6kdDKJpSmoVTZyrnuFj2hdU42IxERRDQithah3oT9
C3ax6xhHZLNxFu6NbOF+JopPnm/15v0dRR3dDV2REEJCN8YDL3io9pwQstnN
Qg6yhOMs5xw/cZFNXOGqOu099vKccf7nJKO5IXxlPpf5kd85z7+8009d6VRV
mSGssZrrrOEGa/mLdfzNem7yMxu0ZTdym03cYTOTbOEuW7nHNu6zNCuEI/7T
ga51pgp3+8EYV1nEJeZxnumc4L1nHE7dmz1Mckcd9jc2coGVnGUZx1jMfhak
3qmz/vBWH3SpE81EQ8jiNDM5xSgnmJH6JkxPncc0jjLCESYU7C98NeN84RCf
OcAn9vGRMe/hOPL+P7wBpHxNLA==
        "]]}, 
      {GrayLevel[0], 
       Line3DBox[{744, 499, 740, 725, 2977, 514, 2991, 529, 3006, 544, 3021, 
        559, 905}], Line3DBox[{1842, 500, 2263, 732, 744}], 
       Line3DBox[{1844, 501, 1842}], Line3DBox[{1846, 502, 1844}], 
       Line3DBox[{1848, 503, 1846}], Line3DBox[{1850, 504, 1848}], 
       Line3DBox[{1852, 505, 1850}], Line3DBox[{1856, 506, 1853, 1852}], 
       Line3DBox[{1858, 507, 1856}], Line3DBox[{1860, 508, 1858}], 
       Line3DBox[{1862, 509, 1860}], Line3DBox[{1864, 510, 1862}], 
       Line3DBox[{1866, 511, 1864}], Line3DBox[{1868, 512, 1866}], 
       Line3DBox[{745, 513, 741, 733, 1868}], 
       Line3DBox[{3004, 528, 3282, 727, 745}], Line3DBox[{3019, 543, 3004}], 
       Line3DBox[{3034, 558, 3019}], 
       Line3DBox[{750, 574, 3049, 589, 3065, 3066, 604, 3093, 619, 3107, 634, 
        3121, 649, 3135, 664, 3149, 679, 3163, 694, 3284, 729, 746, 709, 742, 
        734, 2043, 710, 2044, 711, 2045, 712, 2046, 713, 2047, 714, 2048, 715,
         2049, 2050, 716, 2051, 717, 2052, 718, 768, 2309, 895}], 
       Line3DBox[{3048, 573, 3034}], Line3DBox[{3062, 588, 3048}], 
       Line3DBox[{3090, 603, 3062}], Line3DBox[{3105, 618, 3091, 3090}], 
       Line3DBox[{3119, 633, 3105}], Line3DBox[{3133, 648, 3119}], 
       Line3DBox[{3147, 663, 3133}], Line3DBox[{3161, 678, 3147}], 
       Line3DBox[{3175, 693, 3161}], 
       Line3DBox[{796, 719, 2053, 720, 2054, 721, 2055, 722, 2262, 731, 747, 
        723, 743, 735, 3189, 708, 3175}], Line3DBox[{750, 3290, 798}]}, {}, 
      {GrayLevel[0.2], 
       Line3DBox[{2337, 2650, 1186, 2336, 3673, 2559, 2338, 3674, 2560, 2339, 
        3675, 2561, 2340, 3676, 2562, 2341, 3677, 2563, 2342, 3678, 2564, 
        2343, 3679, 3368, 3778, 2344, 3680, 2565, 2345, 3681, 2566, 2346, 
        3682, 2567, 2347, 3683, 2568, 2348, 3684, 2569, 2349, 3471, 3685, 
        2570, 2651}], 
       Line3DBox[{2351, 3369, 3779, 2350, 1201, 2352, 3686, 2571, 2353, 3687, 
        2572, 2354, 3688, 2573, 2355, 3689, 2574, 2356, 3690, 2575, 2357, 
        3691, 3370, 3780, 2358, 3371, 3781, 2359, 3692, 2576, 2360, 3693, 
        2577, 2361, 3694, 2578, 2362, 3695, 2579, 2363, 3696, 2580, 2364}], 
       Line3DBox[{2366, 3372, 3782, 2365, 3373, 3783, 2367, 1217, 2368, 3697, 
        2581, 2369, 3698, 2582, 2370, 3699, 2583, 2371, 3700, 2584, 2372, 
        3701, 3374, 3784, 2373, 3375, 3785, 2374, 3376, 3786, 2375, 3702, 
        2585, 2376, 3703, 2586, 2377, 3704, 2587, 2378, 3705, 2588, 2379}], 
       Line3DBox[{2381, 3377, 3787, 2380, 3378, 3788, 2382, 3379, 3789, 2383, 
        1233, 2384, 3706, 2589, 2385, 3707, 2590, 2386, 3708, 2591, 2387, 
        3709, 3380, 3790, 2388, 3381, 3791, 2389, 3382, 3792, 2390, 3383, 
        3793, 2391, 3710, 2592, 2392, 3711, 2593, 2393, 3712, 2594, 2394}], 
       Line3DBox[{2396, 3384, 3794, 2395, 3385, 3795, 2397, 3386, 3796, 2398, 
        3387, 3797, 2399, 1249, 2400, 3713, 2595, 2401, 3714, 2596, 2402, 
        3715, 3388, 3798, 2403, 3389, 3799, 2404, 3390, 3800, 2405, 3391, 
        3801, 2406, 3392, 3802, 2407, 3716, 2597, 2408, 3717, 2598, 2409}], 
       Line3DBox[{2411, 3393, 3803, 2410, 3394, 3804, 2412, 3395, 3805, 2413, 
        3396, 3806, 2414, 3397, 3807, 2415, 1265, 2416, 3718, 2599, 2417, 
        3719, 3398, 3808, 2418, 3399, 3809, 2419, 3400, 3810, 2420, 3401, 
        3811, 2421, 3402, 3812, 2422, 3403, 3813, 2423, 3720, 2600, 2424}], 
       Line3DBox[{2426, 3404, 3814, 2425, 3405, 3815, 2427, 3406, 3816, 2428, 
        3407, 3817, 2429, 3408, 3818, 2430, 3409, 3819, 2431, 1281, 2432, 
        3721, 3410, 3820, 2433, 3411, 3821, 2434, 3412, 3822, 2435, 3413, 
        3823, 2436, 3414, 3824, 2437, 3415, 3825, 2438, 3416, 3826, 2439}], 
       Line3DBox[{2443, 3722, 2601, 2441, 3723, 2602, 2445, 3724, 2603, 2447, 
        3725, 2604, 2449, 3726, 2605, 2451, 3727, 2606, 2453, 3728, 2607, 
        2455, 3729, 1298, 2457, 3730, 2608, 2459, 3731, 2609, 2461, 3732, 
        2610, 2463, 3733, 2611, 2465, 3734, 2612, 2467, 3735, 2613, 2469}], 
       Line3DBox[{2468, 3840, 3429, 2466, 3839, 3428, 2464, 3838, 3427, 2462, 
        3837, 3426, 2460, 3836, 3425, 2458, 3835, 3424, 2456, 3834, 1297, 
        2454, 3833, 3423, 2452, 3832, 3422, 2450, 3831, 3421, 2448, 3830, 
        3420, 2446, 3829, 3419, 2444, 3828, 3418, 2440, 3827, 3417, 2442}], 
       Line3DBox[{2471, 3430, 3841, 2470, 3736, 2614, 2472, 3737, 2615, 2473, 
        3738, 2616, 2474, 3739, 2617, 2475, 3740, 2618, 2476, 3741, 2619, 
        2477, 3742, 3431, 3842, 2478, 1314, 2479, 3743, 2620, 2480, 3744, 
        2621, 2481, 3745, 2622, 2482, 3746, 2623, 2483, 3747, 2624, 2484}], 
       Line3DBox[{2486, 3432, 3843, 2485, 3433, 3844, 2487, 3748, 2625, 2488, 
        3749, 2626, 2489, 3750, 2627, 2490, 3751, 2628, 2491, 3752, 2629, 
        2492, 3753, 3434, 3845, 2493, 3435, 3846, 2494, 1330, 2495, 3754, 
        2630, 2496, 3755, 2631, 2497, 3756, 2632, 2498, 3757, 2633, 2499}], 
       Line3DBox[{2501, 3436, 3847, 2500, 3437, 3848, 2502, 3438, 3849, 2503, 
        3758, 2634, 2504, 3759, 2635, 2505, 3760, 2636, 2506, 3761, 2637, 
        2507, 3762, 3439, 3850, 2508, 3440, 3851, 2509, 3441, 3852, 2510, 
        1346, 2511, 3763, 2638, 2512, 3764, 2639, 2513, 3765, 2640, 2514}], 
       Line3DBox[{2516, 3442, 3853, 2515, 3443, 3854, 2517, 3444, 3855, 2518, 
        3445, 3856, 2519, 3766, 2641, 2520, 3767, 2642, 2521, 3768, 2643, 
        2522, 3769, 3446, 3857, 2523, 3447, 3858, 2524, 3448, 3859, 2525, 
        3449, 3860, 2526, 1362, 2527, 3770, 2644, 2528, 3771, 2645, 2529}], 
       Line3DBox[{2531, 3450, 3861, 2530, 3451, 3862, 2532, 3452, 3863, 2533, 
        3453, 3864, 2534, 3454, 3865, 2535, 3772, 2646, 2536, 3773, 2647, 
        2537, 3774, 3455, 3866, 2538, 3456, 3867, 2539, 3457, 3868, 2540, 
        3458, 3869, 2541, 3459, 3870, 2542, 1378, 2543, 3775, 2648, 2544}], 
       Line3DBox[{2558, 2655, 1398, 2557, 3881, 3470, 2556, 3880, 3469, 2555, 
        3879, 3468, 2554, 3878, 3467, 2553, 3877, 3466, 2552, 3876, 3465, 
        3777, 2551, 2649, 3776, 2550, 3875, 3464, 2549, 3874, 3463, 2548, 
        3873, 3462, 2547, 3872, 3461, 2546, 3871, 3460, 2545, 3882, 2653, 
        2652, 2654}], 
       Line3DBox[{2657, 2970, 1625, 2656, 3986, 2879, 2658, 3987, 2880, 2659, 
        3988, 2881, 2660, 3989, 2882, 2661, 3990, 2883, 2662, 3991, 3472, 
        3883, 2663, 3992, 2884, 2664, 3993, 2885, 2665, 3994, 2886, 2666, 
        3995, 2887, 2667, 3996, 2888, 2668, 3997, 2889, 2669, 3998, 2971, 
        2890, 2972}], 
       Line3DBox[{2671, 3473, 3884, 2670, 1640, 2672, 3999, 2891, 2673, 4000, 
        2892, 2674, 4001, 2893, 2675, 4002, 2894, 2676, 4003, 3474, 3885, 
        2677, 3475, 3886, 2678, 4004, 2895, 2679, 4005, 2896, 2680, 4006, 
        2897, 2681, 4007, 2898, 2682, 4008, 2899, 2683, 4009, 2900, 2684}], 
       Line3DBox[{2686, 3476, 3887, 2685, 3477, 3888, 2687, 1656, 2688, 4010, 
        2901, 2689, 4011, 2902, 2690, 4012, 2903, 2691, 4013, 3478, 3889, 
        2692, 3479, 3890, 2693, 3480, 3891, 2694, 4014, 2904, 2695, 4015, 
        2905, 2696, 4016, 2906, 2697, 4017, 2907, 2698, 4018, 2908, 2699}], 
       Line3DBox[{2701, 3481, 3892, 2700, 3482, 3893, 2702, 3483, 3894, 2703, 
        1672, 2704, 4019, 2909, 2705, 4020, 2910, 2706, 4021, 3484, 3895, 
        2707, 3485, 3896, 2708, 3486, 3897, 2709, 3487, 3898, 2710, 4022, 
        2911, 2711, 4023, 2912, 2712, 4024, 2913, 2713, 4025, 2914, 2714}], 
       Line3DBox[{2716, 3488, 3899, 2715, 3489, 3900, 2717, 3490, 3901, 2718, 
        3491, 3902, 2719, 1688, 2720, 4026, 2915, 2721, 4027, 3492, 3903, 
        2722, 3493, 3904, 2723, 3494, 3905, 2724, 3495, 3906, 2725, 3496, 
        3907, 2726, 4028, 2916, 2727, 4029, 2917, 2728, 4030, 2918, 2729}], 
       Line3DBox[{2731, 3497, 3908, 2730, 3498, 3909, 2732, 3499, 3910, 2733, 
        3500, 3911, 2734, 3501, 3912, 2735, 1704, 2736, 4031, 3502, 3913, 
        2737, 3503, 3914, 2738, 3504, 3915, 2739, 3505, 3916, 2740, 3506, 
        3917, 2741, 3507, 3918, 2742, 4032, 2919, 2743, 4033, 2920, 2744}], 
       Line3DBox[{2748, 4034, 2921, 2746, 4035, 2922, 2750, 4036, 2923, 2752, 
        4037, 2924, 2754, 4038, 2925, 2756, 4039, 2926, 2758, 4040, 1721, 
        2760, 4041, 2927, 2762, 4042, 2928, 2764, 4043, 2929, 2766, 4044, 
        2930, 2768, 4045, 2931, 2770, 4046, 2932, 2772, 4047, 2933, 2774}], 
       Line3DBox[{2773, 1728, 2771, 3931, 3519, 2769, 3930, 3518, 2767, 3929, 
        3517, 2765, 3928, 3516, 2763, 3927, 3515, 2761, 3926, 3514, 2759, 
        3925, 1720, 2757, 3924, 3513, 2755, 3923, 3512, 2753, 3922, 3511, 
        2751, 3921, 3510, 2749, 3920, 3509, 2745, 3919, 3508, 2747}], 
       Line3DBox[{2776, 3520, 3932, 2775, 4048, 2934, 2777, 4049, 2935, 2778, 
        4050, 2936, 2779, 4051, 2937, 2780, 4052, 2938, 2781, 4053, 3521, 
        3933, 2782, 1737, 2783, 4054, 2939, 2784, 4055, 2940, 2785, 4056, 
        2941, 2786, 4057, 2942, 2787, 4058, 2943, 2788, 4059, 2944, 2789}], 
       Line3DBox[{2791, 3522, 3934, 2790, 3523, 3935, 2792, 4060, 2945, 2793, 
        4061, 2946, 2794, 4062, 2947, 2795, 4063, 2948, 2796, 4064, 3524, 
        3936, 2797, 3525, 3937, 2798, 1753, 2799, 4065, 2949, 2800, 4066, 
        2950, 2801, 4067, 2951, 2802, 4068, 2952, 2803, 4069, 2953, 2804}], 
       Line3DBox[{2806, 3526, 3938, 2805, 3527, 3939, 2807, 3528, 3940, 2808, 
        4070, 2954, 2809, 4071, 2955, 2810, 4072, 2956, 2811, 4073, 3529, 
        3941, 2812, 3530, 3942, 2813, 3531, 3943, 2814, 1769, 2815, 4074, 
        2957, 2816, 4075, 2958, 2817, 4076, 2959, 2818, 4077, 2960, 2819}], 
       Line3DBox[{2821, 3532, 3944, 2820, 3533, 3945, 2822, 3534, 3946, 2823, 
        3535, 3947, 2824, 4078, 2961, 2825, 4079, 2962, 2826, 4080, 3536, 
        3948, 2827, 3537, 3949, 2828, 3538, 3950, 2829, 3539, 3951, 2830, 
        1785, 2831, 4081, 2963, 2832, 4082, 2964, 2833, 4083, 2965, 2834}], 
       Line3DBox[{2836, 3540, 3952, 2835, 3541, 3953, 2837, 3542, 3954, 2838, 
        3543, 3955, 2839, 3544, 3956, 2840, 4084, 2966, 2841, 4085, 3545, 
        3957, 2842, 3546, 3958, 2843, 3547, 3959, 2844, 3548, 3960, 2845, 
        3549, 3961, 2846, 1801, 2847, 4086, 2967, 2848, 4087, 2968, 2849}], 
       Line3DBox[{2851, 3550, 3962, 2850, 3551, 3963, 2852, 3552, 3964, 2853, 
        3553, 3965, 2854, 3554, 3966, 2855, 3555, 3967, 2856, 4088, 3556, 
        3968, 2857, 3557, 3969, 2858, 3558, 3970, 2859, 3559, 3971, 2860, 
        3560, 3972, 2861, 3561, 3973, 2862, 1817, 2863, 4089, 2969, 2864}], 
       Line3DBox[{2878, 2975, 1837, 2877, 3985, 3572, 2876, 3984, 3571, 2875, 
        3983, 3570, 2874, 3982, 3569, 2873, 3981, 3568, 2872, 3980, 3567, 
        2871, 3979, 1825, 2870, 3978, 3566, 2869, 3977, 3565, 2868, 3976, 
        3564, 2867, 3975, 3563, 2866, 3974, 3562, 2865, 3573, 4090, 2973, 
        2974}], Line3DBox[{2977, 3280, 2056, 2976, 4185, 3190, 2978, 4186, 
        3191, 2979, 4187, 3192, 2980, 4188, 3193, 2981, 4189, 3194, 2982, 
        4190, 3574, 4091, 2983, 4191, 3195, 2984, 4192, 3196, 2985, 4193, 
        3197, 2986, 4194, 3198, 2987, 4195, 3199, 2988, 4196, 3200, 2989, 
        4197, 3281, 3201, 3282}], 
       Line3DBox[{2991, 3575, 4092, 2990, 2071, 2992, 4198, 3202, 2993, 4199, 
        3203, 2994, 4200, 3204, 2995, 4201, 3205, 2996, 4202, 3576, 4093, 
        2997, 3577, 4094, 2998, 4203, 3206, 2999, 4204, 3207, 3000, 4205, 
        3208, 3001, 4206, 3209, 3002, 4207, 3210, 3003, 4208, 3211, 3004}], 
       Line3DBox[{3006, 3578, 4095, 3005, 3579, 4096, 3007, 2087, 3008, 4209, 
        3212, 3009, 4210, 3213, 3010, 4211, 3214, 3011, 4212, 3580, 4097, 
        3012, 3581, 4098, 3013, 3582, 4099, 3014, 4213, 3215, 3015, 4214, 
        3216, 3016, 4215, 3217, 3017, 4216, 3218, 3018, 4217, 3219, 3019}], 
       Line3DBox[{3021, 3583, 4100, 3020, 3584, 4101, 3022, 3585, 4102, 3023, 
        2103, 3024, 4218, 3220, 3025, 4219, 3221, 3026, 4220, 3586, 4103, 
        3027, 3587, 4104, 3028, 3588, 4105, 3029, 3589, 4106, 3030, 4221, 
        3222, 3031, 4222, 3223, 3032, 4223, 3224, 3033, 4224, 3225, 3034}], 
       Line3DBox[{3048, 3229, 4229, 3047, 3228, 4228, 3046, 3227, 4227, 3045, 
        4115, 3597, 3044, 4114, 3596, 3043, 4113, 3595, 3042, 4112, 3594, 
        3041, 4111, 3593, 4226, 3040, 3226, 4225, 3039, 2119, 3038, 4110, 
        3592, 3037, 4109, 3591, 3036, 4108, 3590, 3035, 4107, 3287, 3286, 
        3350}], Line3DBox[{3049, 3288, 3310, 3330, 3289, 4291, 3336, 3365}], 
       Line3DBox[{3062, 3231, 4232, 3061, 3230, 4231, 3060, 4124, 3606, 3059, 
        4123, 3605, 3058, 4122, 3604, 3057, 4121, 3603, 3056, 4120, 3602, 
        3055, 4119, 3601, 4230, 3054, 2135, 3053, 4118, 3600, 3052, 4117, 
        3599, 3051, 4116, 3598, 3050, 3664, 4282, 3291, 3322, 3359}], 
       Line3DBox[{3066, 4233, 3232, 3064, 3293, 4283, 3233, 3312, 3337, 3345, 
        3328, 3313, 4292, 3672}], 
       Line3DBox[{3090, 2159, 3088, 4135, 3616, 3086, 4134, 3615, 3084, 4133, 
        3614, 3082, 4132, 3613, 3080, 4131, 3612, 3078, 4130, 3611, 3076, 
        4129, 2151, 3074, 4128, 3610, 3072, 4127, 3609, 3070, 4126, 3608, 
        3068, 3665, 4284, 3294, 3323, 3067, 3352}], 
       Line3DBox[{3093, 3617, 4136, 3092, 4245, 3245, 3094, 3295, 4285, 3246, 
        3314, 3338, 3346, 3669, 4294, 3315, 3358}], 
       Line3DBox[{3105, 3255, 4254, 3104, 3254, 4253, 3103, 3253, 4252, 3102, 
        3252, 4251, 3101, 3251, 4250, 3100, 3250, 4249, 3099, 2167, 3098, 
        4137, 3618, 4248, 3097, 3249, 4247, 3096, 3248, 4246, 3095, 3247, 
        3354}], Line3DBox[{3107, 3619, 4138, 3106, 3620, 4139, 3108, 4255, 
        3256, 3109, 3666, 4286, 3257, 3316, 3339, 3347, 4289, 3329, 3362}], 
       Line3DBox[{3119, 3264, 4262, 3118, 3263, 4261, 3117, 3262, 4260, 3116, 
        3261, 4259, 3115, 3260, 4258, 3114, 2181, 3113, 4141, 3622, 3112, 
        4140, 3621, 4257, 3111, 3259, 4256, 3110, 3258, 3326, 3361}], 
       Line3DBox[{3121, 3623, 4142, 3120, 3624, 4143, 3122, 3625, 4144, 3123, 
        4263, 3265, 3124, 4264, 3296, 3266, 3317, 3340, 4297, 3366}], 
       Line3DBox[{3133, 3271, 4269, 3132, 3270, 4268, 3131, 3269, 4267, 3130, 
        3268, 4266, 3129, 2195, 3128, 4147, 3628, 3127, 4146, 3627, 3126, 
        4145, 3626, 4265, 3125, 3267, 3327, 3348, 3349}], 
       Line3DBox[{3135, 3629, 4148, 3134, 3630, 4149, 3136, 3631, 4150, 3137, 
        3632, 4151, 3138, 4270, 3272, 3139, 4271, 3297, 3318, 3332, 3298, 
        3341, 3343, 4290, 3671}], 
       Line3DBox[{3147, 3275, 4274, 3146, 3274, 4273, 3145, 3273, 4272, 3144, 
        2209, 3143, 4155, 3635, 3142, 4154, 3634, 3141, 4153, 3633, 3140, 
        4152, 3300, 3299, 888}], 
       Line3DBox[{3149, 3636, 4156, 3148, 3637, 4157, 3150, 3638, 4158, 3151, 
        3639, 4159, 3152, 3640, 4160, 3153, 4275, 3276, 3154, 4276, 3301, 
        3319, 3333, 3302, 3670, 4298, 3344, 3357}], 
       Line3DBox[{3161, 3278, 4278, 3160, 3277, 4277, 3159, 2224, 3158, 4164, 
        3643, 3157, 4163, 3642, 3156, 4162, 3641, 3155, 4161, 3304, 3303, 
        3351}], Line3DBox[{3163, 3644, 4165, 3162, 3645, 4166, 3164, 3646, 
        4167, 3165, 3647, 4168, 3166, 3648, 4169, 3167, 3649, 4170, 3168, 
        4279, 3650, 4171, 3169, 3305, 3320, 3334, 3306, 4293, 3342, 3367}], 
       Line3DBox[{3175, 3279, 4280, 3174, 2240, 3173, 4174, 3653, 3172, 4173, 
        3652, 3171, 4172, 3651, 3170, 3667, 4287, 3307, 3324, 3360}], 
       Line3DBox[{3189, 3285, 2260, 3188, 4184, 3662, 3187, 4183, 3661, 3186, 
        4182, 3660, 3185, 3668, 4288, 3309, 3325, 3184, 3355}], 
       Line3DBox[{3284, 3283, 4281, 3663, 3176, 3654, 4175, 3177, 3655, 4176, 
        3178, 3656, 4177, 3179, 3657, 4178, 3180, 3658, 4179, 3181, 2248, 
        4180, 3182, 3659, 4181, 3183, 3308, 3321, 3335, 4296, 3364}], 
       Line3DBox[{3290, 3356}], 
       Line3DBox[{3353, 3234, 3069, 4234, 3235, 3071, 4235, 3236, 3073, 4236, 
        3237, 3075, 4237, 2152, 3077, 4238, 3238, 3079, 4239, 3239, 3081, 
        4240, 3240, 3083, 4241, 3241, 3085, 4242, 3242, 3087, 4243, 3243, 
        3089, 4244, 3244, 3091}], 
       Line3DBox[{3363, 4295, 3331, 3311, 3292, 3063, 4125, 3607, 3065}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{964, 1187, 3673, 965, 1201, 993, 3783, 1216, 1008, 3788, 
        1231, 1023, 3795, 1246, 1038, 3804, 1261, 1053, 3815, 1276, 1068, 
        3828, 1291, 3723, 1083, 1306, 3736, 1098, 3844, 1321, 1113, 3848, 
        1336, 1128, 3854, 1351, 1143, 3862, 1366, 1158, 3871, 1381, 1173}], 
       Line3DBox[{966, 1188, 3674, 967, 1202, 3686, 994, 1217, 1009, 3789, 
        1232, 1024, 3796, 1247, 1039, 3805, 1262, 1054, 3816, 1277, 1069, 
        3829, 1292, 3724, 1084, 1307, 3737, 1099, 1322, 3748, 1114, 3849, 
        1337, 1129, 3855, 1352, 1144, 3863, 1367, 1159, 3872, 1382, 1174}], 
       Line3DBox[{968, 1189, 3675, 969, 1203, 3687, 995, 1218, 3697, 1010, 
        1233, 1025, 3797, 1248, 1040, 3806, 1263, 1055, 3817, 1278, 1070, 
        3830, 1293, 3725, 1085, 1308, 3738, 1100, 1323, 3749, 1115, 1338, 
        3758, 1130, 3856, 1353, 1145, 3864, 1368, 1160, 3873, 1383, 1175}], 
       Line3DBox[{970, 1190, 3676, 971, 1204, 3688, 996, 1219, 3698, 1011, 
        1234, 3706, 1026, 1249, 1041, 3807, 1264, 1056, 3818, 1279, 1071, 
        3831, 1294, 3726, 1086, 1309, 3739, 1101, 1324, 3750, 1116, 1339, 
        3759, 1131, 1354, 3766, 1146, 3865, 1369, 1161, 3874, 1384, 1176}], 
       Line3DBox[{972, 1191, 3677, 973, 1205, 3689, 997, 1220, 3699, 1012, 
        1235, 3707, 1027, 1250, 3713, 1042, 1265, 1057, 3819, 1280, 1072, 
        3832, 1295, 3727, 1087, 1310, 3740, 1102, 1325, 3751, 1117, 1340, 
        3760, 1132, 1355, 3767, 1147, 1370, 3772, 1162, 3875, 1385, 1177}], 
       Line3DBox[{974, 1192, 3678, 975, 1206, 3690, 998, 1221, 3700, 1013, 
        1236, 3708, 1028, 1251, 3714, 1043, 1266, 3718, 1058, 1281, 1073, 
        3833, 1296, 3728, 1088, 1311, 3741, 1103, 1326, 3752, 1118, 1341, 
        3761, 1133, 1356, 3768, 1148, 1371, 3773, 1163, 1386, 3776, 1178}], 
       Line3DBox[{976, 1193, 3679, 978, 1207, 3691, 999, 1222, 3701, 1014, 
        1237, 3709, 1029, 1252, 3715, 1044, 1267, 3719, 1059, 1282, 3721, 
        1074, 1297, 3729, 1089, 1312, 3742, 1104, 1327, 3753, 1119, 1342, 
        3762, 1134, 1357, 3769, 1149, 1372, 3774, 1164, 1387, 3777, 1179}], 
       Line3DBox[{980, 1195, 3680, 981, 3781, 1209, 1001, 3785, 1224, 1016, 
        3791, 1239, 1031, 3799, 1254, 1046, 3809, 1269, 1061, 3821, 1284, 
        1076, 3835, 1299, 3730, 1091, 1314, 1106, 3846, 1329, 1121, 3851, 
        1344, 1136, 3858, 1359, 1151, 3867, 1374, 1166, 3877, 1389, 1181}], 
       Line3DBox[{982, 1196, 3681, 983, 1210, 3692, 1002, 3786, 1225, 1017, 
        3792, 1240, 1032, 3800, 1255, 1047, 3810, 1270, 1062, 3822, 1285, 
        1077, 3836, 1300, 3731, 1092, 1315, 3743, 1107, 1330, 1122, 3852, 
        1345, 1137, 3859, 1360, 1152, 3868, 1375, 1167, 3878, 1390, 1182}], 
       Line3DBox[{984, 1197, 3682, 985, 1211, 3693, 1003, 1226, 3702, 1018, 
        3793, 1241, 1033, 3801, 1256, 1048, 3811, 1271, 1063, 3823, 1286, 
        1078, 3837, 1301, 3732, 1093, 1316, 3744, 1108, 1331, 3754, 1123, 
        1346, 1138, 3860, 1361, 1153, 3869, 1376, 1168, 3879, 1391, 1183}], 
       Line3DBox[{986, 1198, 3683, 987, 1212, 3694, 1004, 1227, 3703, 1019, 
        1242, 3710, 1034, 3802, 1257, 1049, 3812, 1272, 1064, 3824, 1287, 
        1079, 3838, 1302, 3733, 1094, 1317, 3745, 1109, 1332, 3755, 1124, 
        1347, 3763, 1139, 1362, 1154, 3870, 1377, 1169, 3880, 1392, 1184}], 
       Line3DBox[{988, 1199, 3684, 989, 1213, 3695, 1005, 1228, 3704, 1020, 
        1243, 3711, 1035, 1258, 3716, 1050, 3813, 1273, 1065, 3825, 1288, 
        1080, 3839, 1303, 3734, 1095, 1318, 3746, 1110, 1333, 3756, 1125, 
        1348, 3764, 1140, 1363, 3770, 1155, 1378, 1170, 3881, 1393, 1185}], 
       Line3DBox[{990, 1395, 1396, 3685, 991, 1214, 3696, 1006, 1229, 3705, 
        1021, 1244, 3712, 1036, 1259, 3717, 1051, 1274, 3720, 1066, 3826, 
        1289, 1081, 3840, 1304, 3735, 1096, 1319, 3747, 1111, 1334, 3757, 
        1126, 1349, 3765, 1141, 1364, 3771, 1156, 1379, 3775, 1171, 1398, 
        1399, 1400}], 
       Line3DBox[{1172, 1380, 3882, 1397, 1157, 1365, 3861, 1142, 1350, 3853, 
        1127, 1335, 3847, 1112, 1320, 3843, 1097, 1305, 3841, 1082, 3722, 
        1290, 3827, 1067, 1275, 3814, 1052, 1260, 3803, 1037, 1245, 3794, 
        1022, 1230, 3787, 1007, 1215, 3782, 992, 1200, 3779, 963, 1186, 1394, 
        1401}], Line3DBox[{1180, 1388, 3876, 1165, 1373, 3866, 1150, 1358, 
        3857, 1135, 1343, 3850, 1120, 1328, 3845, 1105, 1313, 3842, 1090, 
        1298, 3834, 1075, 1283, 3820, 1060, 1268, 3808, 1045, 1253, 3798, 
        1030, 1238, 3790, 1015, 1223, 3784, 1000, 1208, 3780, 979, 1194, 3778,
         977}], Line3DBox[{1403, 1626, 3986, 1404, 1640, 1432, 3888, 1655, 
        1447, 3893, 1670, 1462, 3900, 1685, 1477, 3909, 1700, 1492, 3920, 
        1715, 4035, 1507, 1730, 4048, 1522, 3935, 1745, 1537, 3939, 1760, 
        1552, 3945, 1775, 1567, 3953, 1790, 1582, 3963, 1805, 1597, 3974, 
        1820, 1612}], 
       Line3DBox[{1405, 1627, 3987, 1406, 1641, 3999, 1433, 1656, 1448, 3894, 
        1671, 1463, 3901, 1686, 1478, 3910, 1701, 1493, 3921, 1716, 4036, 
        1508, 1731, 4049, 1523, 1746, 4060, 1538, 3940, 1761, 1553, 3946, 
        1776, 1568, 3954, 1791, 1583, 3964, 1806, 1598, 3975, 1821, 1613}], 
       Line3DBox[{1407, 1628, 3988, 1408, 1642, 4000, 1434, 1657, 4010, 1449, 
        1672, 1464, 3902, 1687, 1479, 3911, 1702, 1494, 3922, 1717, 4037, 
        1509, 1732, 4050, 1524, 1747, 4061, 1539, 1762, 4070, 1554, 3947, 
        1777, 1569, 3955, 1792, 1584, 3965, 1807, 1599, 3976, 1822, 1614}], 
       Line3DBox[{1409, 1629, 3989, 1410, 1643, 4001, 1435, 1658, 4011, 1450, 
        1673, 4019, 1465, 1688, 1480, 3912, 1703, 1495, 3923, 1718, 4038, 
        1510, 1733, 4051, 1525, 1748, 4062, 1540, 1763, 4071, 1555, 1778, 
        4078, 1570, 3956, 1793, 1585, 3966, 1808, 1600, 3977, 1823, 1615}], 
       Line3DBox[{1411, 1630, 3990, 1412, 1644, 4002, 1436, 1659, 4012, 1451, 
        1674, 4020, 1466, 1689, 4026, 1481, 1704, 1496, 3924, 1719, 4039, 
        1511, 1734, 4052, 1526, 1749, 4063, 1541, 1764, 4072, 1556, 1779, 
        4079, 1571, 1794, 4084, 1586, 3967, 1809, 1601, 3978, 1824, 1616}], 
       Line3DBox[{1413, 1631, 3991, 1415, 1645, 4003, 1437, 1660, 4013, 1452, 
        1675, 4021, 1467, 1690, 4027, 1482, 1705, 4031, 1497, 1720, 4040, 
        1512, 1735, 4053, 1527, 1750, 4064, 1542, 1765, 4073, 1557, 1780, 
        4080, 1572, 1795, 4085, 1587, 1810, 4088, 1602, 1825, 1617}], 
       Line3DBox[{1417, 1633, 3992, 1418, 3886, 1647, 1439, 3890, 1662, 1454, 
        3896, 1677, 1469, 3904, 1692, 1484, 3914, 1707, 1499, 3926, 1722, 
        4041, 1514, 1737, 1529, 3937, 1752, 1544, 3942, 1767, 1559, 3949, 
        1782, 1574, 3958, 1797, 1589, 3969, 1812, 1604, 3980, 1827, 1619}], 
       Line3DBox[{1419, 1634, 3993, 1420, 1648, 4004, 1440, 3891, 1663, 1455, 
        3897, 1678, 1470, 3905, 1693, 1485, 3915, 1708, 1500, 3927, 1723, 
        4042, 1515, 1738, 4054, 1530, 1753, 1545, 3943, 1768, 1560, 3950, 
        1783, 1575, 3959, 1798, 1590, 3970, 1813, 1605, 3981, 1828, 1620}], 
       Line3DBox[{1421, 1635, 3994, 1422, 1649, 4005, 1441, 1664, 4014, 1456, 
        3898, 1679, 1471, 3906, 1694, 1486, 3916, 1709, 1501, 3928, 1724, 
        4043, 1516, 1739, 4055, 1531, 1754, 4065, 1546, 1769, 1561, 3951, 
        1784, 1576, 3960, 1799, 1591, 3971, 1814, 1606, 3982, 1829, 1621}], 
       Line3DBox[{1423, 1636, 3995, 1424, 1650, 4006, 1442, 1665, 4015, 1457, 
        1680, 4022, 1472, 3907, 1695, 1487, 3917, 1710, 1502, 3929, 1725, 
        4044, 1517, 1740, 4056, 1532, 1755, 4066, 1547, 1770, 4074, 1562, 
        1785, 1577, 3961, 1800, 1592, 3972, 1815, 1607, 3983, 1830, 1622}], 
       Line3DBox[{1425, 1637, 3996, 1426, 1651, 4007, 1443, 1666, 4016, 1458, 
        1681, 4023, 1473, 1696, 4028, 1488, 3918, 1711, 1503, 3930, 1726, 
        4045, 1518, 1741, 4057, 1533, 1756, 4067, 1548, 1771, 4075, 1563, 
        1786, 4081, 1578, 1801, 1593, 3973, 1816, 1608, 3984, 1831, 1623}], 
       Line3DBox[{1427, 1638, 3997, 1428, 1652, 4008, 1444, 1667, 4017, 1459, 
        1682, 4024, 1474, 1697, 4029, 1489, 1712, 4032, 1504, 3931, 1727, 
        4046, 1519, 1742, 4058, 1534, 1757, 4068, 1549, 1772, 4076, 1564, 
        1787, 4082, 1579, 1802, 4086, 1594, 1817, 1609, 3985, 1832, 1624}], 
       Line3DBox[{1429, 1834, 3998, 1835, 1430, 1653, 4009, 1445, 1668, 4018, 
        1460, 1683, 4025, 1475, 1698, 4030, 1490, 1713, 4033, 1505, 1728, 
        4047, 1520, 1743, 4059, 1535, 1758, 4069, 1550, 1773, 4077, 1565, 
        1788, 4083, 1580, 1803, 4087, 1595, 1818, 4089, 1610, 1837, 1838, 
        1839}], Line3DBox[{1611, 1819, 1836, 4090, 1596, 1804, 3962, 1581, 
        1789, 3952, 1566, 1774, 3944, 1551, 1759, 3938, 1536, 1744, 3934, 
        1521, 1729, 3932, 1506, 4034, 1714, 3919, 1491, 1699, 3908, 1476, 
        1684, 3899, 1461, 1669, 3892, 1446, 1654, 3887, 1431, 1639, 3884, 
        1402, 1625, 1833, 1840}], 
       Line3DBox[{1618, 1826, 3979, 1603, 1811, 3968, 1588, 1796, 3957, 1573, 
        1781, 3948, 1558, 1766, 3941, 1543, 1751, 3936, 1528, 1736, 3933, 
        1513, 1721, 3925, 1498, 1706, 3913, 1483, 1691, 3903, 1468, 1676, 
        3895, 1453, 1661, 3889, 1438, 1646, 3885, 1416, 1632, 3883, 1414}], 
       Line3DBox[{1842, 2057, 4185, 1843, 2071, 1871, 4096, 2086, 1886, 4101, 
        2101, 1901, 4108, 2116, 1916, 4282, 2265, 2131, 2318}], 
       Line3DBox[{1844, 2058, 4186, 1845, 2072, 4198, 1872, 2087, 1887, 4102, 
        2102, 1902, 4109, 2117, 1917, 4116, 2132, 1931, 4284, 2267, 2147, 
        2300, 2333}], 
       Line3DBox[{1846, 2059, 4187, 1847, 2073, 4199, 1873, 2088, 4209, 1888, 
        2103, 1903, 4110, 2118, 1918, 4117, 2133, 1932, 4126, 2148, 4234, 
        1946, 2269, 2313, 2270, 919}], 
       Line3DBox[{1848, 2060, 4188, 1849, 2074, 4200, 1874, 2089, 4210, 1889, 
        2104, 4218, 1904, 2119, 1919, 4118, 2134, 1933, 4127, 2149, 4235, 
        1947, 2163, 4246, 1961, 2273, 2314, 2319}], 
       Line3DBox[{1850, 2061, 4189, 1851, 2075, 4201, 1875, 2090, 4211, 1890, 
        2105, 4219, 1905, 2120, 4225, 1920, 2135, 1934, 4128, 2150, 4236, 
        1948, 2164, 4247, 1962, 2177, 4256, 1976, 2276, 2317}], 
       Line3DBox[{1852, 2062, 4190, 1854, 2076, 4202, 1876, 2091, 4212, 1891, 
        2106, 4220, 1906, 2121, 4226, 1921, 2136, 4230, 1935, 2151, 4237, 
        1949, 2165, 4248, 1963, 2178, 4257, 1977, 2191, 4265, 1991, 2279, 
        2298, 2331}], 
       Line3DBox[{1856, 2064, 4191, 1857, 4094, 2078, 1878, 4098, 2093, 1893, 
        4104, 2108, 1908, 4112, 2123, 1923, 4120, 2138, 1937, 4130, 2153, 
        4238, 1951, 2167, 1965, 4141, 2180, 1979, 4146, 2193, 1993, 4153, 
        2206, 2007, 2283, 4161, 2220, 2022, 2316}], 
       Line3DBox[{1858, 2065, 4192, 1859, 2079, 4203, 1879, 4099, 2094, 1894, 
        4105, 2109, 1909, 4113, 2124, 1924, 4121, 2139, 1938, 4131, 2154, 
        4239, 1952, 2168, 4249, 1966, 2181, 1980, 4147, 2194, 1994, 4154, 
        2207, 2008, 4162, 2221, 2023, 4287, 2284, 2236, 2321}], 
       Line3DBox[{1860, 2066, 4193, 1861, 2080, 4204, 1880, 2095, 4213, 1895, 
        4106, 2110, 1910, 4114, 2125, 1925, 4122, 2140, 1939, 4132, 2155, 
        4240, 1953, 2169, 4250, 1967, 2182, 4258, 1981, 2195, 1995, 4155, 
        2208, 2009, 4163, 2222, 2024, 4172, 2237, 2038, 4288, 2286, 2252, 
        2299, 2332}], 
       Line3DBox[{1862, 2067, 4194, 1863, 2081, 4205, 1881, 2096, 4214, 1896, 
        2111, 4221, 1911, 4115, 2126, 1926, 4123, 2141, 1940, 4133, 2156, 
        4241, 1954, 2170, 4251, 1968, 2183, 4259, 1982, 2196, 4266, 1996, 
        2209, 2010, 4164, 2223, 2025, 4173, 2238, 2039, 4182, 2253, 2053}], 
       Line3DBox[{1864, 2068, 4195, 1865, 2082, 4206, 1882, 2097, 4215, 1897, 
        2112, 4222, 1912, 2127, 4227, 1927, 4124, 2142, 1941, 4134, 2157, 
        4242, 1955, 2171, 4252, 1969, 2184, 4260, 1983, 2197, 4267, 1997, 
        2210, 4272, 2011, 2224, 2026, 4174, 2239, 2040, 4183, 2254, 2054}], 
       Line3DBox[{1866, 2069, 4196, 1867, 2083, 4207, 1883, 2098, 4216, 1898, 
        2113, 4223, 1913, 2128, 4228, 1928, 2143, 4231, 1942, 4135, 2158, 
        4243, 1956, 2172, 4253, 1970, 2185, 4261, 1984, 2198, 4268, 1998, 
        2211, 4273, 2012, 2225, 4277, 2027, 2240, 2041, 4184, 2255, 2055}], 
       Line3DBox[{1868, 2257, 4197, 2258, 1869, 2084, 4208, 1884, 2099, 4217, 
        1899, 2114, 4224, 1914, 2129, 4229, 1929, 2144, 4232, 1943, 2159, 
        4244, 1957, 2173, 4254, 1971, 2186, 4262, 1985, 2199, 4269, 1999, 
        2212, 4274, 2013, 2226, 4278, 2028, 2241, 4280, 2042, 2260, 2261, 
        2262}], Line3DBox[{2043, 2242, 2259, 4281, 2029, 2227, 4165, 2014, 
        2213, 4156, 2000, 2200, 4148, 1986, 2187, 4142, 1972, 2174, 4138, 
        1958, 2160, 4136, 1944, 4233, 2145, 4125, 1930, 2130, 2287, 4291, 
        2327}], Line3DBox[{2044, 2243, 4175, 2030, 2228, 4166, 2015, 2214, 
        4157, 2001, 2201, 4149, 1987, 2188, 4143, 1973, 2175, 4139, 1959, 
        4245, 2161, 1945, 4283, 2146, 2288, 2266, 4295, 2302, 2323}], 
       Line3DBox[{2045, 2244, 4176, 2031, 2229, 4167, 2016, 2215, 4158, 2002, 
        2202, 4150, 1988, 2189, 4144, 1974, 4255, 2176, 1960, 4285, 2162, 
        2289, 2268, 2303, 2308, 4292, 2328}], 
       Line3DBox[{2046, 2245, 4177, 2032, 2230, 4168, 2017, 2216, 4159, 2003, 
        2203, 4151, 1989, 4263, 2190, 1975, 4286, 2272, 2271, 2290, 2301, 
        4294, 2334}], 
       Line3DBox[{2047, 2246, 4178, 2033, 2231, 4169, 2018, 2217, 4160, 2004, 
        4270, 2204, 1990, 2275, 4264, 2274, 2291, 4289, 2322}], 
       Line3DBox[{2048, 2247, 4179, 2034, 2232, 4170, 2019, 4275, 2218, 2005, 
        2278, 4271, 2277, 2292, 2310, 4297, 2305, 2329}], 
       Line3DBox[{2050, 2249, 4180, 2036, 2234, 4171, 2021, 2219, 2295, 2307, 
        4298, 2335}], 
       Line3DBox[{2051, 2250, 4181, 2037, 2235, 2296, 4293, 2330}], 
       Line3DBox[{2052, 2251, 2297, 2285, 4296, 2304, 2324}], 
       Line3DBox[{2263, 2256, 2056, 1841, 4092, 2070, 1870, 4095, 2085, 1885, 
        4100, 2100, 1900, 2264, 4107, 2115, 1915, 2315}], 
       Line3DBox[{2309, 2326}], 
       Line3DBox[{2320, 2312, 2006, 2205, 4152, 2280, 1992, 2192, 4145, 1978, 
        2179, 4140, 1964, 2166, 4137, 1950, 2152, 4129, 1936, 2137, 4119, 
        1922, 2122, 4111, 1907, 2107, 4103, 1892, 2092, 4097, 1877, 2077, 
        4093, 1855, 2063, 4091, 1853}], 
       Line3DBox[{2325, 4290, 2293, 2306, 2311, 2294, 2281, 4276, 2282, 2020, 
        2233, 4279, 2035, 2248, 2049}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
    
    VertexNormals->CompressedData["
1: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
mdGyFteE88aV/OcFV1KvN+SS3ZrVZXV1pK8eI2u6ovcX+0Lt+8eG556TPPVP
ZtJOIW5j+7ZHNcwfGup/VH8ie0pIfd3CtrdN+EdhS0VyWhCwSk63hFYRbifU
jx7b0YJrqrUWZu6HwM3h3jz1fPJ9I69EzurTcN5fvfDtjjDYnuwXcJj4p0uv
yvGRhFZkrn7Id+FdODCVfqNXDyPP5YiS6euRNjxh3dNhVxAJyfcitZs9Kbi0
qbJybiM5z27GfB5e0SC8big9jfg/U+nmCTjWifQMnpu0TGIhKSM4fqsp2Y9P
g4VqHIpQwOkAl1KIPQyt2ff+EunZn8/3XLkeWYIi281ulVg6g67gh30mxCf/
9Th6DwWU4Y8rDb+737hCCM/MiWaSs+yQ0e6S1AqU5Su5LXvUA2IH2u7///fL
f7M8WqX7q5COVffSlm4v+J3/I3GR5By1Q6VyM28tlm2O9fWL9IU0joJLBcTn
+Ren0j0f1ePMrvq/7VH+EJ7J6vKQ7NYIzUMMV940YnB3OAPHiyCoE8l3AeKZ
J/K7xRhzmrDfwD5NMy4EolceavOQPbV6hvGZ70fi868lqn/cDgPdhHnWtYUU
8ATTJX4QouGhT0wzKYoRUP92wYozlQKxb5+bRwxa8Y3PjQcVclHwlLe6/yrx
T91n153l49owvGSzkqR8DFjcsRKa8yb9ZXh005aX7eiWrZg6dSEObuz+Iztv
S0FHdbhE5EoHFrZkD982SgDdH4/THcwoKHIo/PqRrgjtDrRHfnV3AqumpvMN
JGfDlpTebPUSNFrapzB025XsYQUbiuTsl2jtz0383LIguZyu3R0GLhgHmpB9
uvJ4yLtMtQLFpnJFbhh4wafNbt+4pggPr//c9vlxFV74yDHOLEfOp+Ci3vtx
Clofms57V9Vg8tao9/vU/EFagu532xDx3t5dyhMs9di9/tLUh9QgiHKUP1jd
Q+71l10W0+aNyNZewCoWHQK5QrlW5a3kHl1QWN5xvwm37eRUbSec3DHJ0lFf
SzzHs7a2OrsZJTUXc+UfR0Dni+BPI0UUiDS25DhOt+BxuR07Nj+NArZrbapb
0ikYDR9aJ7uzFcta/n6+UxYD10d1ur2jiMcmj995frUN0y8NvV+YiwN5vgvT
Z/wo+LrJ1+CkbztuOqU7J3w4EYodVNeakp3Fv+lld095B6bVpi/kKiQDlso6
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
iMg0atU4TcNmXatt4etjYXDQT4AxmYKUdo/OX6GtuNK/2vJvNg5ePIzRuk32
bNIjs8I979pQ/I+fmnNnAtR+KfxFR/bsJoEfklbCHfhM5+NBm5Qk6OWfMflt
RUHkrcWeLKNOLHQrv9RUnQxijs8GbUhfOGeNh9gVFqCFS2qNnosnDEvfVWxb
+P/vd25ZPsgrxrrHYn135X0g+N/mtSykd8IKS/dsTyvFO2k8cfaHn8KUNGuk
7ywFzzLGP2bWl+Ohncm6f40CQSm6tUhsmgLKqmxL7s9KNA0UqoiYJvyUMd/+
9g0FedX87msv1ODujinOtcWhYCmZsNv/FdkdBzqt31XXIapUihSFhMNah6ze
vS/IOZRyluyXa8QJmVJpe69ICM+Wli0mO8uudPDLyq0mvEG7WjLgFw0PCv67
trOW7OIYmnpgWTPOvR+P64qNhV2evEVOxIscbOofPFhLw0v1f9ilS+NhfquV
0RuyZ1VYE7i+a7QiV1OWzcvuRPjFPrmsHk7BK67fCg5JbVhkdeCp2KNkeKPB
4fab+Od9DtOtUR/bkXmXUIGuYwroNrjFLtlQsPNhcQiDSCcq+7FPM7unQlwF
3YKFCQVN+7d8GlrNR+X+1pj8096Q4iE7oEG81DeaL3P6QjGax82orTvlB9PN
oX0VJOe0G7x81LFSfKAk1S7iHABLnjnmWsT/b9e8ust7qRzPxH1rMnAKhseR
btRO4v+rtD8je1wqcbPr2T1BuqGwLeq6x2+yszS6HpbsfFmNyaFnhtg0wyHp
76hXH9lZac+dDS/L1GFBcGOs2J1IsEDdsRiysx5rX4p9XN6AsrffNkaHRENA
b9wh5XYKBCt0haYEmtDHaI7LuicWMoQ7fk6QPfuR8dZZdvNmPF9X1u/EkwCv
8k6sMyZ7Nos7+8GW+hY0+3vtgqBZEvywYF+YIP4pZXzT5wJrKzJxDDoNvk+G
gAahhnuRFBykHhVxarfh1BJVv5ctFRi/VB4XJH6S8XXmzdekduRg/PvxhGwa
SL+f5BKxpSDa+lt21EQHLt8Xe/RJLx28Zq8qxxHPfGXzenYZ8tFDufSl5ooP
0LNJcc+SnN+efyZc01GEB84LxTXJ+sO4RVn+PeIhlj+CPI2el+AQj97VY41B
kO9qxyxFPET3gU7y6aEy5JEuETzfFgKuA5dFhIiHmFX9+Wb5rwLHQkeEknrC
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
cZsXbNiuMRNG/PH6vtEeSf48vGBYtPrrF284xjUap0h0O/7V9k/c3/NxQ2Lu
2VXvfCHDRMhn+d6wS506oquwEJ9+e7/UM+QPyUYfDV8Rf/zudf7qQlQxWuVe
zd/NEQTHpI7He7b/754vtb97vqrOBTSfdy1H3djk0uiJMIjb2sMxX0v601B+
11EPRGM21+MPXSNh52m3H6FEtztOMXwRbapE00dXpHm5oqHK47euJ9HtkPIJ
lqLWKpQ2fvz1gXMM3NVh839PdPt84/j+5x1ET7KH1vAtxoJ22Ov1ZlHL9855
zF7orsZOI5ZfPS/ioUPsZbsD0e0KbdZ07s816Mu5wXVxRSLwaq8WpSG55ut8
4z3RjnQ8NHr6uOhdV2Ba8j+kPkly4p/N+eJaWfh+ofp8QYIHzJ7h5FveM0U3
rNktM5+NIabaqTRs3vCJMW0mnuj2paT+AK7wXCxq5Im5uJr4VHv7bmui268f
lRm7XcpHU92mX0mb/YHzRPN8LdHtLxJWVT93FGLp+426LKcCQZBesluX6Hbk
zese6dNFuHW6pVsuKhhcBA5EanX8756vs3/3fNXsWunt1lSGn6rdU1irIyD9
+PUURZIfP37g5PSprcDSae+FcOJHTU41soIk18zKylpT7lTiSHq0XNfhGFCL
baPeILlmWxn3NjfNKpSIEMhfLIiFXwxZ+gMk1yRbRVxcqUV884yWRYRsPNT/
Kv1VSXKN66mhrNU61fj06K7vB7oTIN1ORnQF4e2s/O5rFjo1+FiM7RqDWRK0
TFT9TnWnwtjtJrEX39NQ/nSz9MSAG1x7VPF7+fvqumPfrlu2ZGKP2J+cNH4v
GEr19uQhesK2uXDdgF42coB8htpaHygfLn61/Hu6ZK3SC5lrcpHXhS6pfqMf
BGxUPUohut2/mqNxMjcPP9rH6xhKBUCg5dE1UkS3Z9XbHsgYFOBBTdYPxp5B
0NrELMNKck0qq7Lf0tEiPEbhH3RcFwpagRwyF0muufd3z5fRv/Z8jaYUydOv
KEMn1/fN0tJR4LIzaX8+yTWGHIeKnk+UY4i9IMdobjScjQgV7KIQ39QcDHUZ
QtTs9N00KBUL7novVyoR3nYGeXq7yUpMerq3uL8tDpTPFTMyEz3hjn6w+9ZE
Fd7YJfbioXECzJm77BEiehJo/zZVjkrBYy6+J0d4k4AnTPtBQhjh4YZ3G/eM
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
lAg83nOiKfE16MFvI+2f3kkgfHy/pVwvEU4Ixxglbbahirs19bn3csCbijmx
eefcnv6J4Z0519fowl7tzLk+ybYmvDPn+tMPMfFC7XzEKbYiVtkYCdrV2c23
sL9P7zVueZZWhKTSv6eRNcfAOU1msZ37aW9l3nC9bylBi56ty/x/44GuUGLW
bGffK2nu21nqchStwDn7qDQJ+sIv3ZscJ8IYuYhAtn0leq16gKLSIQU4JaQz
GN8RYXTsnvQGbQ1ej0+L9z1IA8PePZcW8Lqw7003FXNHqMI7xnftbBYMe1YH
WFQRIV8oM3KZvwmxrG00Vh7OAfUgl8ZDuUTY/viHPDq+GXkcSXytQJYH10el
2V9hfzH+bRZMoCEgPxPdYabJfOCUFNUv8SPC2SciNK0vWtFxqr3qn/MK4aji
7jtfXxJh6s7zGK6JNuT+J42dr7gIZlhZadVxLuBLiLi8M5/6zG2npp351JoW
zf8znzrhwWF3Lr1CNDxHF3OFLBZIOIgjNdiXC+NbzNVRMbo900l3UjcBwh99
9MnDvrwnsPN353op8l0s87TbTIKF+/GSO+cxur8yOEejVoHG1safmUylwIpH
6ggn7ttiMeoy9/EqtCB49DzZeBrE9CYrGGDONx6Ki5QLaEQK963nPrHlgp+M
KW0M5naTAb3V8a0mJG6rLEkQzIcqUvaHp7Ev1BlVnCowb0Gl/rq5AIWQWXWP
+iXWjdVy8o+fJwlIz1luJDOhCCTDeC4XOeH1TrP3cbdcG2qYk8xXDC2GyTTO
67t2+kcrwXNnTvSpOt6AnTnRtcN3/mdO9KBkQJJweRGa1VmPE3JPgBoyK84p
7Jsm1FRcsx9KUJZ+wNp3zmSw+qq6yoP1c8SFjUWRrxztNZMLIDucCrSM0ywi
WD+PpOyncUitRC+ftRBfn08Hu9058gt4vQg098WY3G9CHkt2d2xOFcBSWEP5
aZz3b7FIWBzrxH4RQvlH6nwR2CWYX0jbmZc9EYpIgICCCjdn+uWKgd23cu80
1hPdw9YnBItaEZsFgaNVqwQoQr1dD2N+029koJ2VK0TLyvHFO/OXEeHO/8xf
fi0btftmVTH67ZdklMORDMfjRVN3fidPRwazL1dLUfMv18n406lwsyjj++0J
/P74L1sNGhUoUZK++blGOvTt7XL1wDqZpnbCkZGlGQ2wpXtG5xeBBZd1gCDu
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
WOrsmvW/mvBPOkd9aG0qrLlwf3Qf8QUHhfv3zXm0oPtBns0ezqkgMPb7wPlb
VPDpijrEK92CsVFZIy570+FJarx9jCnxiSF7I3rW5qLiLq3WjCQ/sOx5/vDz
BO33qeQrCvmZqCVa8LN+yht2p049Xk908usD7sc+faLgG8kXZRrvAmDc85PZ
FNFv7Ad4GYSoRXhczuTrb51QWBDUz4skOmH2uG6xyc5SbAje9oC+Jxx+x3X/
oCc6YbHE6NW2e+V4pEjaUcYlCrwEn0XrEZ3QKD8m5jpQieEx7M+mT8ZCQdfv
clq+eULRQNpBgxpMsE3V+hgSDz1fuG/Sfs96G/atvtC6Fkvc/d4Vr02EoXL1
F61Ej5mOUp0f1tVhiFOCemFkEmzv3xBTSfTYk645ldurGlBj+XX79l0psO90
vgotD/fGQHRtO/FBLGcGEmZKU6FyXL4+xI/01UnxtbuTm9BK5rMqnWI67JmL
cCsh+nbD70YVzpFm5N3f1fT9bQYwNYvhTqJvRVOmnouI5eCvn1t4g939gfrg
zckw2r7i53uPCw1lYF48HaOJkC88VB09lUs7T3V/uuxrFLzFLCunnBoIypKy
gu1EPxQHSX7wVi/A7XJSbWbTwTApvX8b7fv/pcDHtfQBJThppk71I/qQsVc4
wZzogZBfrUdMPpRh7bm2RPGRaLDz03tN30GFzF7+lEuylZh57fWTo5/iIGNZ
Jp8D0QPpty+cyyyuxi/vZG9H2SWAb7JYawfRAzvN1a01+Grx2VU/46G1SeC2
S2yKnaYHwt2/iBjXYfOOwpWrypLhwhuxHYJED+RN3R5rL6hH3ZteFn1XUyHL
Lqf4INEDazg4Q+IWaf/Xb3hpFVc6vNrL6SEXSAW/V8dlOBSb0OTWCItkUwYM
H6q1sSS6yyUz63opwVvzrot666yygNmx/MKwJcFPg4cdQWey8WfbeESYYACs
kTy8/zzBybkeJi/b1RnIrKSUdfzoY6iP0a47OUOFbo6Ka14v8jDzqlxdzpUg
eG526F0J0Qm8I8rV4U/zUS0lclvRyxAQjOF9pkl4DUt0bexeFuKibGbA2lvh
0B131ZqX8BoEmfQKEdz7unmngNehWKim/36pnOgBLY1mlhePK/BUcqd2TVY8
/NQpMDIl/KV48ZrGh8UqPCbC8EVGJRFUmgRX0xP+Elqy9Op0QpysfX7RjyEZ
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
6lBn/E7yWY1kcM1GNwkKwXPeEwtpevX4g+XEbZ+lFMBtK949TKKCvTF3UEBW
A6KI253vuWlQ9qggtJ34CFPFJ1dxphGVnomuW0/8hc643ZyEB+HxJ3VpNUea
sf3YHYVSjizQiXe82mVDBd/L+9XfsRSiQoWvxbd7YfAYIjt3kT632syb/mFb
MZZ7SKPnvkiYkA6V1iJ9Hh5+3bTiYin6WBnuL+KJAT6tz+hB+nxYpcH1+Ns6
fMymWWs2ngpev+o1utLI+Sw4pbNvacDzOi2zrJXp4Obmcek6DWeChbJ232jE
1xrJ0jK+mdC1TO/acoIz2Qwc+ZspTQjUDkFTvWxwu2t4tcWeCidnxbY+ki7C
wzqvXta3RoKxsm2OD+krta78S++96zGse9g3MiMD8kNXGgqQul//Itek964B
d5wa8zaKzgJxmfWOi4QfjxWlu77Z1ISKh1S02QJy4OTVs9ZUgjOTrb7vZ0yK
Uc7AecZGPxZcMj6lpZJ6zWVMHAmUakDPG5Va3z2zQcCh+rAgwe3AoqGmBZdG
zNyX5nI7LheCy1VWqpJzDho8vurt5waCV1zPlrnngauL5odR8rnq8iUyecfy
MGpROCL8lDNsGvG4Q8vzMvlnzz/d3z3/gt4+bOavnuDAroE6YbNI6H8iIPzB
gAosDzn38zxNQaWC4dGAJn/Yoje5/T7Rz6K26zn1LFLwrrBWt5mDP/R5sr1D
8rjaqS8+TwnvSDFouOkty4c/8dp7LpP3WSPYHBvdkItvxjew3JHwgBCJ5++z
CB5SeRp2l+Xk4XY+icaSIQ/4kMY5XkPbd4cWj4vzcvDRr3vLMu96wrXAqXWJ
RJ//Ubj/w80uDze33l3/fOYR8PetedtJnl9jtZCS7Z+DcplRbzxPuAPvk4um
XeT56nuZfA5lUTDmktPwuWBv2HhsZOdngieWO9cd1lxNQfb6P+JBIz6QVLTq
LRN5HY2/uH3wH9y2b+77tXohH2cENndtPuoPb8R1KOVkHgvjcx77bM7Hc5K6
0dXrA6FXWsHpKsHz2r97+w3+2duvFQ5xy4xK0LS47p5oaww8efr86QaiZy7+
fdz8n8c/XZG+OJRZhtOjQrsdXePB4/7rExE0v/D38Zl/HueVp7RaJJWierzo
8Tfd8RDKccbCm7Z/O8IgY514GfrlsX/VOZkAVdQxxnCil/gvLqNjnC5H2/nD
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
+D/yoMeV6BZ2vW5GbZ/yB+yCmWB4rWCk14Lg7d9c45F/co0DBs7H03KR5sdU
1Gi5SD8UdovScpG2mnTz137LRoOtN+VcjMKg4jNFpYnw5gdrsb0uOyl4Km26
Nn4xAvR1Ok+xEN0izud8t/hnPnYnuzr/rI0GgbZW9wCCe9Ez6vURQ4Wo8p6u
1iwzDsrvm1eeJDpfIGXrAGW6GNdKDtC76CQAi87hYW6i87mHjlN6+crQtFA6
qmciEbZI8Nyh7c1+/TdvV+SfvN0mcbtZgb2IerYiKxym0gC/f15BT/iIp4Gt
+PvrWvT6uOzkQEIGqOvbGgcQPqo1Znjiu7YeOzck8Lufy4IdsjV7+BOp4LJ7
k2KIRgOaPD2R1D6ZDQMult9rafuULjf75YU24pOdnua3vXOBa/+ZcB934mc5
/8hFvm1Cv51GJzNZKfAsxy4igfZ75ZDlclpeEpf+cn9aXtLC4p//y0sazLBc
vW00Fy/8ojCbxUWCLX/gvZOEl1+t5mKQk8pH+YXQuEtuMSD2rk+DgfDC0jfp
loUthWiivWbHN4In5U7HmKYIL/OtM+taLlCMvezLfb2/JoB7cBPH70/E/xZm
L9meLMUjQaODmyOS4CtD1U8mwkfhf3Npq/7JpV2Zq9/bSPzR0gen7vUdmVAp
nHFQmfiFbLPLacaJdZjJUPhpZ0Y2JEbE3hwlfsGwxoJHa6geNZxVvESsc+E+
/fioJ/ELwQyehsJCjThnULqiZBMF7g6/cpcjOOCq0eAUYNKE5Yb05bmzFJju
dD4oRvBNXH/2FC1H6agZuyYtR2lDVOD/5SjV3LPIq7eiYG52dSvH6lg4bZoZ
9pDwPtdWnYohJcKbP4wqdyXHw7XpixJ5BP/PXnkvb3CqCOd84+L4LiSCZdv9
0p+9tN8vHi0Pv1KCFjqPDbZsSYb9qXTVxwn+b/ibG1v5T25sgt25nNW7iO4y
j1a7+DkHPp39ws6cToVUDZO6wFv1KHlwUGF7Rx48nWTPzI4kPNL5O3S0oAGX
Nj0wO9JPASlq2SYdHyrs5jtQnzHbiOjYm7PvTT4IR3JaixA8UR1b1vpFKQ+9
fALu0PKV9IKj/y9fabftWXtPq3wsqVz4nPQhHuIllVLuk3lpaX3mOnylEJVW
sBuZJiTC6dI3YrR9XBm25vLHCP6LvWDhcHJKhi8/1S7EEZy0+JvTeu2fnNYg
+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

     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox["\"SNR Bob\"", TraditionalForm], 
    FormBox["\"SNR Eve\"", TraditionalForm], 
    FormBox["\"Capacity\"", TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{Full, Full, All},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.787913481514433*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"7b62122a-8739-495d-8350-8fbb688bcd6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lowerRate", "[", 
        RowBox[{"l", ",", " ", "k", ",", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"a", "/", "10"}], ")"}]}], ",", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"a", "/", "10"}], ")"}]}]}], "]"}], ",", 
       RowBox[{"upperRate", "[", 
        RowBox[{"l", ",", " ", "k", ",", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"a", "/", "10"}], ")"}]}], ",", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"a", "/", "10"}], ")"}]}]}], "]"}], ",", " ", 
       RowBox[{"iidRate", "[", 
        RowBox[{"l", ",", " ", "k", ",", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"a", "/", "10"}], ")"}]}], ",", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"a", "/", "10"}], ")"}]}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<SNR Bob = SNR Eve\>\"", ",", " ", "\"\<Secret Key Capacity\>\""}],
        "}"}]}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"l", ",", " ", "0.01", ",", " ", "2"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"k", ",", " ", "0.01", ",", " ", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.783334536381544*^9, 3.783334568703087*^9}, {
  3.783334900714055*^9, 3.7833349100412827`*^9}, {3.7833435649606943`*^9, 
  3.7833435891577063`*^9}, {3.783343640252172*^9, 3.7833436821470213`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"c5dd6b9b-082d-47d7-a21c-f01d11eda076"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = 0.01, $CellContext`l$$ = 0.01, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`l$$], 0.01, 2}, {
      Hold[$CellContext`k$$], 0.01, 2}}, Typeset`size$$ = {
    468., {114., 121.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`l$492915$$ = 
    0, $CellContext`k$492920$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`k$$ = 0.01, $CellContext`l$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`l$$, $CellContext`l$492915$$, 0], 
        Hold[$CellContext`k$$, $CellContext`k$492920$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`lowerRate[$CellContext`l$$, $CellContext`k$$, 
          10^($CellContext`a/10), 10^($CellContext`a/10)], 
         $CellContext`upperRate[$CellContext`l$$, $CellContext`k$$, 
          10^($CellContext`a/10), 10^($CellContext`a/10)], 
         $CellContext`iidRate[$CellContext`l$$, $CellContext`k$$, 
          10^($CellContext`a/10), 
          10^($CellContext`a/10)]}, {$CellContext`a, -5, 5}, 
        AxesLabel -> {"SNR Bob = SNR Eve", "Secret Key Capacity"}], 
      "Specifications" :> {{$CellContext`l$$, 0.01, 2}, {$CellContext`k$$, 
         0.01, 2}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{527., {187., 195.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.787913481678533*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"851b19a6-17a2-41b6-802e-85c4333c7222"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gap Between Independent and Lower Bound", "Section",
 CellChangeTimes->{{3.78748285856048*^9, 
  3.7874828681744328`*^9}},ExpressionUUID->"50acb8cd-4756-4c56-a044-\
95788541c049"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"iidRate", "[", 
     RowBox[{"l", ",", " ", "k", ",", " ", "a", ",", " ", "b"}], "]"}], "-", 
    RowBox[{"lowerRate", "[", 
     RowBox[{"l", ",", " ", "k", ",", " ", "a", ",", " ", "b"}], "]"}]}], ",",
    " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"l", ">", "0"}], ",", " ", 
      RowBox[{"k", ">", "0"}], ",", " ", 
      RowBox[{"a", ">", "0"}], ",", 
      RowBox[{"b", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.78748326612319*^9, 3.787483296533689*^9}, {
   3.787483848916757*^9, 3.7874838797850018`*^9}, 3.787484329792048*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"1411d475-5dd1-4787-8093-b3714f113bbe"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{"k", " ", "l"}], 
      RowBox[{
       RowBox[{"a", " ", "k"}], "+", 
       RowBox[{"b", " ", "l"}]}]]], " ", 
    RowBox[{"ExpIntegralEi", "[", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"k", " ", "l"}], 
       RowBox[{
        RowBox[{"a", " ", "k"}], "+", 
        RowBox[{"b", " ", "l"}]}]]}], "]"}]}], "-", 
   RowBox[{"(", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           FractionBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "b"}], " ", 
              SuperscriptBox["\[ExponentialE]", 
               FractionBox["k", "b"]], " ", "l", " ", 
              RowBox[{"ExpIntegralEi", "[", 
               RowBox[{"-", 
                FractionBox["k", "b"]}], "]"}]}], "+", 
             RowBox[{"a", " ", 
              SuperscriptBox["\[ExponentialE]", 
               FractionBox["l", "a"]], " ", "k", " ", 
              RowBox[{"ExpIntegralEi", "[", 
               RowBox[{"-", 
                FractionBox["l", "a"]}], "]"}]}]}], 
            RowBox[{
             RowBox[{"a", " ", "k"}], "-", 
             RowBox[{"b", " ", "l"}]}]], 
           RowBox[{
            RowBox[{"a", " ", "k"}], "\[NotEqual]", 
            RowBox[{"b", " ", "l"}]}]},
          {
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               FractionBox["l", "a"]], " ", 
              RowBox[{"(", 
               RowBox[{"a", "-", "l"}], ")"}], " ", 
              RowBox[{"ExpIntegralEi", "[", 
               RowBox[{"-", 
                FractionBox["l", "a"]}], "]"}]}], "a"]}], 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}},
         Selectable->True]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False,
     StripWrapperBoxes->True], ")"}]}], 
  RowBox[{"Log", "[", "2", "]"}]]], "Output",
 CellChangeTimes->{3.787913502218017*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"6b9ed57e-7497-4559-a3aa-09bacb8aa62b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"iidRate", "[", 
     RowBox[{"l", ",", " ", "k", ",", " ", "a", ",", " ", "a"}], "]"}], "-", 
    RowBox[{"lowerRate", "[", 
     RowBox[{"l", ",", " ", "k", ",", " ", "a", ",", " ", "a"}], "]"}]}], ",",
    " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"l", ">", "0"}], ",", " ", 
      RowBox[{"k", ">", "0"}], ",", " ", 
      RowBox[{"a", ">", "0"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"iidRate", "[", 
      RowBox[{"l", ",", " ", "k", ",", " ", 
       RowBox[{"r", "*", "b"}], ",", " ", "b"}], "]"}], "-", 
     RowBox[{"lowerRate", "[", 
      RowBox[{"l", ",", " ", "k", ",", " ", 
       RowBox[{"r", "*", "b"}], ",", " ", "b"}], "]"}]}], ",", " ", 
    RowBox[{"b", "\[Rule]", "Infinity"}], ",", " ", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"l", ">", "0"}], ",", " ", 
       RowBox[{"k", ">", "0"}], ",", " ", 
       RowBox[{"r", ">", "0"}]}], "}"}]}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.787483342315651*^9, 3.787483365130391*^9}, {
  3.787483937111117*^9, 3.787483982741458*^9}, {3.787484122728504*^9, 
  3.787484125633678*^9}, {3.787484341700441*^9, 3.787484360441062*^9}, {
  3.7874846680149193`*^9, 3.7874846750657473`*^9}, {3.787911083359749*^9, 
  3.78791109607791*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"0f729bca-cdc9-4f8b-b1b3-217e53b13098"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{"k", " ", "l"}], 
      RowBox[{
       RowBox[{"a", " ", "k"}], "+", 
       RowBox[{"a", " ", "l"}]}]]], " ", 
    RowBox[{"ExpIntegralEi", "[", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"k", " ", "l"}], 
       RowBox[{
        RowBox[{"a", " ", "k"}], "+", 
        RowBox[{"a", " ", "l"}]}]]}], "]"}]}], "-", 
   RowBox[{"(", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           FractionBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[ExponentialE]", 
                FractionBox["k", "a"]]}], " ", "l", " ", 
              RowBox[{"ExpIntegralEi", "[", 
               RowBox[{"-", 
                FractionBox["k", "a"]}], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               FractionBox["l", "a"]], " ", "k", " ", 
              RowBox[{"ExpIntegralEi", "[", 
               RowBox[{"-", 
                FractionBox["l", "a"]}], "]"}]}]}], 
            RowBox[{"k", "-", "l"}]], 
           RowBox[{"k", "\[NotEqual]", "l"}]},
          {
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               FractionBox["l", "a"]], " ", 
              RowBox[{"(", 
               RowBox[{"a", "-", "l"}], ")"}], " ", 
              RowBox[{"ExpIntegralEi", "[", 
               RowBox[{"-", 
                FractionBox["l", "a"]}], "]"}]}], "a"]}], 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}},
         Selectable->True]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False,
     StripWrapperBoxes->True], ")"}]}], 
  RowBox[{"Log", "[", "2", "]"}]]], "Output",
 CellChangeTimes->{3.7879135252992973`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"fa99df10-4bc8-4282-9049-7d59508f93d9"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         FractionBox["1", 
          RowBox[{"Log", "[", "2", "]"}]]}], 
        RowBox[{"l", "\[Equal]", 
         RowBox[{"k", " ", "r"}]}]},
       {
        FractionBox[
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"l", " ", 
             RowBox[{"Log", "[", "l", "]"}]}], "-", 
            RowBox[{"k", " ", "r", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Log", "[", "k", "]"}], "+", 
               RowBox[{"Log", "[", "r", "]"}]}], ")"}]}]}], 
           RowBox[{"l", "-", 
            RowBox[{"k", " ", "r"}]}]], "-", 
          RowBox[{"Log", "[", 
           RowBox[{"l", "+", 
            RowBox[{"k", " ", "r"}]}], "]"}]}], 
         RowBox[{"Log", "[", "2", "]"}]], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.7879135493674183`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"784ea4d4-5f20-406a-a522-57845884e239"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{2560, 1360},
WindowMargins->{{0, Automatic}, {0, Automatic}},
Magnification:>1.3 Inherited,
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 382, 6, 129, "Title",ExpressionUUID->"5b7754a2-689c-40d9-b222-d595c26e76e0"],
Cell[965, 30, 568, 11, 108, "Text",ExpressionUUID->"f3f8677c-f190-49f5-b946-7e7977b79855"],
Cell[CellGroupData[{
Cell[1558, 45, 164, 3, 92, "Chapter",ExpressionUUID->"4d1bb8cd-9188-49d5-bf6f-7f30f958f1d8"],
Cell[1725, 50, 910, 24, 70, "Input",ExpressionUUID->"fcc0b134-ad69-4630-a992-5c239ecb9411"],
Cell[CellGroupData[{
Cell[2660, 78, 255, 4, 88, "Section",ExpressionUUID->"35f59e9c-b295-4637-98dc-4a21bed53900"],
Cell[CellGroupData[{
Cell[2940, 86, 656, 16, 40, "Input",ExpressionUUID->"b6d562ad-9f37-4633-9e52-bc18c8db70cd"],
Cell[3599, 104, 674, 21, 86, "Output",ExpressionUUID->"640faef4-33e5-4544-9f73-f2ba49246791"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4310, 130, 840, 21, 40, "Input",ExpressionUUID->"2413cc80-0255-49d7-a7da-fae2933d8edb"],
Cell[5153, 153, 796, 25, 91, "Output",ExpressionUUID->"bed83065-0f21-4245-8d9e-068b88f21c61"]
}, Open  ]],
Cell[5964, 181, 1040, 29, 91, "Input",ExpressionUUID->"1291e8fb-a8ba-48dc-a93f-bdf015b8fc7e"],
Cell[CellGroupData[{
Cell[7029, 214, 1301, 32, 70, "Input",ExpressionUUID->"02472c75-930c-4bd7-8563-6a33a970a128"],
Cell[8333, 248, 160, 2, 46, "Output",ExpressionUUID->"13ece26f-5e5b-467a-bf90-297ea97d8888"],
Cell[8496, 252, 301, 8, 83, "Output",ExpressionUUID->"a214a8bc-a033-4b2b-b0aa-0ff80435ee15"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8846, 266, 158, 3, 88, "Section",ExpressionUUID->"d5577a2b-6573-4636-9f07-a956e6233268"],
Cell[CellGroupData[{
Cell[9029, 273, 687, 17, 40, "Input",ExpressionUUID->"1cdf1167-04bf-42d4-a099-6ee4bdbf9b0a"],
Cell[9719, 292, 497, 14, 86, "Output",ExpressionUUID->"cd3b5897-e827-48c8-aa0f-5a5feb4f7c51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10253, 311, 913, 23, 40, "Input",ExpressionUUID->"64cdc057-9f78-4680-94c0-b630b38a6588"],
Cell[11169, 336, 977, 29, 106, "Output",ExpressionUUID->"f957a7dc-e514-4dd5-a5cd-932bbe690062"]
}, Open  ]],
Cell[12161, 368, 880, 20, 40, "Input",ExpressionUUID->"11fbc825-8d65-4bc9-abd3-6ee4ce17ff05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13078, 393, 173, 3, 88, "Section",ExpressionUUID->"6426f03f-d0ee-4cbd-968d-acc855077985"],
Cell[13254, 398, 821, 15, 108, "Text",ExpressionUUID->"d8a872cf-2313-4fba-a647-c809a5365f7c"],
Cell[CellGroupData[{
Cell[14100, 417, 220, 4, 71, "Subsection",ExpressionUUID->"ee7e3fea-18ac-42d6-81a0-5dba33848e8b"],
Cell[CellGroupData[{
Cell[14345, 425, 808, 21, 70, "Input",ExpressionUUID->"e81a146e-e830-4e7a-ad40-04e650f7368d"],
Cell[15156, 448, 469, 14, 88, "Output",ExpressionUUID->"8d762b97-6d96-4599-a010-38d6718ff5b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15662, 467, 949, 25, 123, "Input",ExpressionUUID->"d0bb776a-6419-4d4b-8f57-1d6db91dcf0c"],
Cell[16614, 494, 662, 21, 78, "Output",ExpressionUUID->"3f2df88f-180f-4665-9695-d2ca1eb101d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17313, 520, 1557, 44, 134, "Input",ExpressionUUID->"69e71540-6f87-4127-8378-1b17e5d3b230"],
Cell[18873, 566, 333, 9, 68, "Output",ExpressionUUID->"d870caa9-de97-475d-83ca-bfe3c14b36d1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19255, 581, 323, 5, 71, "Subsection",ExpressionUUID->"1caa3d0b-d056-485a-a851-4800e7334a14"],
Cell[CellGroupData[{
Cell[19603, 590, 1603, 45, 70, "Input",ExpressionUUID->"44f62343-e899-40f9-a725-66c3ecc92b0f"],
Cell[21209, 637, 2682, 77, 101, "Output",ExpressionUUID->"09aff94b-55b4-4b6a-be80-14e7de0cf2ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23928, 719, 3563, 98, 162, "Input",ExpressionUUID->"19a66f6b-0b35-4f7e-83e1-0656b6104e91"],
Cell[27494, 819, 10934, 303, 251, "Output",ExpressionUUID->"ea4b0c8e-f837-4eb2-8972-5656d651fd4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38465, 1127, 11920, 322, 344, "Input",ExpressionUUID->"431fb547-227d-4857-8ae3-02efdc03a975"],
Cell[50388, 1451, 4026, 115, 161, "Output",ExpressionUUID->"442008da-452d-4a60-ad6a-cc30161b0bb2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54451, 1571, 5273, 145, 227, "Input",ExpressionUUID->"98d510fe-e10d-4f91-91ad-c4966774e45b"],
Cell[59727, 1718, 2647, 74, 139, "Output",ExpressionUUID->"a2fa1460-49af-4079-bc95-7a8e28f0847b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[62423, 1798, 169, 3, 71, "Subsection",ExpressionUUID->"b31af8cc-1fe8-41ea-a767-16f37464899b"],
Cell[CellGroupData[{
Cell[62617, 1805, 500, 9, 40, "Input",ExpressionUUID->"ef88a5c3-a76f-4625-9f69-9c2bcfcbb952"],
Cell[63120, 1816, 2822, 80, 139, "Output",ExpressionUUID->"4e35167e-857e-4928-ae60-d94c26c9d2d4"]
}, Open  ]],
Cell[65957, 1899, 3472, 89, 137, "Input",ExpressionUUID->"cb72c9c6-bf89-4413-b74a-cc90ee7b3c67"],
Cell[CellGroupData[{
Cell[69454, 1992, 728, 17, 40, "Input",ExpressionUUID->"dda4141a-939b-44bf-ad75-b61380c42acb"],
Cell[70185, 2011, 1705, 50, 119, "Output",ExpressionUUID->"5541e418-573f-4402-b1b6-f9f8325b5d74"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71951, 2068, 154, 3, 88, "Section",ExpressionUUID->"45c2710f-14b2-40d5-bf7b-f164351a57ca"],
Cell[CellGroupData[{
Cell[72130, 2075, 1747, 45, 40, "Input",ExpressionUUID->"d91ea7f8-7c5a-4f29-870f-5795ce56694b"],
Cell[73880, 2122, 277037, 4502, 335, "Output",ExpressionUUID->"7b62122a-8739-495d-8350-8fbb688bcd6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350954, 6629, 1822, 46, 70, "Input",ExpressionUUID->"c5dd6b9b-082d-47d7-a21c-f01d11eda076"],
Cell[352779, 6677, 2341, 45, 407, "Output",ExpressionUUID->"851b19a6-17a2-41b6-802e-85c4333c7222"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[355169, 6728, 185, 3, 88, "Section",ExpressionUUID->"50acb8cd-4756-4c56-a044-95788541c049"],
Cell[CellGroupData[{
Cell[355379, 6735, 764, 18, 40, "Input",ExpressionUUID->"1411d475-5dd1-4787-8093-b3714f113bbe"],
Cell[356146, 6755, 3112, 88, 165, "Output",ExpressionUUID->"6b9ed57e-7497-4559-a3aa-09bacb8aa62b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359295, 6848, 1560, 37, 70, "Input",ExpressionUUID->"0f729bca-cdc9-4f8b-b1b3-217e53b13098"],
Cell[360858, 6887, 2962, 84, 165, "Output",ExpressionUUID->"fa99df10-4bc8-4282-9049-7d59508f93d9"],
Cell[363823, 6973, 2068, 61, 111, "Output",ExpressionUUID->"784ea4d4-5f20-406a-a522-57845884e239"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

